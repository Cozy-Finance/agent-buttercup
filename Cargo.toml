[workspace]
members = [
    "lib/bindings",
    "lib/simulate",
    "lib/onchain",
    "binder"
]

[package]
name = "arbiter"
version = "0.2.0"
edition = "2021"

[dependencies]
# Local
simulate = {path = "lib/simulate"}
onchain = {path = "lib/onchain"}
bindings = {path = "lib/bindings"}
binder = {path = "binder"}

# Primitive
visualize = { git = "https://github.com/primitivefinance/visualization-rs.git"}

# Error handling
thiserror = "1.0.40"

# External
tokio = { version = "1.28.1", features = [
    "macros",
    "full"
]}
clap = { version = "4.3.0", features = ["derive"] }
serde = { version = "1.0.163", features =["derive"] }
eyre = "0.6.8"
toml = "0.7.4"
ethers = { version = "2", default-features = false, features = ["abigen"] }
csv = "1.2.1"
itertools-num = "0.1.3"
rand = "0.7.3"
lazy_static = "1.4.0"

# revm and related
revm = "3.3.0"
bytes = "1.4.0"
hex = { version = "0.4.3", default-features = false }
ruint = "1.8.0"

# Simulation
crossbeam-channel = "0.5.8"
polars = "0.29.0"

[dev-dependencies]
assert_cmd = "2.0.11"

# Release profile
[profile.release]
# Link-Time Optimization can inprove runtime at cost of build time
lto = true
# The Rust compiler splits your crate into multiple codegen units to parallelize (and thus speed up) compilation but at the cost of optimization. 
# This setting tells the compiler to use only one codegen unit, which will slow down compilation but improve optimization.
codegen-units = 1