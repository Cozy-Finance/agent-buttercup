pub use cost_model_jump_rate::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod cost_model_jump_rate {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_kink\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_costFactorAtZeroUtilization\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_costFactorAtKinkUtilization\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_costFactorAtFullUtilization\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidConfiguration\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidReferencePoint\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidUtilization\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromUtilization\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_toUtilization\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"costFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"costFactorAtFullUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"costFactorAtKinkUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"costFactorAtZeroUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"kink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromUtilization\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_toUtilization\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"refundFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"registerSet\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromUtilization\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_toUtilization\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"update\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static COSTMODELJUMPRATE_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        97,
        1,
        0,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        94,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        144,
        129,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        131,
        1,
        82,
        96,
        132,
        130,
        253,
        91,
        80,
        96,
        64,
        81,
        97,
        13,
        5,
        56,
        3,
        128,
        97,
        13,
        5,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        125,
        145,
        97,
        1,
        56,
        86,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        17,
        21,
        97,
        0,
        166,
        87,
        96,
        64,
        81,
        99,
        197,
        42,
        155,
        211,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        131,
        17,
        21,
        97,
        0,
        207,
        87,
        96,
        64,
        81,
        99,
        197,
        42,
        155,
        211,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        130,
        17,
        21,
        97,
        0,
        248,
        87,
        96,
        64,
        81,
        99,
        197,
        42,
        155,
        211,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        129,
        17,
        21,
        97,
        1,
        33,
        87,
        96,
        64,
        81,
        99,
        197,
        42,
        155,
        211,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        224,
        147,
        144,
        147,
        82,
        96,
        128,
        145,
        144,
        145,
        82,
        96,
        160,
        82,
        96,
        192,
        82,
        97,
        1,
        185,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        1,
        153,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        129,
        253,
        91,
        80,
        80,
        130,
        81,
        96,
        32,
        132,
        1,
        81,
        96,
        64,
        133,
        1,
        81,
        96,
        96,
        144,
        149,
        1,
        81,
        145,
        150,
        144,
        149,
        80,
        144,
        146,
        80,
        144,
        80,
        86,
        91,
        96,
        128,
        81,
        96,
        160,
        81,
        96,
        192,
        81,
        96,
        224,
        81,
        97,
        10,
        86,
        97,
        2,
        175,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        97,
        2,
        0,
        1,
        82,
        129,
        129,
        97,
        3,
        168,
        1,
        82,
        129,
        129,
        97,
        3,
        248,
        1,
        82,
        129,
        129,
        97,
        4,
        34,
        1,
        82,
        129,
        129,
        97,
        4,
        84,
        1,
        82,
        129,
        129,
        97,
        5,
        34,
        1,
        82,
        129,
        129,
        97,
        5,
        73,
        1,
        82,
        129,
        129,
        97,
        5,
        113,
        1,
        82,
        129,
        129,
        97,
        5,
        152,
        1,
        82,
        129,
        129,
        97,
        6,
        0,
        1,
        82,
        129,
        129,
        97,
        6,
        39,
        1,
        82,
        129,
        129,
        97,
        6,
        79,
        1,
        82,
        129,
        129,
        97,
        6,
        118,
        1,
        82,
        129,
        129,
        97,
        6,
        158,
        1,
        82,
        129,
        129,
        97,
        7,
        33,
        1,
        82,
        129,
        129,
        97,
        7,
        80,
        1,
        82,
        97,
        7,
        204,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        179,
        1,
        82,
        129,
        129,
        97,
        3,
        130,
        1,
        82,
        97,
        8,
        31,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        83,
        1,
        82,
        129,
        129,
        97,
        3,
        208,
        1,
        82,
        129,
        129,
        97,
        4,
        123,
        1,
        82,
        129,
        129,
        97,
        6,
        191,
        1,
        82,
        129,
        129,
        97,
        7,
        154,
        1,
        82,
        97,
        7,
        254,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        140,
        1,
        82,
        129,
        129,
        97,
        3,
        76,
        1,
        82,
        129,
        129,
        97,
        4,
        161,
        1,
        82,
        129,
        129,
        97,
        5,
        194,
        1,
        82,
        97,
        7,
        121,
        1,
        82,
        97,
        10,
        86,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        93,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        144,
        129,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        131,
        1,
        82,
        96,
        132,
        130,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        213,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        207,
        208,
        250,
        201,
        17,
        97,
        0,
        168,
        87,
        128,
        99,
        207,
        208,
        250,
        201,
        20,
        97,
        1,
        174,
        87,
        128,
        99,
        215,
        200,
        86,
        179,
        20,
        97,
        1,
        213,
        87,
        128,
        99,
        224,
        53,
        203,
        202,
        20,
        97,
        1,
        232,
        87,
        128,
        99,
        253,
        45,
        163,
        57,
        20,
        97,
        1,
        251,
        87,
        97,
        0,
        213,
        86,
        91,
        128,
        99,
        47,
        181,
        101,
        232,
        20,
        97,
        1,
        58,
        87,
        128,
        99,
        59,
        27,
        101,
        32,
        20,
        97,
        1,
        76,
        87,
        128,
        99,
        162,
        97,
        78,
        159,
        20,
        97,
        1,
        78,
        87,
        128,
        99,
        185,
        42,
        98,
        15,
        20,
        97,
        1,
        135,
        87,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        53,
        96,
        36,
        130,
        1,
        82,
        127,
        67,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        100,
        111,
        101,
        115,
        32,
        110,
        111,
        116,
        32,
        104,
        97,
        118,
        101,
        32,
        102,
        97,
        108,
        108,
        98,
        97,
        99,
        107,
        32,
        96,
        68,
        130,
        1,
        144,
        129,
        82,
        116,
        110,
        111,
        114,
        32,
        114,
        101,
        99,
        101,
        105,
        118,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        115,
        96,
        88,
        27,
        96,
        100,
        131,
        1,
        82,
        96,
        132,
        130,
        253,
        91,
        97,
        1,
        76,
        97,
        1,
        72,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        80,
        80,
        86,
        91,
        0,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        117,
        97,
        1,
        227,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        97,
        2,
        34,
        86,
        91,
        97,
        1,
        117,
        97,
        1,
        246,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        97,
        2,
        199,
        86,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        2,
        69,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        130,
        17,
        21,
        97,
        2,
        110,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        131,
        3,
        97,
        2,
        133,
        87,
        97,
        2,
        126,
        130,
        97,
        3,
        66,
        86,
        91,
        144,
        80,
        97,
        2,
        193,
        86,
        91,
        96,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        2,
        154,
        133,
        133,
        97,
        9,
        193,
        86,
        91,
        97,
        2,
        164,
        145,
        144,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        97,
        2,
        189,
        96,
        1,
        130,
        97,
        2,
        182,
        135,
        135,
        97,
        4,
        238,
        86,
        91,
        145,
        144,
        97,
        6,
        239,
        86,
        91,
        145,
        80,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        16,
        21,
        97,
        2,
        234,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        131,
        3,
        97,
        2,
        249,
        87,
        80,
        96,
        0,
        97,
        2,
        193,
        86,
        91,
        96,
        0,
        97,
        3,
        5,
        131,
        133,
        97,
        4,
        238,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        3,
        20,
        96,
        0,
        134,
        97,
        4,
        238,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        3,
        42,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        129,
        97,
        3,
        55,
        129,
        131,
        97,
        9,
        235,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        97,
        3,
        112,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        130,
        3,
        97,
        3,
        166,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        3,
        97,
        3,
        244,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        16,
        97,
        4,
        76,
        87,
        97,
        4,
        71,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        97,
        9,
        193,
        86,
        91,
        97,
        4,
        78,
        86,
        91,
        130,
        91,
        144,
        80,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        16,
        97,
        4,
        159,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        4,
        193,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        91,
        144,
        80,
        96,
        0,
        97,
        4,
        206,
        133,
        97,
        7,
        29,
        86,
        91,
        144,
        80,
        129,
        97,
        4,
        219,
        132,
        131,
        97,
        8,
        67,
        86,
        91,
        97,
        4,
        229,
        145,
        144,
        97,
        10,
        13,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        5,
        17,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        5,
        230,
        97,
        5,
        32,
        96,
        0,
        97,
        7,
        29,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        134,
        16,
        97,
        5,
        109,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        5,
        111,
        86,
        91,
        133,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        134,
        16,
        97,
        5,
        188,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        5,
        190,
        86,
        91,
        133,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        95,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        227,
        97,
        5,
        254,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        7,
        29,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        135,
        17,
        97,
        6,
        75,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        6,
        77,
        86,
        91,
        134,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        135,
        17,
        97,
        6,
        154,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        6,
        156,
        86,
        91,
        134,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        95,
        86,
        91,
        144,
        80,
        97,
        4,
        229,
        129,
        131,
        97,
        10,
        13,
        86,
        91,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        7,
        7,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        130,
        96,
        1,
        131,
        3,
        4,
        1,
        129,
        21,
        21,
        2,
        144,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        17,
        97,
        7,
        196,
        87,
        97,
        2,
        193,
        97,
        7,
        116,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        97,
        7,
        190,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        144,
        97,
        9,
        15,
        86,
        91,
        97,
        2,
        193,
        97,
        7,
        249,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        97,
        7,
        190,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        96,
        0,
        97,
        8,
        88,
        131,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        6,
        239,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        133,
        16,
        21,
        97,
        8,
        130,
        87,
        96,
        64,
        81,
        99,
        3,
        11,
        64,
        17,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        8,
        142,
        134,
        134,
        97,
        9,
        193,
        86,
        91,
        144,
        80,
        96,
        0,
        96,
        2,
        97,
        8,
        158,
        131,
        138,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        168,
        144,
        132,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        178,
        145,
        144,
        97,
        9,
        235,
        86,
        91,
        144,
        80,
        96,
        0,
        136,
        97,
        8,
        193,
        135,
        138,
        97,
        9,
        193,
        86,
        91,
        97,
        8,
        203,
        145,
        144,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        221,
        134,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        231,
        145,
        144,
        97,
        10,
        13,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        8,
        245,
        132,
        131,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        97,
        9,
        1,
        129,
        132,
        97,
        10,
        13,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        8,
        88,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        9,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        4,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        9,
        156,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        129,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        91,
        96,
        0,
        130,
        97,
        10,
        8,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        109,
        57,
        164,
        242,
        100,
        122,
        191,
        155,
        15,
        204,
        54,
        149,
        134,
        253,
        182,
        71,
        175,
        231,
        52,
        183,
        157,
        164,
        158,
        178,
        14,
        198,
        138,
        71,
        110,
        137,
        7,
        206,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static COSTMODELJUMPRATE_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        93,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        144,
        129,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        131,
        1,
        82,
        96,
        132,
        130,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        213,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        207,
        208,
        250,
        201,
        17,
        97,
        0,
        168,
        87,
        128,
        99,
        207,
        208,
        250,
        201,
        20,
        97,
        1,
        174,
        87,
        128,
        99,
        215,
        200,
        86,
        179,
        20,
        97,
        1,
        213,
        87,
        128,
        99,
        224,
        53,
        203,
        202,
        20,
        97,
        1,
        232,
        87,
        128,
        99,
        253,
        45,
        163,
        57,
        20,
        97,
        1,
        251,
        87,
        97,
        0,
        213,
        86,
        91,
        128,
        99,
        47,
        181,
        101,
        232,
        20,
        97,
        1,
        58,
        87,
        128,
        99,
        59,
        27,
        101,
        32,
        20,
        97,
        1,
        76,
        87,
        128,
        99,
        162,
        97,
        78,
        159,
        20,
        97,
        1,
        78,
        87,
        128,
        99,
        185,
        42,
        98,
        15,
        20,
        97,
        1,
        135,
        87,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        53,
        96,
        36,
        130,
        1,
        82,
        127,
        67,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        100,
        111,
        101,
        115,
        32,
        110,
        111,
        116,
        32,
        104,
        97,
        118,
        101,
        32,
        102,
        97,
        108,
        108,
        98,
        97,
        99,
        107,
        32,
        96,
        68,
        130,
        1,
        144,
        129,
        82,
        116,
        110,
        111,
        114,
        32,
        114,
        101,
        99,
        101,
        105,
        118,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        115,
        96,
        88,
        27,
        96,
        100,
        131,
        1,
        82,
        96,
        132,
        130,
        253,
        91,
        97,
        1,
        76,
        97,
        1,
        72,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        80,
        80,
        86,
        91,
        0,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        117,
        97,
        1,
        227,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        97,
        2,
        34,
        86,
        91,
        97,
        1,
        117,
        97,
        1,
        246,
        54,
        96,
        4,
        97,
        9,
        62,
        86,
        91,
        97,
        2,
        199,
        86,
        91,
        97,
        1,
        117,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        2,
        69,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        130,
        17,
        21,
        97,
        2,
        110,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        131,
        3,
        97,
        2,
        133,
        87,
        97,
        2,
        126,
        130,
        97,
        3,
        66,
        86,
        91,
        144,
        80,
        97,
        2,
        193,
        86,
        91,
        96,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        2,
        154,
        133,
        133,
        97,
        9,
        193,
        86,
        91,
        97,
        2,
        164,
        145,
        144,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        97,
        2,
        189,
        96,
        1,
        130,
        97,
        2,
        182,
        135,
        135,
        97,
        4,
        238,
        86,
        91,
        145,
        144,
        97,
        6,
        239,
        86,
        91,
        145,
        80,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        131,
        16,
        21,
        97,
        2,
        234,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        131,
        3,
        97,
        2,
        249,
        87,
        80,
        96,
        0,
        97,
        2,
        193,
        86,
        91,
        96,
        0,
        97,
        3,
        5,
        131,
        133,
        97,
        4,
        238,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        3,
        20,
        96,
        0,
        134,
        97,
        4,
        238,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        3,
        42,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        129,
        97,
        3,
        55,
        129,
        131,
        97,
        9,
        235,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        97,
        3,
        112,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        130,
        3,
        97,
        3,
        166,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        3,
        97,
        3,
        244,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        16,
        97,
        4,
        76,
        87,
        97,
        4,
        71,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        97,
        9,
        193,
        86,
        91,
        97,
        4,
        78,
        86,
        91,
        130,
        91,
        144,
        80,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        132,
        16,
        97,
        4,
        159,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        4,
        193,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        91,
        144,
        80,
        96,
        0,
        97,
        4,
        206,
        133,
        97,
        7,
        29,
        86,
        91,
        144,
        80,
        129,
        97,
        4,
        219,
        132,
        131,
        97,
        8,
        67,
        86,
        91,
        97,
        4,
        229,
        145,
        144,
        97,
        10,
        13,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        130,
        16,
        21,
        97,
        5,
        17,
        87,
        96,
        64,
        81,
        99,
        37,
        6,
        46,
        37,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        5,
        230,
        97,
        5,
        32,
        96,
        0,
        97,
        7,
        29,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        134,
        16,
        97,
        5,
        109,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        5,
        111,
        86,
        91,
        133,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        134,
        16,
        97,
        5,
        188,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        5,
        190,
        86,
        91,
        133,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        95,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        6,
        227,
        97,
        5,
        254,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        7,
        29,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        135,
        17,
        97,
        6,
        75,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        6,
        77,
        86,
        91,
        134,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        135,
        17,
        97,
        6,
        154,
        87,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        6,
        156,
        86,
        91,
        134,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        95,
        86,
        91,
        144,
        80,
        97,
        4,
        229,
        129,
        131,
        97,
        10,
        13,
        86,
        91,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        7,
        7,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        130,
        96,
        1,
        131,
        3,
        4,
        1,
        129,
        21,
        21,
        2,
        144,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        17,
        97,
        7,
        196,
        87,
        97,
        2,
        193,
        97,
        7,
        116,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        97,
        7,
        190,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        144,
        97,
        9,
        15,
        86,
        91,
        97,
        2,
        193,
        97,
        7,
        249,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        97,
        7,
        190,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        9,
        193,
        86,
        91,
        96,
        0,
        97,
        8,
        88,
        131,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        6,
        239,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        133,
        16,
        21,
        97,
        8,
        130,
        87,
        96,
        64,
        81,
        99,
        3,
        11,
        64,
        17,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        8,
        142,
        134,
        134,
        97,
        9,
        193,
        86,
        91,
        144,
        80,
        96,
        0,
        96,
        2,
        97,
        8,
        158,
        131,
        138,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        168,
        144,
        132,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        178,
        145,
        144,
        97,
        9,
        235,
        86,
        91,
        144,
        80,
        96,
        0,
        136,
        97,
        8,
        193,
        135,
        138,
        97,
        9,
        193,
        86,
        91,
        97,
        8,
        203,
        145,
        144,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        221,
        134,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        9,
        212,
        86,
        91,
        97,
        8,
        231,
        145,
        144,
        97,
        10,
        13,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        8,
        245,
        132,
        131,
        97,
        9,
        212,
        86,
        91,
        144,
        80,
        97,
        9,
        1,
        129,
        132,
        97,
        10,
        13,
        86,
        91,
        154,
        153,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        8,
        88,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        132,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        9,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        4,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        9,
        156,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        129,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        91,
        96,
        0,
        130,
        97,
        10,
        8,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        2,
        193,
        87,
        97,
        2,
        193,
        97,
        9,
        171,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        109,
        57,
        164,
        242,
        100,
        122,
        191,
        155,
        15,
        204,
        54,
        149,
        134,
        253,
        182,
        71,
        175,
        231,
        52,
        183,
        157,
        164,
        158,
        178,
        14,
        198,
        138,
        71,
        110,
        137,
        7,
        206,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static COSTMODELJUMPRATE_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct CostModelJumpRate<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for CostModelJumpRate<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for CostModelJumpRate<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for CostModelJumpRate<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for CostModelJumpRate<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(CostModelJumpRate)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> CostModelJumpRate<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    COSTMODELJUMPRATE_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                COSTMODELJUMPRATE_ABI.clone(),
                COSTMODELJUMPRATE_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `costFactor` (0xd7c856b3) function
        pub fn cost_factor(
            &self,
            from_utilization: ::ethers::core::types::U256,
            to_utilization: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([215, 200, 86, 179], (from_utilization, to_utilization))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `costFactorAtFullUtilization` (0xcfd0fac9) function
        pub fn cost_factor_at_full_utilization(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([207, 208, 250, 201], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `costFactorAtKinkUtilization` (0xa2614e9f) function
        pub fn cost_factor_at_kink_utilization(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([162, 97, 78, 159], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `costFactorAtZeroUtilization` (0xb92a620f) function
        pub fn cost_factor_at_zero_utilization(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([185, 42, 98, 15], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `kink` (0xfd2da339) function
        pub fn kink(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([253, 45, 163, 57], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `refundFactor` (0xe035cbca) function
        pub fn refund_factor(
            &self,
            from_utilization: ::ethers::core::types::U256,
            to_utilization: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([224, 53, 203, 202], (from_utilization, to_utilization))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `registerSet` (0x3b1b6520) function
        pub fn register_set(&self) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([59, 27, 101, 32], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `update` (0x2fb565e8) function
        pub fn update(
            &self,
            from_utilization: ::ethers::core::types::U256,
            to_utilization: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([47, 181, 101, 232], (from_utilization, to_utilization))
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for CostModelJumpRate<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `InvalidConfiguration` with signature `InvalidConfiguration()` and selector `0xc52a9bd3`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidConfiguration", abi = "InvalidConfiguration()")]
    pub struct InvalidConfiguration;
    ///Custom Error type `InvalidReferencePoint` with signature `InvalidReferencePoint()` and selector `0x030b4011`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidReferencePoint", abi = "InvalidReferencePoint()")]
    pub struct InvalidReferencePoint;
    ///Custom Error type `InvalidUtilization` with signature `InvalidUtilization()` and selector `0x25062e25`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidUtilization", abi = "InvalidUtilization()")]
    pub struct InvalidUtilization;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum CostModelJumpRateErrors {
        InvalidConfiguration(InvalidConfiguration),
        InvalidReferencePoint(InvalidReferencePoint),
        InvalidUtilization(InvalidUtilization),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for CostModelJumpRateErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <InvalidConfiguration as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::InvalidConfiguration(decoded));
            }
            if let Ok(decoded)
                = <InvalidReferencePoint as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::InvalidReferencePoint(decoded));
            }
            if let Ok(decoded)
                = <InvalidUtilization as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidUtilization(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for CostModelJumpRateErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::InvalidConfiguration(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidReferencePoint(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidUtilization(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for CostModelJumpRateErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <InvalidConfiguration as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidReferencePoint as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidUtilization as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for CostModelJumpRateErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::InvalidConfiguration(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::InvalidReferencePoint(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::InvalidUtilization(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for CostModelJumpRateErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<InvalidConfiguration> for CostModelJumpRateErrors {
        fn from(value: InvalidConfiguration) -> Self {
            Self::InvalidConfiguration(value)
        }
    }
    impl ::core::convert::From<InvalidReferencePoint> for CostModelJumpRateErrors {
        fn from(value: InvalidReferencePoint) -> Self {
            Self::InvalidReferencePoint(value)
        }
    }
    impl ::core::convert::From<InvalidUtilization> for CostModelJumpRateErrors {
        fn from(value: InvalidUtilization) -> Self {
            Self::InvalidUtilization(value)
        }
    }
    ///Container type for all input parameters for the `costFactor` function with signature `costFactor(uint256,uint256)` and selector `0xd7c856b3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "costFactor", abi = "costFactor(uint256,uint256)")]
    pub struct CostFactorCall {
        pub from_utilization: ::ethers::core::types::U256,
        pub to_utilization: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `costFactorAtFullUtilization` function with signature `costFactorAtFullUtilization()` and selector `0xcfd0fac9`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "costFactorAtFullUtilization",
        abi = "costFactorAtFullUtilization()"
    )]
    pub struct CostFactorAtFullUtilizationCall;
    ///Container type for all input parameters for the `costFactorAtKinkUtilization` function with signature `costFactorAtKinkUtilization()` and selector `0xa2614e9f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "costFactorAtKinkUtilization",
        abi = "costFactorAtKinkUtilization()"
    )]
    pub struct CostFactorAtKinkUtilizationCall;
    ///Container type for all input parameters for the `costFactorAtZeroUtilization` function with signature `costFactorAtZeroUtilization()` and selector `0xb92a620f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "costFactorAtZeroUtilization",
        abi = "costFactorAtZeroUtilization()"
    )]
    pub struct CostFactorAtZeroUtilizationCall;
    ///Container type for all input parameters for the `kink` function with signature `kink()` and selector `0xfd2da339`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "kink", abi = "kink()")]
    pub struct KinkCall;
    ///Container type for all input parameters for the `refundFactor` function with signature `refundFactor(uint256,uint256)` and selector `0xe035cbca`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "refundFactor", abi = "refundFactor(uint256,uint256)")]
    pub struct RefundFactorCall {
        pub from_utilization: ::ethers::core::types::U256,
        pub to_utilization: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `registerSet` function with signature `registerSet()` and selector `0x3b1b6520`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "registerSet", abi = "registerSet()")]
    pub struct RegisterSetCall;
    ///Container type for all input parameters for the `update` function with signature `update(uint256,uint256)` and selector `0x2fb565e8`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "update", abi = "update(uint256,uint256)")]
    pub struct UpdateCall {
        pub from_utilization: ::ethers::core::types::U256,
        pub to_utilization: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum CostModelJumpRateCalls {
        CostFactor(CostFactorCall),
        CostFactorAtFullUtilization(CostFactorAtFullUtilizationCall),
        CostFactorAtKinkUtilization(CostFactorAtKinkUtilizationCall),
        CostFactorAtZeroUtilization(CostFactorAtZeroUtilizationCall),
        Kink(KinkCall),
        RefundFactor(RefundFactorCall),
        RegisterSet(RegisterSetCall),
        Update(UpdateCall),
    }
    impl ::ethers::core::abi::AbiDecode for CostModelJumpRateCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <CostFactorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CostFactor(decoded));
            }
            if let Ok(decoded)
                = <CostFactorAtFullUtilizationCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CostFactorAtFullUtilization(decoded));
            }
            if let Ok(decoded)
                = <CostFactorAtKinkUtilizationCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CostFactorAtKinkUtilization(decoded));
            }
            if let Ok(decoded)
                = <CostFactorAtZeroUtilizationCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CostFactorAtZeroUtilization(decoded));
            }
            if let Ok(decoded)
                = <KinkCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Kink(decoded));
            }
            if let Ok(decoded)
                = <RefundFactorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RefundFactor(decoded));
            }
            if let Ok(decoded)
                = <RegisterSetCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RegisterSet(decoded));
            }
            if let Ok(decoded)
                = <UpdateCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Update(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for CostModelJumpRateCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::CostFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CostFactorAtFullUtilization(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CostFactorAtKinkUtilization(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CostFactorAtZeroUtilization(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Kink(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RefundFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RegisterSet(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Update(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for CostModelJumpRateCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::CostFactor(element) => ::core::fmt::Display::fmt(element, f),
                Self::CostFactorAtFullUtilization(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::CostFactorAtKinkUtilization(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::CostFactorAtZeroUtilization(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::Kink(element) => ::core::fmt::Display::fmt(element, f),
                Self::RefundFactor(element) => ::core::fmt::Display::fmt(element, f),
                Self::RegisterSet(element) => ::core::fmt::Display::fmt(element, f),
                Self::Update(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<CostFactorCall> for CostModelJumpRateCalls {
        fn from(value: CostFactorCall) -> Self {
            Self::CostFactor(value)
        }
    }
    impl ::core::convert::From<CostFactorAtFullUtilizationCall>
    for CostModelJumpRateCalls {
        fn from(value: CostFactorAtFullUtilizationCall) -> Self {
            Self::CostFactorAtFullUtilization(value)
        }
    }
    impl ::core::convert::From<CostFactorAtKinkUtilizationCall>
    for CostModelJumpRateCalls {
        fn from(value: CostFactorAtKinkUtilizationCall) -> Self {
            Self::CostFactorAtKinkUtilization(value)
        }
    }
    impl ::core::convert::From<CostFactorAtZeroUtilizationCall>
    for CostModelJumpRateCalls {
        fn from(value: CostFactorAtZeroUtilizationCall) -> Self {
            Self::CostFactorAtZeroUtilization(value)
        }
    }
    impl ::core::convert::From<KinkCall> for CostModelJumpRateCalls {
        fn from(value: KinkCall) -> Self {
            Self::Kink(value)
        }
    }
    impl ::core::convert::From<RefundFactorCall> for CostModelJumpRateCalls {
        fn from(value: RefundFactorCall) -> Self {
            Self::RefundFactor(value)
        }
    }
    impl ::core::convert::From<RegisterSetCall> for CostModelJumpRateCalls {
        fn from(value: RegisterSetCall) -> Self {
            Self::RegisterSet(value)
        }
    }
    impl ::core::convert::From<UpdateCall> for CostModelJumpRateCalls {
        fn from(value: UpdateCall) -> Self {
            Self::Update(value)
        }
    }
    ///Container type for all return fields from the `costFactor` function with signature `costFactor(uint256,uint256)` and selector `0xd7c856b3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CostFactorReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `costFactorAtFullUtilization` function with signature `costFactorAtFullUtilization()` and selector `0xcfd0fac9`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CostFactorAtFullUtilizationReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `costFactorAtKinkUtilization` function with signature `costFactorAtKinkUtilization()` and selector `0xa2614e9f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CostFactorAtKinkUtilizationReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `costFactorAtZeroUtilization` function with signature `costFactorAtZeroUtilization()` and selector `0xb92a620f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CostFactorAtZeroUtilizationReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `kink` function with signature `kink()` and selector `0xfd2da339`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct KinkReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `refundFactor` function with signature `refundFactor(uint256,uint256)` and selector `0xe035cbca`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RefundFactorReturn(pub ::ethers::core::types::U256);
}
