pub use chainlink_trigger::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod chainlink_trigger {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"contract IManager\",\"name\":\"_manager\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_truthOracle\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_trackingOracle\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_priceTolerance\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_truthFrequencyTolerance\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_trackingFrequencyTolerance\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidPrice\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidPriceTolerance\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidStateTransition\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidTimestamp\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"SetLimitReached\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"StaleOraclePrice\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Unacknowledged\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Unauthorized\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"set\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"SetAdded\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"enum MarketState\",\"name\":\"state\",\"type\":\"uint8\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"TriggerStateUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"MAX_SET_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"acknowledged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"_set\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getSets\",\"outputs\":[{\"internalType\":\"contract ISet[]\",\"name\":\"\",\"type\":\"address[]\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getSetsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"manager\",\"outputs\":[{\"internalType\":\"contract IManager\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"oracleToScale\",\"outputs\":[{\"internalType\":\"enum ChainlinkTrigger.OracleToScale\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"priceTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"runProgrammaticCheck\",\"outputs\":[{\"internalType\":\"enum MarketState\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"scaleFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"sets\",\"outputs\":[{\"internalType\":\"contract ISet\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum MarketState\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"trackingFrequencyTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"trackingOracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"truthFrequencyTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"truthOracle\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static CHAINLINKTRIGGER_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        97,
        1,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        98,
        0,
        0,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        0,
        26,
        53,
        56,
        3,
        128,
        98,
        0,
        26,
        53,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        98,
        0,
        0,
        53,
        145,
        98,
        0,
        7,
        126,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        22,
        96,
        128,
        82,
        97,
        39,
        16,
        131,
        16,
        98,
        0,
        0,
        101,
        87,
        96,
        64,
        81,
        99,
        80,
        143,
        57,
        63,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        134,
        22,
        96,
        160,
        129,
        144,
        82,
        144,
        133,
        22,
        96,
        192,
        82,
        96,
        224,
        132,
        144,
        82,
        97,
        1,
        0,
        131,
        144,
        82,
        97,
        1,
        32,
        130,
        144,
        82,
        96,
        64,
        128,
        81,
        99,
        49,
        60,
        229,
        103,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        0,
        146,
        131,
        146,
        131,
        146,
        99,
        49,
        60,
        229,
        103,
        145,
        96,
        4,
        128,
        130,
        1,
        146,
        96,
        32,
        146,
        144,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        98,
        0,
        0,
        207,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        98,
        0,
        0,
        245,
        145,
        144,
        98,
        0,
        7,
        238,
        86,
        91,
        96,
        255,
        22,
        144,
        80,
        96,
        0,
        96,
        192,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        49,
        60,
        229,
        103,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        98,
        0,
        1,
        61,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        98,
        0,
        1,
        99,
        145,
        144,
        98,
        0,
        7,
        238,
        86,
        91,
        96,
        255,
        22,
        144,
        80,
        129,
        129,
        16,
        21,
        98,
        0,
        1,
        150,
        87,
        96,
        2,
        147,
        80,
        98,
        0,
        1,
        129,
        129,
        131,
        98,
        0,
        8,
        48,
        86,
        91,
        98,
        0,
        1,
        142,
        144,
        96,
        10,
        98,
        0,
        9,
        67,
        86,
        91,
        146,
        80,
        98,
        0,
        1,
        191,
        86,
        91,
        128,
        130,
        16,
        21,
        98,
        0,
        1,
        191,
        87,
        96,
        1,
        147,
        80,
        98,
        0,
        1,
        175,
        130,
        130,
        98,
        0,
        8,
        48,
        86,
        91,
        98,
        0,
        1,
        188,
        144,
        96,
        10,
        98,
        0,
        9,
        67,
        86,
        91,
        146,
        80,
        91,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        1,
        212,
        87,
        98,
        0,
        1,
        212,
        98,
        0,
        9,
        81,
        86,
        91,
        97,
        1,
        96,
        129,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        1,
        236,
        87,
        98,
        0,
        1,
        236,
        98,
        0,
        9,
        81,
        86,
        91,
        144,
        82,
        80,
        97,
        1,
        64,
        131,
        144,
        82,
        98,
        0,
        1,
        255,
        98,
        0,
        2,
        16,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        98,
        0,
        10,
        58,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        84,
        96,
        255,
        22,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        2,
        45,
        87,
        98,
        0,
        2,
        45,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        98,
        0,
        2,
        61,
        87,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        98,
        0,
        2,
        71,
        98,
        0,
        2,
        104,
        86,
        91,
        21,
        98,
        0,
        2,
        94,
        87,
        98,
        0,
        2,
        89,
        96,
        2,
        98,
        0,
        3,
        112,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        0,
        128,
        98,
        0,
        2,
        130,
        96,
        160,
        81,
        97,
        1,
        0,
        81,
        98,
        0,
        4,
        187,
        96,
        32,
        27,
        96,
        32,
        28,
        86,
        91,
        144,
        80,
        96,
        0,
        98,
        0,
        2,
        157,
        96,
        192,
        81,
        97,
        1,
        32,
        81,
        98,
        0,
        4,
        187,
        96,
        32,
        27,
        96,
        32,
        28,
        86,
        91,
        144,
        80,
        96,
        1,
        97,
        1,
        96,
        81,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        2,
        185,
        87,
        98,
        0,
        2,
        185,
        98,
        0,
        9,
        81,
        86,
        91,
        3,
        98,
        0,
        2,
        215,
        87,
        97,
        1,
        64,
        81,
        98,
        0,
        2,
        207,
        144,
        131,
        98,
        0,
        9,
        103,
        86,
        91,
        145,
        80,
        98,
        0,
        3,
        10,
        86,
        91,
        96,
        2,
        97,
        1,
        96,
        81,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        2,
        241,
        87,
        98,
        0,
        2,
        241,
        98,
        0,
        9,
        81,
        86,
        91,
        3,
        98,
        0,
        3,
        10,
        87,
        97,
        1,
        64,
        81,
        98,
        0,
        3,
        7,
        144,
        130,
        98,
        0,
        9,
        103,
        86,
        91,
        144,
        80,
        91,
        96,
        0,
        129,
        131,
        17,
        98,
        0,
        3,
        38,
        87,
        98,
        0,
        3,
        32,
        131,
        131,
        98,
        0,
        8,
        48,
        86,
        91,
        98,
        0,
        3,
        50,
        86,
        91,
        98,
        0,
        3,
        50,
        130,
        132,
        98,
        0,
        8,
        48,
        86,
        91,
        144,
        80,
        96,
        0,
        131,
        17,
        98,
        0,
        3,
        69,
        87,
        96,
        1,
        98,
        0,
        3,
        104,
        86,
        91,
        96,
        224,
        81,
        98,
        0,
        3,
        102,
        97,
        39,
        16,
        133,
        132,
        98,
        0,
        5,
        165,
        96,
        32,
        27,
        98,
        0,
        6,
        133,
        23,
        144,
        146,
        145,
        144,
        96,
        32,
        28,
        86,
        91,
        17,
        91,
        147,
        80,
        80,
        80,
        80,
        144,
        86,
        91,
        96,
        0,
        128,
        84,
        98,
        0,
        3,
        131,
        144,
        96,
        255,
        22,
        131,
        98,
        0,
        5,
        212,
        86,
        91,
        98,
        0,
        3,
        161,
        87,
        96,
        64,
        81,
        99,
        35,
        230,
        158,
        3,
        96,
        226,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        131,
        145,
        144,
        96,
        255,
        25,
        22,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        3,
        195,
        87,
        98,
        0,
        3,
        195,
        98,
        0,
        9,
        81,
        86,
        91,
        2,
        23,
        144,
        85,
        80,
        96,
        1,
        84,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        98,
        0,
        4,
        117,
        87,
        96,
        1,
        129,
        129,
        84,
        129,
        16,
        98,
        0,
        3,
        237,
        87,
        98,
        0,
        3,
        237,
        98,
        0,
        9,
        137,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        96,
        64,
        81,
        99,
        61,
        58,
        254,
        239,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        144,
        99,
        122,
        117,
        253,
        222,
        144,
        98,
        0,
        4,
        40,
        144,
        135,
        144,
        96,
        4,
        1,
        98,
        0,
        9,
        159,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        98,
        0,
        4,
        67,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        98,
        0,
        4,
        88,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        98,
        0,
        4,
        109,
        129,
        98,
        0,
        7,
        95,
        96,
        32,
        27,
        96,
        32,
        28,
        86,
        91,
        144,
        80,
        98,
        0,
        3,
        206,
        86,
        91,
        80,
        130,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        4,
        139,
        87,
        98,
        0,
        4,
        139,
        98,
        0,
        9,
        81,
        86,
        91,
        96,
        64,
        81,
        127,
        226,
        174,
        3,
        160,
        208,
        98,
        123,
        52,
        21,
        34,
        0,
        49,
        22,
        147,
        186,
        64,
        147,
        147,
        199,
        209,
        235,
        221,
        10,
        36,
        107,
        163,
        192,
        37,
        58,
        188,
        38,
        63,
        144,
        96,
        0,
        144,
        162,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        254,
        175,
        150,
        140,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        160,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        98,
        0,
        4,
        255,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        98,
        0,
        5,
        37,
        145,
        144,
        98,
        0,
        9,
        229,
        86,
        91,
        80,
        147,
        80,
        80,
        146,
        80,
        80,
        66,
        129,
        17,
        21,
        98,
        0,
        5,
        78,
        87,
        96,
        64,
        81,
        99,
        183,
        208,
        148,
        151,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        131,
        98,
        0,
        5,
        91,
        130,
        66,
        98,
        0,
        8,
        48,
        86,
        91,
        17,
        21,
        98,
        0,
        5,
        123,
        87,
        96,
        64,
        81,
        99,
        21,
        16,
        254,
        91,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        130,
        18,
        21,
        98,
        0,
        5,
        157,
        87,
        96,
        64,
        81,
        98,
        191,
        201,
        33,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        98,
        0,
        5,
        190,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        130,
        96,
        1,
        131,
        3,
        4,
        1,
        129,
        21,
        21,
        2,
        144,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        2,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        5,
        237,
        87,
        98,
        0,
        5,
        237,
        98,
        0,
        9,
        81,
        86,
        91,
        3,
        98,
        0,
        5,
        252,
        87,
        80,
        96,
        0,
        98,
        0,
        7,
        89,
        86,
        91,
        129,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        17,
        87,
        98,
        0,
        6,
        17,
        98,
        0,
        9,
        81,
        86,
        91,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        38,
        87,
        98,
        0,
        6,
        38,
        98,
        0,
        9,
        81,
        86,
        91,
        3,
        98,
        0,
        6,
        53,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        76,
        87,
        98,
        0,
        6,
        76,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        128,
        21,
        98,
        0,
        6,
        110,
        87,
        80,
        96,
        1,
        130,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        108,
        87,
        98,
        0,
        6,
        108,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        91,
        21,
        98,
        0,
        6,
        125,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        148,
        87,
        98,
        0,
        6,
        148,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        128,
        21,
        98,
        0,
        6,
        182,
        87,
        80,
        96,
        0,
        130,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        180,
        87,
        98,
        0,
        6,
        180,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        91,
        21,
        98,
        0,
        6,
        197,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        220,
        87,
        98,
        0,
        6,
        220,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        128,
        21,
        98,
        0,
        6,
        254,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        6,
        252,
        87,
        98,
        0,
        6,
        252,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        91,
        21,
        98,
        0,
        7,
        13,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        7,
        36,
        87,
        98,
        0,
        7,
        36,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        128,
        21,
        98,
        0,
        7,
        70,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        98,
        0,
        7,
        68,
        87,
        98,
        0,
        7,
        68,
        98,
        0,
        9,
        81,
        86,
        91,
        20,
        91,
        21,
        98,
        0,
        7,
        85,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        80,
        96,
        0,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        7,
        123,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        192,
        135,
        137,
        3,
        18,
        21,
        98,
        0,
        7,
        152,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        81,
        98,
        0,
        7,
        165,
        129,
        98,
        0,
        7,
        101,
        86,
        91,
        96,
        32,
        136,
        1,
        81,
        144,
        150,
        80,
        98,
        0,
        7,
        184,
        129,
        98,
        0,
        7,
        101,
        86,
        91,
        96,
        64,
        136,
        1,
        81,
        144,
        149,
        80,
        98,
        0,
        7,
        203,
        129,
        98,
        0,
        7,
        101,
        86,
        91,
        128,
        148,
        80,
        80,
        96,
        96,
        135,
        1,
        81,
        146,
        80,
        96,
        128,
        135,
        1,
        81,
        145,
        80,
        96,
        160,
        135,
        1,
        81,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        80,
        146,
        149,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        98,
        0,
        8,
        1,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        255,
        129,
        22,
        129,
        20,
        98,
        0,
        8,
        19,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        98,
        0,
        7,
        89,
        87,
        98,
        0,
        7,
        89,
        98,
        0,
        8,
        26,
        86,
        91,
        96,
        1,
        129,
        129,
        91,
        128,
        133,
        17,
        21,
        98,
        0,
        8,
        135,
        87,
        129,
        96,
        0,
        25,
        4,
        130,
        17,
        21,
        98,
        0,
        8,
        107,
        87,
        98,
        0,
        8,
        107,
        98,
        0,
        8,
        26,
        86,
        91,
        128,
        133,
        22,
        21,
        98,
        0,
        8,
        121,
        87,
        145,
        129,
        2,
        145,
        91,
        147,
        132,
        28,
        147,
        144,
        128,
        2,
        144,
        98,
        0,
        8,
        75,
        86,
        91,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        130,
        98,
        0,
        8,
        160,
        87,
        80,
        96,
        1,
        98,
        0,
        7,
        89,
        86,
        91,
        129,
        98,
        0,
        8,
        175,
        87,
        80,
        96,
        0,
        98,
        0,
        7,
        89,
        86,
        91,
        129,
        96,
        1,
        129,
        20,
        98,
        0,
        8,
        200,
        87,
        96,
        2,
        129,
        20,
        98,
        0,
        8,
        211,
        87,
        98,
        0,
        8,
        243,
        86,
        91,
        96,
        1,
        145,
        80,
        80,
        98,
        0,
        7,
        89,
        86,
        91,
        96,
        255,
        132,
        17,
        21,
        98,
        0,
        8,
        231,
        87,
        98,
        0,
        8,
        231,
        98,
        0,
        8,
        26,
        86,
        91,
        80,
        80,
        96,
        1,
        130,
        27,
        98,
        0,
        7,
        89,
        86,
        91,
        80,
        96,
        32,
        131,
        16,
        97,
        1,
        51,
        131,
        16,
        22,
        96,
        78,
        132,
        16,
        96,
        11,
        132,
        16,
        22,
        23,
        21,
        98,
        0,
        9,
        24,
        87,
        80,
        129,
        129,
        10,
        98,
        0,
        7,
        89,
        86,
        91,
        98,
        0,
        9,
        36,
        131,
        131,
        98,
        0,
        8,
        70,
        86,
        91,
        128,
        96,
        0,
        25,
        4,
        130,
        17,
        21,
        98,
        0,
        9,
        59,
        87,
        98,
        0,
        9,
        59,
        98,
        0,
        8,
        26,
        86,
        91,
        2,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        98,
        0,
        8,
        19,
        131,
        131,
        98,
        0,
        8,
        143,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        96,
        0,
        25,
        4,
        131,
        17,
        130,
        21,
        21,
        22,
        21,
        98,
        0,
        9,
        132,
        87,
        98,
        0,
        9,
        132,
        98,
        0,
        8,
        26,
        86,
        91,
        80,
        2,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        32,
        129,
        1,
        96,
        3,
        131,
        16,
        98,
        0,
        9,
        194,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        145,
        144,
        82,
        144,
        86,
        91,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        80,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        9,
        224,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        98,
        0,
        9,
        254,
        87,
        96,
        0,
        128,
        253,
        91,
        98,
        0,
        10,
        9,
        134,
        98,
        0,
        9,
        200,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        81,
        147,
        80,
        96,
        64,
        134,
        1,
        81,
        146,
        80,
        96,
        96,
        134,
        1,
        81,
        145,
        80,
        98,
        0,
        10,
        46,
        96,
        128,
        135,
        1,
        98,
        0,
        9,
        200,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        91,
        96,
        128,
        81,
        96,
        160,
        81,
        96,
        192,
        81,
        96,
        224,
        81,
        97,
        1,
        0,
        81,
        97,
        1,
        32,
        81,
        97,
        1,
        64,
        81,
        97,
        1,
        96,
        81,
        97,
        15,
        79,
        98,
        0,
        10,
        230,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        97,
        2,
        54,
        1,
        82,
        129,
        129,
        97,
        7,
        84,
        1,
        82,
        97,
        7,
        190,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        232,
        1,
        82,
        129,
        129,
        97,
        7,
        142,
        1,
        82,
        97,
        7,
        248,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        2,
        203,
        1,
        82,
        97,
        7,
        42,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        2,
        93,
        1,
        82,
        97,
        6,
        220,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        152,
        1,
        82,
        97,
        8,
        85,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        2,
        132,
        1,
        82,
        97,
        7,
        9,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        2,
        15,
        1,
        82,
        97,
        6,
        187,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        1,
        76,
        1,
        82,
        97,
        4,
        131,
        1,
        82,
        97,
        15,
        79,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        0,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        129,
        95,
        233,
        39,
        17,
        97,
        0,
        151,
        87,
        128,
        99,
        193,
        157,
        147,
        251,
        17,
        97,
        0,
        102,
        87,
        128,
        99,
        193,
        157,
        147,
        251,
        20,
        97,
        2,
        166,
        87,
        128,
        99,
        213,
        128,
        222,
        212,
        20,
        97,
        2,
        179,
        87,
        128,
        99,
        229,
        102,
        30,
        0,
        20,
        97,
        2,
        198,
        87,
        128,
        99,
        232,
        99,
        118,
        197,
        20,
        97,
        2,
        237,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        129,
        95,
        233,
        39,
        20,
        97,
        2,
        10,
        87,
        128,
        99,
        140,
        156,
        192,
        60,
        20,
        97,
        2,
        49,
        87,
        128,
        99,
        161,
        108,
        180,
        116,
        20,
        97,
        2,
        88,
        87,
        128,
        99,
        174,
        201,
        195,
        221,
        20,
        97,
        2,
        127,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        89,
        1,
        28,
        209,
        17,
        97,
        0,
        211,
        87,
        128,
        99,
        89,
        1,
        28,
        209,
        20,
        97,
        1,
        147,
        87,
        128,
        99,
        89,
        83,
        113,
        68,
        20,
        97,
        1,
        200,
        87,
        128,
        99,
        91,
        34,
        127,
        155,
        20,
        97,
        1,
        208,
        87,
        128,
        99,
        104,
        61,
        209,
        145,
        20,
        97,
        1,
        227,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        8,
        108,
        41,
        141,
        20,
        97,
        1,
        5,
        87,
        128,
        99,
        44,
        247,
        197,
        49,
        20,
        97,
        1,
        29,
        87,
        128,
        99,
        55,
        160,
        175,
        193,
        20,
        97,
        1,
        50,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        1,
        71,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        37,
        97,
        2,
        245,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        20,
        145,
        144,
        97,
        12,
        174,
        86,
        91,
        97,
        1,
        58,
        97,
        3,
        100,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        20,
        145,
        144,
        97,
        13,
        113,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        20,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        20,
        86,
        91,
        97,
        1,
        186,
        96,
        50,
        129,
        86,
        91,
        97,
        1,
        110,
        97,
        1,
        222,
        54,
        96,
        4,
        97,
        13,
        132,
        86,
        91,
        97,
        3,
        179,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        58,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        84,
        97,
        1,
        58,
        144,
        96,
        255,
        22,
        129,
        86,
        91,
        97,
        1,
        8,
        97,
        2,
        193,
        54,
        96,
        4,
        97,
        13,
        157,
        86,
        91,
        97,
        3,
        234,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        1,
        186,
        86,
        91,
        96,
        96,
        96,
        1,
        128,
        84,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        128,
        21,
        97,
        3,
        90,
        87,
        96,
        32,
        2,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        129,
        82,
        96,
        1,
        144,
        145,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        3,
        47,
        87,
        91,
        80,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        84,
        96,
        255,
        22,
        96,
        2,
        129,
        17,
        21,
        97,
        3,
        126,
        87,
        97,
        3,
        126,
        97,
        13,
        8,
        86,
        91,
        20,
        97,
        3,
        141,
        87,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        97,
        3,
        149,
        97,
        6,
        179,
        86,
        91,
        21,
        97,
        3,
        169,
        87,
        97,
        3,
        164,
        96,
        2,
        97,
        8,
        139,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        1,
        129,
        129,
        84,
        129,
        16,
        97,
        3,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        144,
        80,
        129,
        86,
        91,
        96,
        0,
        51,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        20,
        97,
        4,
        59,
        87,
        96,
        64,
        81,
        127,
        130,
        180,
        41,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        127,
        116,
        235,
        227,
        236,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        145,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        145,
        22,
        144,
        99,
        116,
        235,
        227,
        236,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        204,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        240,
        145,
        144,
        97,
        13,
        218,
        86,
        91,
        144,
        80,
        128,
        97,
        5,
        41,
        87,
        96,
        64,
        81,
        127,
        130,
        180,
        41,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        84,
        96,
        50,
        129,
        16,
        97,
        5,
        102,
        87,
        96,
        64,
        81,
        127,
        134,
        191,
        178,
        200,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        5,
        213,
        87,
        132,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        96,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        5,
        155,
        87,
        97,
        5,
        155,
        97,
        13,
        252,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        3,
        97,
        5,
        205,
        87,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        1,
        97,
        5,
        105,
        86,
        91,
        80,
        96,
        1,
        128,
        84,
        128,
        130,
        1,
        130,
        85,
        96,
        0,
        145,
        144,
        145,
        82,
        127,
        177,
        14,
        45,
        82,
        118,
        18,
        7,
        59,
        38,
        238,
        205,
        253,
        113,
        126,
        106,
        50,
        12,
        244,
        75,
        74,
        250,
        194,
        176,
        115,
        45,
        159,
        203,
        226,
        183,
        250,
        12,
        246,
        1,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        127,
        244,
        75,
        243,
        96,
        82,
        58,
        172,
        89,
        132,
        221,
        133,
        250,
        179,
        77,
        96,
        57,
        96,
        138,
        29,
        13,
        240,
        246,
        196,
        53,
        65,
        79,
        82,
        194,
        184,
        48,
        192,
        227,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        96,
        1,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        6,
        157,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        130,
        96,
        1,
        131,
        3,
        4,
        1,
        129,
        21,
        21,
        2,
        144,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        97,
        7,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        10,
        26,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        78,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        10,
        26,
        86,
        91,
        144,
        80,
        96,
        1,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        2,
        129,
        17,
        21,
        97,
        7,
        132,
        87,
        97,
        7,
        132,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        7,
        186,
        87,
        97,
        7,
        179,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        97,
        14,
        90,
        86,
        91,
        145,
        80,
        97,
        8,
        32,
        86,
        91,
        96,
        2,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        2,
        129,
        17,
        21,
        97,
        7,
        238,
        87,
        97,
        7,
        238,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        8,
        32,
        87,
        97,
        8,
        29,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        97,
        14,
        90,
        86,
        91,
        144,
        80,
        91,
        96,
        0,
        129,
        131,
        17,
        97,
        8,
        56,
        87,
        97,
        8,
        51,
        131,
        131,
        97,
        14,
        151,
        86,
        91,
        97,
        8,
        66,
        86,
        91,
        97,
        8,
        66,
        130,
        132,
        97,
        14,
        151,
        86,
        91,
        144,
        80,
        96,
        0,
        131,
        17,
        97,
        8,
        83,
        87,
        96,
        1,
        97,
        8,
        131,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        129,
        130,
        97,
        39,
        16,
        134,
        97,
        6,
        133,
        86,
        91,
        17,
        91,
        147,
        80,
        80,
        80,
        80,
        144,
        86,
        91,
        96,
        0,
        128,
        84,
        97,
        8,
        156,
        144,
        96,
        255,
        22,
        131,
        97,
        11,
        84,
        86,
        91,
        97,
        8,
        210,
        87,
        96,
        64,
        81,
        127,
        143,
        154,
        120,
        12,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        131,
        145,
        144,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        9,
        15,
        87,
        97,
        9,
        15,
        97,
        13,
        8,
        86,
        91,
        2,
        23,
        144,
        85,
        80,
        96,
        1,
        84,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        215,
        87,
        96,
        1,
        129,
        129,
        84,
        129,
        16,
        97,
        9,
        53,
        87,
        97,
        9,
        53,
        97,
        13,
        252,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        96,
        64,
        81,
        127,
        122,
        117,
        253,
        222,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        144,
        99,
        122,
        117,
        253,
        222,
        144,
        97,
        9,
        148,
        144,
        135,
        144,
        96,
        4,
        1,
        97,
        13,
        113,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        9,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        9,
        194,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        97,
        9,
        208,
        129,
        96,
        1,
        1,
        144,
        86,
        91,
        144,
        80,
        97,
        9,
        26,
        86,
        91,
        80,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        9,
        234,
        87,
        97,
        9,
        234,
        97,
        13,
        8,
        86,
        91,
        96,
        64,
        81,
        127,
        226,
        174,
        3,
        160,
        208,
        98,
        123,
        52,
        21,
        34,
        0,
        49,
        22,
        147,
        186,
        64,
        147,
        147,
        199,
        209,
        235,
        221,
        10,
        36,
        107,
        163,
        192,
        37,
        58,
        188,
        38,
        63,
        144,
        96,
        0,
        144,
        162,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        99,
        254,
        175,
        150,
        140,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        160,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        10,
        106,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        142,
        145,
        144,
        97,
        14,
        201,
        86,
        91,
        80,
        147,
        80,
        80,
        146,
        80,
        80,
        66,
        129,
        17,
        21,
        97,
        10,
        207,
        87,
        96,
        64,
        81,
        127,
        183,
        208,
        148,
        151,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        131,
        97,
        10,
        218,
        130,
        66,
        97,
        14,
        151,
        86,
        91,
        17,
        21,
        97,
        11,
        18,
        87,
        96,
        64,
        81,
        127,
        168,
        135,
        242,
        216,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        130,
        18,
        21,
        97,
        11,
        76,
        87,
        96,
        64,
        81,
        126,
        191,
        201,
        33,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        2,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        106,
        87,
        97,
        11,
        106,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        11,
        119,
        87,
        80,
        96,
        0,
        97,
        12,
        168,
        86,
        91,
        129,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        137,
        87,
        97,
        11,
        137,
        97,
        13,
        8,
        86,
        91,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        155,
        87,
        97,
        11,
        155,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        11,
        168,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        188,
        87,
        97,
        11,
        188,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        11,
        218,
        87,
        80,
        96,
        1,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        216,
        87,
        97,
        11,
        216,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        11,
        231,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        251,
        87,
        97,
        11,
        251,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        25,
        87,
        80,
        96,
        0,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        23,
        87,
        97,
        12,
        23,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        38,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        58,
        87,
        97,
        12,
        58,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        88,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        86,
        87,
        97,
        12,
        86,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        101,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        121,
        87,
        97,
        12,
        121,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        151,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        149,
        87,
        97,
        12,
        149,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        164,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        80,
        96,
        0,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        12,
        252,
        87,
        131,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        12,
        202,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        3,
        129,
        16,
        97,
        13,
        110,
        87,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        86,
        91,
        96,
        32,
        129,
        1,
        97,
        13,
        126,
        131,
        97,
        13,
        55,
        86,
        91,
        145,
        144,
        82,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        175,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        13,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        13,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        4,
        131,
        17,
        130,
        21,
        21,
        22,
        21,
        97,
        14,
        146,
        87,
        97,
        14,
        146,
        97,
        14,
        43,
        86,
        91,
        80,
        2,
        144,
        86,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        12,
        168,
        87,
        97,
        12,
        168,
        97,
        14,
        43,
        86,
        91,
        128,
        81,
        105,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        14,
        196,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        14,
        225,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        14,
        234,
        134,
        97,
        14,
        170,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        81,
        147,
        80,
        96,
        64,
        134,
        1,
        81,
        146,
        80,
        96,
        96,
        134,
        1,
        81,
        145,
        80,
        97,
        15,
        13,
        96,
        128,
        135,
        1,
        97,
        14,
        170,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        190,
        32,
        69,
        16,
        13,
        106,
        211,
        75,
        234,
        157,
        110,
        36,
        145,
        22,
        172,
        5,
        84,
        107,
        188,
        208,
        150,
        61,
        230,
        154,
        56,
        176,
        220,
        142,
        123,
        109,
        62,
        182,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        16,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static CHAINLINKTRIGGER_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        0,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        129,
        95,
        233,
        39,
        17,
        97,
        0,
        151,
        87,
        128,
        99,
        193,
        157,
        147,
        251,
        17,
        97,
        0,
        102,
        87,
        128,
        99,
        193,
        157,
        147,
        251,
        20,
        97,
        2,
        166,
        87,
        128,
        99,
        213,
        128,
        222,
        212,
        20,
        97,
        2,
        179,
        87,
        128,
        99,
        229,
        102,
        30,
        0,
        20,
        97,
        2,
        198,
        87,
        128,
        99,
        232,
        99,
        118,
        197,
        20,
        97,
        2,
        237,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        129,
        95,
        233,
        39,
        20,
        97,
        2,
        10,
        87,
        128,
        99,
        140,
        156,
        192,
        60,
        20,
        97,
        2,
        49,
        87,
        128,
        99,
        161,
        108,
        180,
        116,
        20,
        97,
        2,
        88,
        87,
        128,
        99,
        174,
        201,
        195,
        221,
        20,
        97,
        2,
        127,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        89,
        1,
        28,
        209,
        17,
        97,
        0,
        211,
        87,
        128,
        99,
        89,
        1,
        28,
        209,
        20,
        97,
        1,
        147,
        87,
        128,
        99,
        89,
        83,
        113,
        68,
        20,
        97,
        1,
        200,
        87,
        128,
        99,
        91,
        34,
        127,
        155,
        20,
        97,
        1,
        208,
        87,
        128,
        99,
        104,
        61,
        209,
        145,
        20,
        97,
        1,
        227,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        8,
        108,
        41,
        141,
        20,
        97,
        1,
        5,
        87,
        128,
        99,
        44,
        247,
        197,
        49,
        20,
        97,
        1,
        29,
        87,
        128,
        99,
        55,
        160,
        175,
        193,
        20,
        97,
        1,
        50,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        1,
        71,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        37,
        97,
        2,
        245,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        20,
        145,
        144,
        97,
        12,
        174,
        86,
        91,
        97,
        1,
        58,
        97,
        3,
        100,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        20,
        145,
        144,
        97,
        13,
        113,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        20,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        20,
        86,
        91,
        97,
        1,
        186,
        96,
        50,
        129,
        86,
        91,
        97,
        1,
        110,
        97,
        1,
        222,
        54,
        96,
        4,
        97,
        13,
        132,
        86,
        91,
        97,
        3,
        179,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        58,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        1,
        110,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        84,
        97,
        1,
        58,
        144,
        96,
        255,
        22,
        129,
        86,
        91,
        97,
        1,
        8,
        97,
        2,
        193,
        54,
        96,
        4,
        97,
        13,
        157,
        86,
        91,
        97,
        3,
        234,
        86,
        91,
        97,
        1,
        186,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        1,
        186,
        86,
        91,
        96,
        96,
        96,
        1,
        128,
        84,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        128,
        21,
        97,
        3,
        90,
        87,
        96,
        32,
        2,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        129,
        82,
        96,
        1,
        144,
        145,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        3,
        47,
        87,
        91,
        80,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        84,
        96,
        255,
        22,
        96,
        2,
        129,
        17,
        21,
        97,
        3,
        126,
        87,
        97,
        3,
        126,
        97,
        13,
        8,
        86,
        91,
        20,
        97,
        3,
        141,
        87,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        97,
        3,
        149,
        97,
        6,
        179,
        86,
        91,
        21,
        97,
        3,
        169,
        87,
        97,
        3,
        164,
        96,
        2,
        97,
        8,
        139,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        80,
        96,
        0,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        1,
        129,
        129,
        84,
        129,
        16,
        97,
        3,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        144,
        80,
        129,
        86,
        91,
        96,
        0,
        51,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        22,
        20,
        97,
        4,
        59,
        87,
        96,
        64,
        81,
        127,
        130,
        180,
        41,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        127,
        116,
        235,
        227,
        236,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        145,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        145,
        22,
        144,
        99,
        116,
        235,
        227,
        236,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        204,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        240,
        145,
        144,
        97,
        13,
        218,
        86,
        91,
        144,
        80,
        128,
        97,
        5,
        41,
        87,
        96,
        64,
        81,
        127,
        130,
        180,
        41,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        84,
        96,
        50,
        129,
        16,
        97,
        5,
        102,
        87,
        96,
        64,
        81,
        127,
        134,
        191,
        178,
        200,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        5,
        213,
        87,
        132,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        96,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        5,
        155,
        87,
        97,
        5,
        155,
        97,
        13,
        252,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        3,
        97,
        5,
        205,
        87,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        1,
        97,
        5,
        105,
        86,
        91,
        80,
        96,
        1,
        128,
        84,
        128,
        130,
        1,
        130,
        85,
        96,
        0,
        145,
        144,
        145,
        82,
        127,
        177,
        14,
        45,
        82,
        118,
        18,
        7,
        59,
        38,
        238,
        205,
        253,
        113,
        126,
        106,
        50,
        12,
        244,
        75,
        74,
        250,
        194,
        176,
        115,
        45,
        159,
        203,
        226,
        183,
        250,
        12,
        246,
        1,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        127,
        244,
        75,
        243,
        96,
        82,
        58,
        172,
        89,
        132,
        221,
        133,
        250,
        179,
        77,
        96,
        57,
        96,
        138,
        29,
        13,
        240,
        246,
        196,
        53,
        65,
        79,
        82,
        194,
        184,
        48,
        192,
        227,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        96,
        1,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        130,
        130,
        2,
        129,
        21,
        21,
        132,
        21,
        133,
        131,
        4,
        133,
        20,
        23,
        22,
        97,
        6,
        157,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        130,
        96,
        1,
        131,
        3,
        4,
        1,
        129,
        21,
        21,
        2,
        144,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        97,
        7,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        10,
        26,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        7,
        78,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        10,
        26,
        86,
        91,
        144,
        80,
        96,
        1,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        2,
        129,
        17,
        21,
        97,
        7,
        132,
        87,
        97,
        7,
        132,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        7,
        186,
        87,
        97,
        7,
        179,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        131,
        97,
        14,
        90,
        86,
        91,
        145,
        80,
        97,
        8,
        32,
        86,
        91,
        96,
        2,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        2,
        129,
        17,
        21,
        97,
        7,
        238,
        87,
        97,
        7,
        238,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        8,
        32,
        87,
        97,
        8,
        29,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        97,
        14,
        90,
        86,
        91,
        144,
        80,
        91,
        96,
        0,
        129,
        131,
        17,
        97,
        8,
        56,
        87,
        97,
        8,
        51,
        131,
        131,
        97,
        14,
        151,
        86,
        91,
        97,
        8,
        66,
        86,
        91,
        97,
        8,
        66,
        130,
        132,
        97,
        14,
        151,
        86,
        91,
        144,
        80,
        96,
        0,
        131,
        17,
        97,
        8,
        83,
        87,
        96,
        1,
        97,
        8,
        131,
        86,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        97,
        8,
        129,
        130,
        97,
        39,
        16,
        134,
        97,
        6,
        133,
        86,
        91,
        17,
        91,
        147,
        80,
        80,
        80,
        80,
        144,
        86,
        91,
        96,
        0,
        128,
        84,
        97,
        8,
        156,
        144,
        96,
        255,
        22,
        131,
        97,
        11,
        84,
        86,
        91,
        97,
        8,
        210,
        87,
        96,
        64,
        81,
        127,
        143,
        154,
        120,
        12,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        131,
        145,
        144,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        9,
        15,
        87,
        97,
        9,
        15,
        97,
        13,
        8,
        86,
        91,
        2,
        23,
        144,
        85,
        80,
        96,
        1,
        84,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        215,
        87,
        96,
        1,
        129,
        129,
        84,
        129,
        16,
        97,
        9,
        53,
        87,
        97,
        9,
        53,
        97,
        13,
        252,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        144,
        145,
        32,
        1,
        84,
        96,
        64,
        81,
        127,
        122,
        117,
        253,
        222,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        144,
        99,
        122,
        117,
        253,
        222,
        144,
        97,
        9,
        148,
        144,
        135,
        144,
        96,
        4,
        1,
        97,
        13,
        113,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        9,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        9,
        194,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        97,
        9,
        208,
        129,
        96,
        1,
        1,
        144,
        86,
        91,
        144,
        80,
        97,
        9,
        26,
        86,
        91,
        80,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        9,
        234,
        87,
        97,
        9,
        234,
        97,
        13,
        8,
        86,
        91,
        96,
        64,
        81,
        127,
        226,
        174,
        3,
        160,
        208,
        98,
        123,
        52,
        21,
        34,
        0,
        49,
        22,
        147,
        186,
        64,
        147,
        147,
        199,
        209,
        235,
        221,
        10,
        36,
        107,
        163,
        192,
        37,
        58,
        188,
        38,
        63,
        144,
        96,
        0,
        144,
        162,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        132,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        99,
        254,
        175,
        150,
        140,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        160,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        10,
        106,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        142,
        145,
        144,
        97,
        14,
        201,
        86,
        91,
        80,
        147,
        80,
        80,
        146,
        80,
        80,
        66,
        129,
        17,
        21,
        97,
        10,
        207,
        87,
        96,
        64,
        81,
        127,
        183,
        208,
        148,
        151,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        131,
        97,
        10,
        218,
        130,
        66,
        97,
        14,
        151,
        86,
        91,
        17,
        21,
        97,
        11,
        18,
        87,
        96,
        64,
        81,
        127,
        168,
        135,
        242,
        216,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        130,
        18,
        21,
        97,
        11,
        76,
        87,
        96,
        64,
        81,
        126,
        191,
        201,
        33,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        2,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        106,
        87,
        97,
        11,
        106,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        11,
        119,
        87,
        80,
        96,
        0,
        97,
        12,
        168,
        86,
        91,
        129,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        137,
        87,
        97,
        11,
        137,
        97,
        13,
        8,
        86,
        91,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        155,
        87,
        97,
        11,
        155,
        97,
        13,
        8,
        86,
        91,
        3,
        97,
        11,
        168,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        188,
        87,
        97,
        11,
        188,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        11,
        218,
        87,
        80,
        96,
        1,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        216,
        87,
        97,
        11,
        216,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        11,
        231,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        11,
        251,
        87,
        97,
        11,
        251,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        25,
        87,
        80,
        96,
        0,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        23,
        87,
        97,
        12,
        23,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        38,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        0,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        58,
        87,
        97,
        12,
        58,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        88,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        86,
        87,
        97,
        12,
        86,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        101,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        96,
        1,
        131,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        121,
        87,
        97,
        12,
        121,
        97,
        13,
        8,
        86,
        91,
        20,
        128,
        21,
        97,
        12,
        151,
        87,
        80,
        96,
        2,
        130,
        96,
        2,
        129,
        17,
        21,
        97,
        12,
        149,
        87,
        97,
        12,
        149,
        97,
        13,
        8,
        86,
        91,
        20,
        91,
        21,
        97,
        12,
        164,
        87,
        80,
        96,
        1,
        97,
        12,
        168,
        86,
        91,
        80,
        96,
        0,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        12,
        252,
        87,
        131,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        12,
        202,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        3,
        129,
        16,
        97,
        13,
        110,
        87,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        86,
        91,
        96,
        32,
        129,
        1,
        97,
        13,
        126,
        131,
        97,
        13,
        55,
        86,
        91,
        145,
        144,
        82,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        175,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        13,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        13,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        127,
        78,
        72,
        123,
        113,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        4,
        131,
        17,
        130,
        21,
        21,
        22,
        21,
        97,
        14,
        146,
        87,
        97,
        14,
        146,
        97,
        14,
        43,
        86,
        91,
        80,
        2,
        144,
        86,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        12,
        168,
        87,
        97,
        12,
        168,
        97,
        14,
        43,
        86,
        91,
        128,
        81,
        105,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        14,
        196,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        160,
        134,
        136,
        3,
        18,
        21,
        97,
        14,
        225,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        14,
        234,
        134,
        97,
        14,
        170,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        81,
        147,
        80,
        96,
        64,
        134,
        1,
        81,
        146,
        80,
        96,
        96,
        134,
        1,
        81,
        145,
        80,
        97,
        15,
        13,
        96,
        128,
        135,
        1,
        97,
        14,
        170,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        144,
        147,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        190,
        32,
        69,
        16,
        13,
        106,
        211,
        75,
        234,
        157,
        110,
        36,
        145,
        22,
        172,
        5,
        84,
        107,
        188,
        208,
        150,
        61,
        230,
        154,
        56,
        176,
        220,
        142,
        123,
        109,
        62,
        182,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        16,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static CHAINLINKTRIGGER_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct ChainlinkTrigger<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for ChainlinkTrigger<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for ChainlinkTrigger<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for ChainlinkTrigger<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for ChainlinkTrigger<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(ChainlinkTrigger)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> ChainlinkTrigger<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    CHAINLINKTRIGGER_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                CHAINLINKTRIGGER_ABI.clone(),
                CHAINLINKTRIGGER_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `MAX_SET_LENGTH` (0x59537144) function
        pub fn max_set_length(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([89, 83, 113, 68], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `acknowledged` (0x086c298d) function
        pub fn acknowledged(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([8, 108, 41, 141], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `addSet` (0xd580ded4) function
        pub fn add_set(
            &self,
            set: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([213, 128, 222, 212], set)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getSets` (0x2cf7c531) function
        pub fn get_sets(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::std::vec::Vec<::ethers::core::types::Address>,
        > {
            self.0
                .method_hash([44, 247, 197, 49], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getSetsLength` (0xe86376c5) function
        pub fn get_sets_length(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([232, 99, 118, 197], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `manager` (0x481c6a75) function
        pub fn manager(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([72, 28, 106, 117], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `oracleToScale` (0x8c9cc03c) function
        pub fn oracle_to_scale(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([140, 156, 192, 60], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `priceTolerance` (0x59011cd1) function
        pub fn price_tolerance(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([89, 1, 28, 209], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `runProgrammaticCheck` (0x37a0afc1) function
        pub fn run_programmatic_check(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([55, 160, 175, 193], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `scaleFactor` (0x683dd191) function
        pub fn scale_factor(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([104, 61, 209, 145], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `sets` (0x5b227f9b) function
        pub fn sets(
            &self,
            p0: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([91, 34, 127, 155], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `state` (0xc19d93fb) function
        pub fn state(&self) -> ::ethers::contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([193, 157, 147, 251], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `trackingFrequencyTolerance` (0xe5661e00) function
        pub fn tracking_frequency_tolerance(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([229, 102, 30, 0], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `trackingOracle` (0xaec9c3dd) function
        pub fn tracking_oracle(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([174, 201, 195, 221], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `truthFrequencyTolerance` (0xa16cb474) function
        pub fn truth_frequency_tolerance(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([161, 108, 180, 116], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `truthOracle` (0x815fe927) function
        pub fn truth_oracle(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([129, 95, 233, 39], ())
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `SetAdded` event
        pub fn set_added_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            SetAddedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `TriggerStateUpdated` event
        pub fn trigger_state_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            TriggerStateUpdatedFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ChainlinkTriggerEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for ChainlinkTrigger<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `InvalidPrice` with signature `InvalidPrice()` and selector `0x00bfc921`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidPrice", abi = "InvalidPrice()")]
    pub struct InvalidPrice;
    ///Custom Error type `InvalidPriceTolerance` with signature `InvalidPriceTolerance()` and selector `0x508f393f`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidPriceTolerance", abi = "InvalidPriceTolerance()")]
    pub struct InvalidPriceTolerance;
    ///Custom Error type `InvalidStateTransition` with signature `InvalidStateTransition()` and selector `0x8f9a780c`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidStateTransition", abi = "InvalidStateTransition()")]
    pub struct InvalidStateTransition;
    ///Custom Error type `InvalidTimestamp` with signature `InvalidTimestamp()` and selector `0xb7d09497`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidTimestamp", abi = "InvalidTimestamp()")]
    pub struct InvalidTimestamp;
    ///Custom Error type `SetLimitReached` with signature `SetLimitReached()` and selector `0x86bfb2c8`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "SetLimitReached", abi = "SetLimitReached()")]
    pub struct SetLimitReached;
    ///Custom Error type `StaleOraclePrice` with signature `StaleOraclePrice()` and selector `0xa887f2d8`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "StaleOraclePrice", abi = "StaleOraclePrice()")]
    pub struct StaleOraclePrice;
    ///Custom Error type `Unacknowledged` with signature `Unacknowledged()` and selector `0x48c068cd`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Unacknowledged", abi = "Unacknowledged()")]
    pub struct Unacknowledged;
    ///Custom Error type `Unauthorized` with signature `Unauthorized()` and selector `0x82b42900`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Unauthorized", abi = "Unauthorized()")]
    pub struct Unauthorized;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ChainlinkTriggerErrors {
        InvalidPrice(InvalidPrice),
        InvalidPriceTolerance(InvalidPriceTolerance),
        InvalidStateTransition(InvalidStateTransition),
        InvalidTimestamp(InvalidTimestamp),
        SetLimitReached(SetLimitReached),
        StaleOraclePrice(StaleOraclePrice),
        Unacknowledged(Unacknowledged),
        Unauthorized(Unauthorized),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for ChainlinkTriggerErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <InvalidPrice as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidPrice(decoded));
            }
            if let Ok(decoded)
                = <InvalidPriceTolerance as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::InvalidPriceTolerance(decoded));
            }
            if let Ok(decoded)
                = <InvalidStateTransition as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::InvalidStateTransition(decoded));
            }
            if let Ok(decoded)
                = <InvalidTimestamp as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidTimestamp(decoded));
            }
            if let Ok(decoded)
                = <SetLimitReached as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SetLimitReached(decoded));
            }
            if let Ok(decoded)
                = <StaleOraclePrice as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::StaleOraclePrice(decoded));
            }
            if let Ok(decoded)
                = <Unacknowledged as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Unacknowledged(decoded));
            }
            if let Ok(decoded)
                = <Unauthorized as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Unauthorized(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for ChainlinkTriggerErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::InvalidPrice(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidPriceTolerance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidStateTransition(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidTimestamp(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SetLimitReached(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::StaleOraclePrice(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Unacknowledged(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Unauthorized(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for ChainlinkTriggerErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <InvalidPrice as ::ethers::contract::EthError>::selector() => true,
                _ if selector
                    == <InvalidPriceTolerance as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidStateTransition as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidTimestamp as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <SetLimitReached as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <StaleOraclePrice as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <Unacknowledged as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <Unauthorized as ::ethers::contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for ChainlinkTriggerErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::InvalidPrice(element) => ::core::fmt::Display::fmt(element, f),
                Self::InvalidPriceTolerance(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::InvalidStateTransition(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::InvalidTimestamp(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetLimitReached(element) => ::core::fmt::Display::fmt(element, f),
                Self::StaleOraclePrice(element) => ::core::fmt::Display::fmt(element, f),
                Self::Unacknowledged(element) => ::core::fmt::Display::fmt(element, f),
                Self::Unauthorized(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for ChainlinkTriggerErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<InvalidPrice> for ChainlinkTriggerErrors {
        fn from(value: InvalidPrice) -> Self {
            Self::InvalidPrice(value)
        }
    }
    impl ::core::convert::From<InvalidPriceTolerance> for ChainlinkTriggerErrors {
        fn from(value: InvalidPriceTolerance) -> Self {
            Self::InvalidPriceTolerance(value)
        }
    }
    impl ::core::convert::From<InvalidStateTransition> for ChainlinkTriggerErrors {
        fn from(value: InvalidStateTransition) -> Self {
            Self::InvalidStateTransition(value)
        }
    }
    impl ::core::convert::From<InvalidTimestamp> for ChainlinkTriggerErrors {
        fn from(value: InvalidTimestamp) -> Self {
            Self::InvalidTimestamp(value)
        }
    }
    impl ::core::convert::From<SetLimitReached> for ChainlinkTriggerErrors {
        fn from(value: SetLimitReached) -> Self {
            Self::SetLimitReached(value)
        }
    }
    impl ::core::convert::From<StaleOraclePrice> for ChainlinkTriggerErrors {
        fn from(value: StaleOraclePrice) -> Self {
            Self::StaleOraclePrice(value)
        }
    }
    impl ::core::convert::From<Unacknowledged> for ChainlinkTriggerErrors {
        fn from(value: Unacknowledged) -> Self {
            Self::Unacknowledged(value)
        }
    }
    impl ::core::convert::From<Unauthorized> for ChainlinkTriggerErrors {
        fn from(value: Unauthorized) -> Self {
            Self::Unauthorized(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "SetAdded", abi = "SetAdded(address)")]
    pub struct SetAddedFilter {
        pub set: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "TriggerStateUpdated", abi = "TriggerStateUpdated(uint8)")]
    pub struct TriggerStateUpdatedFilter {
        #[ethevent(indexed)]
        pub state: u8,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ChainlinkTriggerEvents {
        SetAddedFilter(SetAddedFilter),
        TriggerStateUpdatedFilter(TriggerStateUpdatedFilter),
    }
    impl ::ethers::contract::EthLogDecode for ChainlinkTriggerEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = SetAddedFilter::decode_log(log) {
                return Ok(ChainlinkTriggerEvents::SetAddedFilter(decoded));
            }
            if let Ok(decoded) = TriggerStateUpdatedFilter::decode_log(log) {
                return Ok(ChainlinkTriggerEvents::TriggerStateUpdatedFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for ChainlinkTriggerEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::SetAddedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::TriggerStateUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<SetAddedFilter> for ChainlinkTriggerEvents {
        fn from(value: SetAddedFilter) -> Self {
            Self::SetAddedFilter(value)
        }
    }
    impl ::core::convert::From<TriggerStateUpdatedFilter> for ChainlinkTriggerEvents {
        fn from(value: TriggerStateUpdatedFilter) -> Self {
            Self::TriggerStateUpdatedFilter(value)
        }
    }
    ///Container type for all input parameters for the `MAX_SET_LENGTH` function with signature `MAX_SET_LENGTH()` and selector `0x59537144`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "MAX_SET_LENGTH", abi = "MAX_SET_LENGTH()")]
    pub struct MaxSetLengthCall;
    ///Container type for all input parameters for the `acknowledged` function with signature `acknowledged()` and selector `0x086c298d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "acknowledged", abi = "acknowledged()")]
    pub struct AcknowledgedCall;
    ///Container type for all input parameters for the `addSet` function with signature `addSet(address)` and selector `0xd580ded4`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "addSet", abi = "addSet(address)")]
    pub struct AddSetCall {
        pub set: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `getSets` function with signature `getSets()` and selector `0x2cf7c531`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getSets", abi = "getSets()")]
    pub struct GetSetsCall;
    ///Container type for all input parameters for the `getSetsLength` function with signature `getSetsLength()` and selector `0xe86376c5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getSetsLength", abi = "getSetsLength()")]
    pub struct GetSetsLengthCall;
    ///Container type for all input parameters for the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "manager", abi = "manager()")]
    pub struct ManagerCall;
    ///Container type for all input parameters for the `oracleToScale` function with signature `oracleToScale()` and selector `0x8c9cc03c`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "oracleToScale", abi = "oracleToScale()")]
    pub struct OracleToScaleCall;
    ///Container type for all input parameters for the `priceTolerance` function with signature `priceTolerance()` and selector `0x59011cd1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "priceTolerance", abi = "priceTolerance()")]
    pub struct PriceToleranceCall;
    ///Container type for all input parameters for the `runProgrammaticCheck` function with signature `runProgrammaticCheck()` and selector `0x37a0afc1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "runProgrammaticCheck", abi = "runProgrammaticCheck()")]
    pub struct RunProgrammaticCheckCall;
    ///Container type for all input parameters for the `scaleFactor` function with signature `scaleFactor()` and selector `0x683dd191`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "scaleFactor", abi = "scaleFactor()")]
    pub struct ScaleFactorCall;
    ///Container type for all input parameters for the `sets` function with signature `sets(uint256)` and selector `0x5b227f9b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "sets", abi = "sets(uint256)")]
    pub struct SetsCall(pub ::ethers::core::types::U256);
    ///Container type for all input parameters for the `state` function with signature `state()` and selector `0xc19d93fb`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "state", abi = "state()")]
    pub struct StateCall;
    ///Container type for all input parameters for the `trackingFrequencyTolerance` function with signature `trackingFrequencyTolerance()` and selector `0xe5661e00`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "trackingFrequencyTolerance", abi = "trackingFrequencyTolerance()")]
    pub struct TrackingFrequencyToleranceCall;
    ///Container type for all input parameters for the `trackingOracle` function with signature `trackingOracle()` and selector `0xaec9c3dd`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "trackingOracle", abi = "trackingOracle()")]
    pub struct TrackingOracleCall;
    ///Container type for all input parameters for the `truthFrequencyTolerance` function with signature `truthFrequencyTolerance()` and selector `0xa16cb474`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "truthFrequencyTolerance", abi = "truthFrequencyTolerance()")]
    pub struct TruthFrequencyToleranceCall;
    ///Container type for all input parameters for the `truthOracle` function with signature `truthOracle()` and selector `0x815fe927`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "truthOracle", abi = "truthOracle()")]
    pub struct TruthOracleCall;
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ChainlinkTriggerCalls {
        MaxSetLength(MaxSetLengthCall),
        Acknowledged(AcknowledgedCall),
        AddSet(AddSetCall),
        GetSets(GetSetsCall),
        GetSetsLength(GetSetsLengthCall),
        Manager(ManagerCall),
        OracleToScale(OracleToScaleCall),
        PriceTolerance(PriceToleranceCall),
        RunProgrammaticCheck(RunProgrammaticCheckCall),
        ScaleFactor(ScaleFactorCall),
        Sets(SetsCall),
        State(StateCall),
        TrackingFrequencyTolerance(TrackingFrequencyToleranceCall),
        TrackingOracle(TrackingOracleCall),
        TruthFrequencyTolerance(TruthFrequencyToleranceCall),
        TruthOracle(TruthOracleCall),
    }
    impl ::ethers::core::abi::AbiDecode for ChainlinkTriggerCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <MaxSetLengthCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxSetLength(decoded));
            }
            if let Ok(decoded)
                = <AcknowledgedCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Acknowledged(decoded));
            }
            if let Ok(decoded)
                = <AddSetCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AddSet(decoded));
            }
            if let Ok(decoded)
                = <GetSetsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetSets(decoded));
            }
            if let Ok(decoded)
                = <GetSetsLengthCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetSetsLength(decoded));
            }
            if let Ok(decoded)
                = <ManagerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Manager(decoded));
            }
            if let Ok(decoded)
                = <OracleToScaleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::OracleToScale(decoded));
            }
            if let Ok(decoded)
                = <PriceToleranceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PriceTolerance(decoded));
            }
            if let Ok(decoded)
                = <RunProgrammaticCheckCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RunProgrammaticCheck(decoded));
            }
            if let Ok(decoded)
                = <ScaleFactorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ScaleFactor(decoded));
            }
            if let Ok(decoded)
                = <SetsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Sets(decoded));
            }
            if let Ok(decoded)
                = <StateCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::State(decoded));
            }
            if let Ok(decoded)
                = <TrackingFrequencyToleranceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TrackingFrequencyTolerance(decoded));
            }
            if let Ok(decoded)
                = <TrackingOracleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TrackingOracle(decoded));
            }
            if let Ok(decoded)
                = <TruthFrequencyToleranceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TruthFrequencyTolerance(decoded));
            }
            if let Ok(decoded)
                = <TruthOracleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TruthOracle(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for ChainlinkTriggerCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::MaxSetLength(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Acknowledged(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::AddSet(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetSets(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetSetsLength(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Manager(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::OracleToScale(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PriceTolerance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RunProgrammaticCheck(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ScaleFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Sets(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::State(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TrackingFrequencyTolerance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TrackingOracle(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TruthFrequencyTolerance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TruthOracle(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for ChainlinkTriggerCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::MaxSetLength(element) => ::core::fmt::Display::fmt(element, f),
                Self::Acknowledged(element) => ::core::fmt::Display::fmt(element, f),
                Self::AddSet(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetSets(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetSetsLength(element) => ::core::fmt::Display::fmt(element, f),
                Self::Manager(element) => ::core::fmt::Display::fmt(element, f),
                Self::OracleToScale(element) => ::core::fmt::Display::fmt(element, f),
                Self::PriceTolerance(element) => ::core::fmt::Display::fmt(element, f),
                Self::RunProgrammaticCheck(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ScaleFactor(element) => ::core::fmt::Display::fmt(element, f),
                Self::Sets(element) => ::core::fmt::Display::fmt(element, f),
                Self::State(element) => ::core::fmt::Display::fmt(element, f),
                Self::TrackingFrequencyTolerance(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::TrackingOracle(element) => ::core::fmt::Display::fmt(element, f),
                Self::TruthFrequencyTolerance(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::TruthOracle(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<MaxSetLengthCall> for ChainlinkTriggerCalls {
        fn from(value: MaxSetLengthCall) -> Self {
            Self::MaxSetLength(value)
        }
    }
    impl ::core::convert::From<AcknowledgedCall> for ChainlinkTriggerCalls {
        fn from(value: AcknowledgedCall) -> Self {
            Self::Acknowledged(value)
        }
    }
    impl ::core::convert::From<AddSetCall> for ChainlinkTriggerCalls {
        fn from(value: AddSetCall) -> Self {
            Self::AddSet(value)
        }
    }
    impl ::core::convert::From<GetSetsCall> for ChainlinkTriggerCalls {
        fn from(value: GetSetsCall) -> Self {
            Self::GetSets(value)
        }
    }
    impl ::core::convert::From<GetSetsLengthCall> for ChainlinkTriggerCalls {
        fn from(value: GetSetsLengthCall) -> Self {
            Self::GetSetsLength(value)
        }
    }
    impl ::core::convert::From<ManagerCall> for ChainlinkTriggerCalls {
        fn from(value: ManagerCall) -> Self {
            Self::Manager(value)
        }
    }
    impl ::core::convert::From<OracleToScaleCall> for ChainlinkTriggerCalls {
        fn from(value: OracleToScaleCall) -> Self {
            Self::OracleToScale(value)
        }
    }
    impl ::core::convert::From<PriceToleranceCall> for ChainlinkTriggerCalls {
        fn from(value: PriceToleranceCall) -> Self {
            Self::PriceTolerance(value)
        }
    }
    impl ::core::convert::From<RunProgrammaticCheckCall> for ChainlinkTriggerCalls {
        fn from(value: RunProgrammaticCheckCall) -> Self {
            Self::RunProgrammaticCheck(value)
        }
    }
    impl ::core::convert::From<ScaleFactorCall> for ChainlinkTriggerCalls {
        fn from(value: ScaleFactorCall) -> Self {
            Self::ScaleFactor(value)
        }
    }
    impl ::core::convert::From<SetsCall> for ChainlinkTriggerCalls {
        fn from(value: SetsCall) -> Self {
            Self::Sets(value)
        }
    }
    impl ::core::convert::From<StateCall> for ChainlinkTriggerCalls {
        fn from(value: StateCall) -> Self {
            Self::State(value)
        }
    }
    impl ::core::convert::From<TrackingFrequencyToleranceCall>
    for ChainlinkTriggerCalls {
        fn from(value: TrackingFrequencyToleranceCall) -> Self {
            Self::TrackingFrequencyTolerance(value)
        }
    }
    impl ::core::convert::From<TrackingOracleCall> for ChainlinkTriggerCalls {
        fn from(value: TrackingOracleCall) -> Self {
            Self::TrackingOracle(value)
        }
    }
    impl ::core::convert::From<TruthFrequencyToleranceCall> for ChainlinkTriggerCalls {
        fn from(value: TruthFrequencyToleranceCall) -> Self {
            Self::TruthFrequencyTolerance(value)
        }
    }
    impl ::core::convert::From<TruthOracleCall> for ChainlinkTriggerCalls {
        fn from(value: TruthOracleCall) -> Self {
            Self::TruthOracle(value)
        }
    }
    ///Container type for all return fields from the `MAX_SET_LENGTH` function with signature `MAX_SET_LENGTH()` and selector `0x59537144`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxSetLengthReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `acknowledged` function with signature `acknowledged()` and selector `0x086c298d`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AcknowledgedReturn(pub bool);
    ///Container type for all return fields from the `addSet` function with signature `addSet(address)` and selector `0xd580ded4`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AddSetReturn(pub bool);
    ///Container type for all return fields from the `getSets` function with signature `getSets()` and selector `0x2cf7c531`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetSetsReturn(pub ::std::vec::Vec<::ethers::core::types::Address>);
    ///Container type for all return fields from the `getSetsLength` function with signature `getSetsLength()` and selector `0xe86376c5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetSetsLengthReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ManagerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `oracleToScale` function with signature `oracleToScale()` and selector `0x8c9cc03c`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OracleToScaleReturn(pub u8);
    ///Container type for all return fields from the `priceTolerance` function with signature `priceTolerance()` and selector `0x59011cd1`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PriceToleranceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `runProgrammaticCheck` function with signature `runProgrammaticCheck()` and selector `0x37a0afc1`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RunProgrammaticCheckReturn(pub u8);
    ///Container type for all return fields from the `scaleFactor` function with signature `scaleFactor()` and selector `0x683dd191`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ScaleFactorReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `sets` function with signature `sets(uint256)` and selector `0x5b227f9b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SetsReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `state` function with signature `state()` and selector `0xc19d93fb`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct StateReturn(pub u8);
    ///Container type for all return fields from the `trackingFrequencyTolerance` function with signature `trackingFrequencyTolerance()` and selector `0xe5661e00`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TrackingFrequencyToleranceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `trackingOracle` function with signature `trackingOracle()` and selector `0xaec9c3dd`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TrackingOracleReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `truthFrequencyTolerance` function with signature `truthFrequencyTolerance()` and selector `0xa16cb474`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TruthFrequencyToleranceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `truthOracle` function with signature `truthOracle()` and selector `0x815fe927`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TruthOracleReturn(pub ::ethers::core::types::Address);
}
