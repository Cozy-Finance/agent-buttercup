pub use backstop::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod backstop {
    pub use super::super::shared_types::*;
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"contract IManager\",\"name\":\"manager_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"contract IWeth\",\"name\":\"weth_\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidAddress\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Unauthorized\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"set_\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"bool\",\"name\":\"status_\",\"type\":\"bool\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"BackstopApprovalStatusUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"set_\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"contract IERC20\",\"name\":\"asset_\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Claim\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"claim\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"deposit\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"manager\",\"outputs\":[{\"internalType\":\"contract IManager\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"rescueFunds\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"rescueFunds\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"struct BackstopApproval[]\",\"name\":\"approvals_\",\"type\":\"tuple[]\",\"components\":[{\"internalType\":\"contract ISet\",\"name\":\"set\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\",\"components\":[]}]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateApprovals\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWeth\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"receive\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static BACKSTOP_ABI: ::ethers_contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers_contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        192,
        96,
        64,
        144,
        128,
        130,
        82,
        52,
        97,
        1,
        30,
        87,
        80,
        128,
        81,
        96,
        31,
        97,
        11,
        90,
        56,
        129,
        144,
        3,
        145,
        130,
        1,
        96,
        31,
        25,
        22,
        131,
        1,
        145,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        131,
        17,
        132,
        132,
        16,
        23,
        97,
        1,
        8,
        87,
        128,
        132,
        146,
        134,
        148,
        133,
        82,
        131,
        57,
        129,
        1,
        3,
        18,
        97,
        0,
        185,
        87,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        130,
        22,
        144,
        129,
        131,
        3,
        97,
        0,
        180,
        87,
        96,
        32,
        1,
        81,
        146,
        131,
        22,
        128,
        132,
        3,
        97,
        0,
        180,
        87,
        97,
        0,
        117,
        97,
        0,
        122,
        146,
        97,
        1,
        107,
        86,
        91,
        97,
        1,
        107,
        86,
        91,
        96,
        160,
        82,
        96,
        128,
        82,
        81,
        97,
        9,
        204,
        144,
        129,
        97,
        1,
        142,
        130,
        57,
        96,
        128,
        81,
        129,
        129,
        129,
        97,
        2,
        192,
        1,
        82,
        97,
        8,
        64,
        1,
        82,
        96,
        160,
        81,
        129,
        129,
        129,
        97,
        3,
        10,
        1,
        82,
        129,
        129,
        97,
        7,
        100,
        1,
        82,
        97,
        8,
        177,
        1,
        82,
        243,
        91,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        97,
        1,
        123,
        87,
        86,
        91,
        96,
        64,
        81,
        99,
        230,
        196,
        36,
        123,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        29,
        87,
        91,
        54,
        97,
        5,
        226,
        87,
        97,
        0,
        27,
        97,
        8,
        61,
        86,
        91,
        0,
        91,
        96,
        0,
        128,
        53,
        96,
        224,
        28,
        144,
        129,
        99,
        55,
        150,
        7,
        245,
        20,
        97,
        0,
        160,
        87,
        80,
        128,
        99,
        63,
        200,
        206,
        243,
        20,
        97,
        0,
        155,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        0,
        150,
        87,
        128,
        99,
        103,
        52,
        72,
        221,
        20,
        97,
        0,
        145,
        87,
        128,
        99,
        108,
        202,
        224,
        84,
        20,
        97,
        0,
        140,
        87,
        128,
        99,
        205,
        223,
        219,
        218,
        20,
        97,
        0,
        135,
        87,
        128,
        99,
        208,
        227,
        13,
        176,
        20,
        97,
        0,
        130,
        87,
        99,
        229,
        59,
        32,
        23,
        3,
        97,
        0,
        14,
        87,
        97,
        5,
        128,
        86,
        91,
        97,
        5,
        103,
        86,
        91,
        97,
        4,
        47,
        86,
        91,
        97,
        3,
        171,
        86,
        91,
        97,
        3,
        105,
        86,
        91,
        97,
        2,
        244,
        86,
        91,
        97,
        2,
        170,
        86,
        91,
        52,
        97,
        2,
        10,
        87,
        96,
        32,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        0,
        207,
        97,
        0,
        203,
        97,
        0,
        196,
        51,
        97,
        3,
        79,
        86,
        91,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        21,
        144,
        86,
        91,
        97,
        1,
        244,
        87,
        51,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        64,
        81,
        99,
        56,
        213,
        46,
        15,
        96,
        224,
        27,
        129,
        82,
        144,
        130,
        130,
        96,
        4,
        129,
        51,
        90,
        250,
        145,
        130,
        21,
        97,
        1,
        187,
        87,
        132,
        146,
        97,
        1,
        197,
        87,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        144,
        129,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        145,
        132,
        131,
        96,
        36,
        129,
        132,
        90,
        250,
        146,
        131,
        21,
        97,
        1,
        187,
        87,
        97,
        1,
        129,
        149,
        135,
        148,
        97,
        1,
        140,
        87,
        91,
        80,
        80,
        96,
        64,
        81,
        130,
        129,
        82,
        51,
        144,
        127,
        112,
        235,
        67,
        196,
        168,
        174,
        140,
        64,
        80,
        45,
        207,
        34,
        67,
        108,
        80,
        156,
        40,
        214,
        255,
        66,
        28,
        240,
        124,
        73,
        27,
        229,
        105,
        132,
        189,
        152,
        112,
        104,
        144,
        96,
        32,
        144,
        163,
        128,
        130,
        16,
        21,
        97,
        1,
        132,
        87,
        80,
        144,
        91,
        51,
        144,
        97,
        9,
        40,
        86,
        91,
        128,
        243,
        91,
        144,
        80,
        144,
        97,
        1,
        122,
        86,
        91,
        97,
        1,
        172,
        146,
        148,
        80,
        128,
        61,
        16,
        97,
        1,
        180,
        87,
        91,
        97,
        1,
        164,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        129,
        1,
        144,
        97,
        6,
        233,
        86,
        91,
        145,
        134,
        128,
        97,
        1,
        63,
        86,
        91,
        80,
        61,
        97,
        1,
        154,
        86,
        91,
        97,
        6,
        221,
        86,
        91,
        97,
        6,
        57,
        86,
        91,
        97,
        1,
        230,
        145,
        146,
        80,
        131,
        61,
        133,
        17,
        97,
        1,
        237,
        87,
        91,
        97,
        1,
        222,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        129,
        1,
        144,
        97,
        6,
        197,
        86,
        91,
        144,
        132,
        97,
        0,
        254,
        86,
        91,
        80,
        61,
        97,
        1,
        212,
        86,
        91,
        96,
        64,
        81,
        98,
        130,
        180,
        41,
        96,
        232,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        97,
        2,
        90,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        97,
        2,
        10,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        3,
        97,
        3,
        74,
        87,
        86,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        3,
        134,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        0,
        96,
        32,
        82,
        96,
        32,
        96,
        255,
        96,
        64,
        96,
        0,
        32,
        84,
        22,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        97,
        0,
        27,
        96,
        4,
        53,
        97,
        3,
        203,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        36,
        53,
        97,
        3,
        215,
        129,
        97,
        3,
        57,
        86,
        91,
        97,
        3,
        223,
        97,
        8,
        167,
        86,
        91,
        96,
        68,
        53,
        145,
        97,
        9,
        40,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        114,
        114,
        97,
        121,
        32,
        115,
        116,
        114,
        105,
        100,
        101,
        96,
        168,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        128,
        130,
        17,
        97,
        5,
        23,
        87,
        54,
        96,
        35,
        131,
        1,
        18,
        21,
        97,
        4,
        208,
        87,
        129,
        96,
        4,
        1,
        53,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        54,
        96,
        36,
        130,
        96,
        6,
        27,
        132,
        1,
        1,
        17,
        97,
        4,
        132,
        87,
        96,
        36,
        97,
        0,
        27,
        146,
        1,
        97,
        7,
        90,
        86,
        91,
        97,
        3,
        232,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        14,
        78,
        76,
        47,
        36,
        13,
        140,
        173,
        204,
        238,
        141,
        96,
        171,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        28,
        156,
        152,
        94,
        72,
        27,
        217,
        153,
        156,
        217,
        93,
        96,
        170,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        111,
        102,
        102,
        115,
        96,
        68,
        130,
        1,
        82,
        97,
        25,
        93,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        97,
        0,
        27,
        97,
        8,
        61,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        5,
        157,
        129,
        97,
        3,
        57,
        86,
        91,
        97,
        5,
        165,
        97,
        8,
        167,
        86,
        91,
        96,
        0,
        128,
        128,
        128,
        128,
        148,
        71,
        144,
        90,
        241,
        80,
        61,
        21,
        97,
        1,
        129,
        87,
        61,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        5,
        221,
        87,
        96,
        64,
        81,
        97,
        1,
        129,
        145,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        144,
        97,
        6,
        162,
        86,
        91,
        97,
        6,
        140,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        41,
        96,
        36,
        130,
        1,
        82,
        127,
        85,
        110,
        107,
        110,
        111,
        119,
        110,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        97,
        110,
        100,
        32,
        110,
        111,
        32,
        102,
        97,
        108,
        108,
        98,
        97,
        99,
        96,
        68,
        130,
        1,
        82,
        104,
        26,
        200,
        25,
        25,
        89,
        154,
        91,
        153,
        89,
        96,
        186,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        37,
        96,
        36,
        130,
        1,
        82,
        127,
        84,
        97,
        114,
        103,
        101,
        116,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        100,
        111,
        101,
        115,
        32,
        110,
        111,
        116,
        32,
        99,
        111,
        110,
        116,
        97,
        105,
        110,
        96,
        68,
        130,
        1,
        82,
        100,
        32,
        99,
        111,
        100,
        101,
        96,
        216,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        31,
        144,
        145,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        144,
        130,
        16,
        23,
        97,
        5,
        221,
        87,
        96,
        64,
        82,
        86,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        5,
        87,
        81,
        97,
        6,
        218,
        129,
        97,
        3,
        57,
        86,
        91,
        144,
        86,
        91,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        61,
        144,
        253,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        5,
        87,
        81,
        144,
        86,
        91,
        96,
        0,
        25,
        129,
        20,
        97,
        7,
        7,
        87,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        145,
        144,
        129,
        16,
        21,
        97,
        7,
        45,
        87,
        96,
        6,
        27,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        53,
        128,
        21,
        21,
        129,
        3,
        97,
        3,
        74,
        87,
        144,
        86,
        91,
        53,
        97,
        6,
        218,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        51,
        3,
        97,
        1,
        244,
        87,
        96,
        0,
        91,
        131,
        129,
        16,
        97,
        7,
        155,
        87,
        80,
        80,
        80,
        80,
        86,
        91,
        97,
        8,
        56,
        144,
        96,
        32,
        97,
        7,
        229,
        97,
        7,
        185,
        130,
        97,
        7,
        179,
        133,
        138,
        138,
        97,
        7,
        29,
        86,
        91,
        1,
        97,
        7,
        67,
        86,
        91,
        97,
        7,
        212,
        97,
        7,
        207,
        97,
        7,
        202,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        97,
        7,
        80,
        86,
        91,
        97,
        3,
        79,
        86,
        91,
        144,
        96,
        255,
        128,
        25,
        131,
        84,
        22,
        145,
        21,
        21,
        22,
        23,
        144,
        85,
        86,
        91,
        127,
        73,
        169,
        153,
        61,
        243,
        234,
        162,
        68,
        168,
        79,
        147,
        148,
        137,
        48,
        112,
        156,
        65,
        168,
        251,
        216,
        103,
        122,
        140,
        214,
        130,
        240,
        113,
        249,
        61,
        141,
        198,
        203,
        132,
        97,
        8,
        36,
        97,
        8,
        24,
        97,
        7,
        202,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        147,
        97,
        7,
        179,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        146,
        22,
        145,
        96,
        32,
        144,
        162,
        97,
        6,
        248,
        86,
        91,
        97,
        7,
        142,
        86,
        91,
        71,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        128,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        0,
        144,
        96,
        4,
        96,
        64,
        81,
        128,
        148,
        129,
        147,
        99,
        13,
        14,
        48,
        219,
        96,
        228,
        27,
        131,
        82,
        90,
        241,
        128,
        21,
        97,
        1,
        187,
        87,
        97,
        8,
        148,
        87,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        5,
        221,
        87,
        96,
        64,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        128,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        32,
        96,
        4,
        145,
        96,
        64,
        81,
        146,
        131,
        128,
        146,
        99,
        141,
        165,
        203,
        91,
        96,
        224,
        27,
        130,
        82,
        90,
        250,
        144,
        129,
        21,
        97,
        1,
        187,
        87,
        96,
        0,
        145,
        97,
        9,
        10,
        87,
        91,
        80,
        22,
        51,
        3,
        97,
        1,
        244,
        87,
        86,
        91,
        97,
        9,
        34,
        145,
        80,
        96,
        32,
        61,
        129,
        17,
        97,
        1,
        237,
        87,
        97,
        1,
        222,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        56,
        97,
        9,
        0,
        86,
        91,
        144,
        145,
        96,
        32,
        144,
        96,
        68,
        96,
        64,
        81,
        148,
        96,
        0,
        128,
        149,
        129,
        148,
        130,
        147,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        132,
        82,
        96,
        4,
        82,
        96,
        36,
        82,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        132,
        81,
        20,
        22,
        23,
        22,
        144,
        96,
        96,
        82,
        129,
        96,
        64,
        82,
        21,
        97,
        9,
        107,
        87,
        80,
        86,
        91,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        15,
        96,
        36,
        130,
        1,
        82,
        110,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        138,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        254,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        99,
        97,
        108,
        108,
        100,
        97,
        116,
        97,
        32,
        97,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        10,
    ];
    ///The bytecode of the contract.
    pub static BACKSTOP_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        29,
        87,
        91,
        54,
        97,
        5,
        226,
        87,
        97,
        0,
        27,
        97,
        8,
        61,
        86,
        91,
        0,
        91,
        96,
        0,
        128,
        53,
        96,
        224,
        28,
        144,
        129,
        99,
        55,
        150,
        7,
        245,
        20,
        97,
        0,
        160,
        87,
        80,
        128,
        99,
        63,
        200,
        206,
        243,
        20,
        97,
        0,
        155,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        0,
        150,
        87,
        128,
        99,
        103,
        52,
        72,
        221,
        20,
        97,
        0,
        145,
        87,
        128,
        99,
        108,
        202,
        224,
        84,
        20,
        97,
        0,
        140,
        87,
        128,
        99,
        205,
        223,
        219,
        218,
        20,
        97,
        0,
        135,
        87,
        128,
        99,
        208,
        227,
        13,
        176,
        20,
        97,
        0,
        130,
        87,
        99,
        229,
        59,
        32,
        23,
        3,
        97,
        0,
        14,
        87,
        97,
        5,
        128,
        86,
        91,
        97,
        5,
        103,
        86,
        91,
        97,
        4,
        47,
        86,
        91,
        97,
        3,
        171,
        86,
        91,
        97,
        3,
        105,
        86,
        91,
        97,
        2,
        244,
        86,
        91,
        97,
        2,
        170,
        86,
        91,
        52,
        97,
        2,
        10,
        87,
        96,
        32,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        0,
        207,
        97,
        0,
        203,
        97,
        0,
        196,
        51,
        97,
        3,
        79,
        86,
        91,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        21,
        144,
        86,
        91,
        97,
        1,
        244,
        87,
        51,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        64,
        81,
        99,
        56,
        213,
        46,
        15,
        96,
        224,
        27,
        129,
        82,
        144,
        130,
        130,
        96,
        4,
        129,
        51,
        90,
        250,
        145,
        130,
        21,
        97,
        1,
        187,
        87,
        132,
        146,
        97,
        1,
        197,
        87,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        144,
        129,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        145,
        132,
        131,
        96,
        36,
        129,
        132,
        90,
        250,
        146,
        131,
        21,
        97,
        1,
        187,
        87,
        97,
        1,
        129,
        149,
        135,
        148,
        97,
        1,
        140,
        87,
        91,
        80,
        80,
        96,
        64,
        81,
        130,
        129,
        82,
        51,
        144,
        127,
        112,
        235,
        67,
        196,
        168,
        174,
        140,
        64,
        80,
        45,
        207,
        34,
        67,
        108,
        80,
        156,
        40,
        214,
        255,
        66,
        28,
        240,
        124,
        73,
        27,
        229,
        105,
        132,
        189,
        152,
        112,
        104,
        144,
        96,
        32,
        144,
        163,
        128,
        130,
        16,
        21,
        97,
        1,
        132,
        87,
        80,
        144,
        91,
        51,
        144,
        97,
        9,
        40,
        86,
        91,
        128,
        243,
        91,
        144,
        80,
        144,
        97,
        1,
        122,
        86,
        91,
        97,
        1,
        172,
        146,
        148,
        80,
        128,
        61,
        16,
        97,
        1,
        180,
        87,
        91,
        97,
        1,
        164,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        129,
        1,
        144,
        97,
        6,
        233,
        86,
        91,
        145,
        134,
        128,
        97,
        1,
        63,
        86,
        91,
        80,
        61,
        97,
        1,
        154,
        86,
        91,
        97,
        6,
        221,
        86,
        91,
        97,
        6,
        57,
        86,
        91,
        97,
        1,
        230,
        145,
        146,
        80,
        131,
        61,
        133,
        17,
        97,
        1,
        237,
        87,
        91,
        97,
        1,
        222,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        129,
        1,
        144,
        97,
        6,
        197,
        86,
        91,
        144,
        132,
        97,
        0,
        254,
        86,
        91,
        80,
        61,
        97,
        1,
        212,
        86,
        91,
        96,
        64,
        81,
        98,
        130,
        180,
        41,
        96,
        232,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        97,
        2,
        90,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        116,
        104,
        101,
        114,
        32,
        115,
        101,
        110,
        116,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        112,
        97,
        121,
        97,
        98,
        108,
        101,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        96,
        68,
        130,
        1,
        82,
        97,
        55,
        183,
        96,
        241,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        100,
        97,
        116,
        97,
        32,
        116,
        111,
        111,
        32,
        115,
        104,
        111,
        96,
        68,
        130,
        1,
        82,
        97,
        28,
        157,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        97,
        2,
        10,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        3,
        97,
        3,
        74,
        87,
        86,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        3,
        134,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        0,
        96,
        32,
        82,
        96,
        32,
        96,
        255,
        96,
        64,
        96,
        0,
        32,
        84,
        22,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        97,
        0,
        27,
        96,
        4,
        53,
        97,
        3,
        203,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        36,
        53,
        97,
        3,
        215,
        129,
        97,
        3,
        57,
        86,
        91,
        97,
        3,
        223,
        97,
        8,
        167,
        86,
        91,
        96,
        68,
        53,
        145,
        97,
        9,
        40,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        114,
        114,
        97,
        121,
        32,
        115,
        116,
        114,
        105,
        100,
        101,
        96,
        168,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        128,
        130,
        17,
        97,
        5,
        23,
        87,
        54,
        96,
        35,
        131,
        1,
        18,
        21,
        97,
        4,
        208,
        87,
        129,
        96,
        4,
        1,
        53,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        54,
        96,
        36,
        130,
        96,
        6,
        27,
        132,
        1,
        1,
        17,
        97,
        4,
        132,
        87,
        96,
        36,
        97,
        0,
        27,
        146,
        1,
        97,
        7,
        90,
        86,
        91,
        97,
        3,
        232,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        14,
        78,
        76,
        47,
        36,
        13,
        140,
        173,
        204,
        238,
        141,
        96,
        171,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        43,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        9,
        160,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        68,
        130,
        1,
        82,
        106,
        28,
        156,
        152,
        94,
        72,
        27,
        217,
        153,
        156,
        217,
        93,
        96,
        170,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        116,
        117,
        112,
        108,
        101,
        32,
        111,
        102,
        102,
        115,
        96,
        68,
        130,
        1,
        82,
        97,
        25,
        93,
        96,
        242,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        97,
        0,
        27,
        97,
        8,
        61,
        86,
        91,
        52,
        97,
        2,
        239,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        5,
        87,
        96,
        4,
        53,
        97,
        5,
        157,
        129,
        97,
        3,
        57,
        86,
        91,
        97,
        5,
        165,
        97,
        8,
        167,
        86,
        91,
        96,
        0,
        128,
        128,
        128,
        128,
        148,
        71,
        144,
        90,
        241,
        80,
        61,
        21,
        97,
        1,
        129,
        87,
        61,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        5,
        221,
        87,
        96,
        64,
        81,
        97,
        1,
        129,
        145,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        144,
        97,
        6,
        162,
        86,
        91,
        97,
        6,
        140,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        41,
        96,
        36,
        130,
        1,
        82,
        127,
        85,
        110,
        107,
        110,
        111,
        119,
        110,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        97,
        110,
        100,
        32,
        110,
        111,
        32,
        102,
        97,
        108,
        108,
        98,
        97,
        99,
        96,
        68,
        130,
        1,
        82,
        104,
        26,
        200,
        25,
        25,
        89,
        154,
        91,
        153,
        89,
        96,
        186,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        37,
        96,
        36,
        130,
        1,
        82,
        127,
        84,
        97,
        114,
        103,
        101,
        116,
        32,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        32,
        100,
        111,
        101,
        115,
        32,
        110,
        111,
        116,
        32,
        99,
        111,
        110,
        116,
        97,
        105,
        110,
        96,
        68,
        130,
        1,
        82,
        100,
        32,
        99,
        111,
        100,
        101,
        96,
        216,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        144,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        31,
        144,
        145,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        144,
        130,
        16,
        23,
        97,
        5,
        221,
        87,
        96,
        64,
        82,
        86,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        5,
        87,
        81,
        97,
        6,
        218,
        129,
        97,
        3,
        57,
        86,
        91,
        144,
        86,
        91,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        61,
        144,
        253,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        5,
        87,
        81,
        144,
        86,
        91,
        96,
        0,
        25,
        129,
        20,
        97,
        7,
        7,
        87,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        145,
        144,
        129,
        16,
        21,
        97,
        7,
        45,
        87,
        96,
        6,
        27,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        53,
        128,
        21,
        21,
        129,
        3,
        97,
        3,
        74,
        87,
        144,
        86,
        91,
        53,
        97,
        6,
        218,
        129,
        97,
        3,
        57,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        51,
        3,
        97,
        1,
        244,
        87,
        96,
        0,
        91,
        131,
        129,
        16,
        97,
        7,
        155,
        87,
        80,
        80,
        80,
        80,
        86,
        91,
        97,
        8,
        56,
        144,
        96,
        32,
        97,
        7,
        229,
        97,
        7,
        185,
        130,
        97,
        7,
        179,
        133,
        138,
        138,
        97,
        7,
        29,
        86,
        91,
        1,
        97,
        7,
        67,
        86,
        91,
        97,
        7,
        212,
        97,
        7,
        207,
        97,
        7,
        202,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        97,
        7,
        80,
        86,
        91,
        97,
        3,
        79,
        86,
        91,
        144,
        96,
        255,
        128,
        25,
        131,
        84,
        22,
        145,
        21,
        21,
        22,
        23,
        144,
        85,
        86,
        91,
        127,
        73,
        169,
        153,
        61,
        243,
        234,
        162,
        68,
        168,
        79,
        147,
        148,
        137,
        48,
        112,
        156,
        65,
        168,
        251,
        216,
        103,
        122,
        140,
        214,
        130,
        240,
        113,
        249,
        61,
        141,
        198,
        203,
        132,
        97,
        8,
        36,
        97,
        8,
        24,
        97,
        7,
        202,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        147,
        97,
        7,
        179,
        134,
        139,
        139,
        97,
        7,
        29,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        146,
        22,
        145,
        96,
        32,
        144,
        162,
        97,
        6,
        248,
        86,
        91,
        97,
        7,
        142,
        86,
        91,
        71,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        128,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        0,
        144,
        96,
        4,
        96,
        64,
        81,
        128,
        148,
        129,
        147,
        99,
        13,
        14,
        48,
        219,
        96,
        228,
        27,
        131,
        82,
        90,
        241,
        128,
        21,
        97,
        1,
        187,
        87,
        97,
        8,
        148,
        87,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        5,
        221,
        87,
        96,
        64,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        128,
        59,
        21,
        97,
        1,
        192,
        87,
        96,
        32,
        96,
        4,
        145,
        96,
        64,
        81,
        146,
        131,
        128,
        146,
        99,
        141,
        165,
        203,
        91,
        96,
        224,
        27,
        130,
        82,
        90,
        250,
        144,
        129,
        21,
        97,
        1,
        187,
        87,
        96,
        0,
        145,
        97,
        9,
        10,
        87,
        91,
        80,
        22,
        51,
        3,
        97,
        1,
        244,
        87,
        86,
        91,
        97,
        9,
        34,
        145,
        80,
        96,
        32,
        61,
        129,
        17,
        97,
        1,
        237,
        87,
        97,
        1,
        222,
        129,
        131,
        97,
        6,
        162,
        86,
        91,
        56,
        97,
        9,
        0,
        86,
        91,
        144,
        145,
        96,
        32,
        144,
        96,
        68,
        96,
        64,
        81,
        148,
        96,
        0,
        128,
        149,
        129,
        148,
        130,
        147,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        132,
        82,
        96,
        4,
        82,
        96,
        36,
        82,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        132,
        81,
        20,
        22,
        23,
        22,
        144,
        96,
        96,
        82,
        129,
        96,
        64,
        82,
        21,
        97,
        9,
        107,
        87,
        80,
        86,
        91,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        15,
        96,
        36,
        130,
        1,
        82,
        110,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        138,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        254,
        65,
        66,
        73,
        32,
        100,
        101,
        99,
        111,
        100,
        105,
        110,
        103,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        99,
        97,
        108,
        108,
        100,
        97,
        116,
        97,
        32,
        97,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        10,
    ];
    ///The deployed bytecode of the contract.
    pub static BACKSTOP_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct Backstop<M>(::ethers_contract::Contract<M>);
    impl<M> ::core::clone::Clone for Backstop<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for Backstop<M> {
        type Target = ::ethers_contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for Backstop<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for Backstop<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(Backstop))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> Backstop<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers_contract::Contract::new(
                address.into(),
                BACKSTOP_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers_contract::builders::ContractDeployer<M, Self>,
            ::ethers_contract::ContractError<M>,
        > {
            let factory = ::ethers_contract::ContractFactory::new(
                BACKSTOP_ABI.clone(),
                BACKSTOP_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers_contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `claim` (0x379607f5) function
        pub fn claim(
            &self,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([55, 150, 7, 245], amount)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deposit` (0xd0e30db0) function
        pub fn deposit(&self) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([208, 227, 13, 176], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isApproved` (0x673448dd) function
        pub fn is_approved(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([103, 52, 72, 221], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `manager` (0x481c6a75) function
        pub fn manager(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([72, 28, 106, 117], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rescueFunds` (0x6ccae054) function
        pub fn rescue_funds_with_token(
            &self,
            token: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([108, 202, 224, 84], (token, to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rescueFunds` (0xe53b2017) function
        pub fn rescue_funds(
            &self,
            to: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([229, 59, 32, 23], to)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateApprovals` (0xcddfdbda) function
        pub fn update_approvals(
            &self,
            approvals: ::std::vec::Vec<BackstopApproval>,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([205, 223, 219, 218], approvals)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `weth` (0x3fc8cef3) function
        pub fn weth(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([63, 200, 206, 243], ())
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `BackstopApprovalStatusUpdated` event
        pub fn backstop_approval_status_updated_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            BackstopApprovalStatusUpdatedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Claim` event
        pub fn claim_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, ClaimFilter> {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, BackstopEvents> {
            self.0
                .event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers_contract::Contract<M>> for Backstop<M> {
        fn from(contract: ::ethers_contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `InvalidAddress` with signature `InvalidAddress()` and selector `0xe6c4247b`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "InvalidAddress", abi = "InvalidAddress()")]
    pub struct InvalidAddress;
    ///Custom Error type `Unauthorized` with signature `Unauthorized()` and selector `0x82b42900`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "Unauthorized", abi = "Unauthorized()")]
    pub struct Unauthorized;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum BackstopErrors {
        InvalidAddress(InvalidAddress),
        Unauthorized(Unauthorized),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for BackstopErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) =
                <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded) = <InvalidAddress as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidAddress(decoded));
            }
            if let Ok(decoded) = <Unauthorized as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Unauthorized(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for BackstopErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::InvalidAddress(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Unauthorized(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers_contract::ContractRevert for BackstopErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector == <InvalidAddress as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector == <Unauthorized as ::ethers_contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for BackstopErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::InvalidAddress(element) => ::core::fmt::Display::fmt(element, f),
                Self::Unauthorized(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for BackstopErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<InvalidAddress> for BackstopErrors {
        fn from(value: InvalidAddress) -> Self {
            Self::InvalidAddress(value)
        }
    }
    impl ::core::convert::From<Unauthorized> for BackstopErrors {
        fn from(value: Unauthorized) -> Self {
            Self::Unauthorized(value)
        }
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(
        name = "BackstopApprovalStatusUpdated",
        abi = "BackstopApprovalStatusUpdated(address,bool)"
    )]
    pub struct BackstopApprovalStatusUpdatedFilter {
        #[ethevent(indexed)]
        pub set: ::ethers::core::types::Address,
        pub status: bool,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(name = "Claim", abi = "Claim(address,address,uint256)")]
    pub struct ClaimFilter {
        #[ethevent(indexed)]
        pub set: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub asset: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum BackstopEvents {
        BackstopApprovalStatusUpdatedFilter(BackstopApprovalStatusUpdatedFilter),
        ClaimFilter(ClaimFilter),
    }
    impl ::ethers_contract::EthLogDecode for BackstopEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = BackstopApprovalStatusUpdatedFilter::decode_log(log) {
                return Ok(BackstopEvents::BackstopApprovalStatusUpdatedFilter(decoded));
            }
            if let Ok(decoded) = ClaimFilter::decode_log(log) {
                return Ok(BackstopEvents::ClaimFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for BackstopEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::BackstopApprovalStatusUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ClaimFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<BackstopApprovalStatusUpdatedFilter> for BackstopEvents {
        fn from(value: BackstopApprovalStatusUpdatedFilter) -> Self {
            Self::BackstopApprovalStatusUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<ClaimFilter> for BackstopEvents {
        fn from(value: ClaimFilter) -> Self {
            Self::ClaimFilter(value)
        }
    }
    ///Container type for all input parameters for the `claim` function with signature `claim(uint256)` and selector `0x379607f5`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "claim", abi = "claim(uint256)")]
    pub struct ClaimCall {
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `deposit` function with signature `deposit()` and selector `0xd0e30db0`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "deposit", abi = "deposit()")]
    pub struct DepositCall;
    ///Container type for all input parameters for the `isApproved` function with signature `isApproved(address)` and selector `0x673448dd`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "isApproved", abi = "isApproved(address)")]
    pub struct IsApprovedCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "manager", abi = "manager()")]
    pub struct ManagerCall;
    ///Container type for all input parameters for the `rescueFunds` function with signature `rescueFunds(address,address,uint256)` and selector `0x6ccae054`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "rescueFunds", abi = "rescueFunds(address,address,uint256)")]
    pub struct RescueFundsWithTokenCall {
        pub token: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `rescueFunds` function with signature `rescueFunds(address)` and selector `0xe53b2017`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "rescueFunds", abi = "rescueFunds(address)")]
    pub struct RescueFundsCall {
        pub to: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `updateApprovals` function with signature `updateApprovals((address,bool)[])` and selector `0xcddfdbda`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "updateApprovals", abi = "updateApprovals((address,bool)[])")]
    pub struct UpdateApprovalsCall {
        pub approvals: ::std::vec::Vec<BackstopApproval>,
    }
    ///Container type for all input parameters for the `weth` function with signature `weth()` and selector `0x3fc8cef3`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "weth", abi = "weth()")]
    pub struct WethCall;
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum BackstopCalls {
        Claim(ClaimCall),
        Deposit(DepositCall),
        IsApproved(IsApprovedCall),
        Manager(ManagerCall),
        RescueFundsWithToken(RescueFundsWithTokenCall),
        RescueFunds(RescueFundsCall),
        UpdateApprovals(UpdateApprovalsCall),
        Weth(WethCall),
    }
    impl ::ethers::core::abi::AbiDecode for BackstopCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <ClaimCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Claim(decoded));
            }
            if let Ok(decoded) = <DepositCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Deposit(decoded));
            }
            if let Ok(decoded) = <IsApprovedCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsApproved(decoded));
            }
            if let Ok(decoded) = <ManagerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Manager(decoded));
            }
            if let Ok(decoded) =
                <RescueFundsWithTokenCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::RescueFundsWithToken(decoded));
            }
            if let Ok(decoded) = <RescueFundsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RescueFunds(decoded));
            }
            if let Ok(decoded) =
                <UpdateApprovalsCall as ::ethers::core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::UpdateApprovals(decoded));
            }
            if let Ok(decoded) = <WethCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Weth(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for BackstopCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::Claim(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Deposit(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::IsApproved(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Manager(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RescueFundsWithToken(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RescueFunds(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::UpdateApprovals(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Weth(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for BackstopCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::Claim(element) => ::core::fmt::Display::fmt(element, f),
                Self::Deposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsApproved(element) => ::core::fmt::Display::fmt(element, f),
                Self::Manager(element) => ::core::fmt::Display::fmt(element, f),
                Self::RescueFundsWithToken(element) => ::core::fmt::Display::fmt(element, f),
                Self::RescueFunds(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateApprovals(element) => ::core::fmt::Display::fmt(element, f),
                Self::Weth(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<ClaimCall> for BackstopCalls {
        fn from(value: ClaimCall) -> Self {
            Self::Claim(value)
        }
    }
    impl ::core::convert::From<DepositCall> for BackstopCalls {
        fn from(value: DepositCall) -> Self {
            Self::Deposit(value)
        }
    }
    impl ::core::convert::From<IsApprovedCall> for BackstopCalls {
        fn from(value: IsApprovedCall) -> Self {
            Self::IsApproved(value)
        }
    }
    impl ::core::convert::From<ManagerCall> for BackstopCalls {
        fn from(value: ManagerCall) -> Self {
            Self::Manager(value)
        }
    }
    impl ::core::convert::From<RescueFundsWithTokenCall> for BackstopCalls {
        fn from(value: RescueFundsWithTokenCall) -> Self {
            Self::RescueFundsWithToken(value)
        }
    }
    impl ::core::convert::From<RescueFundsCall> for BackstopCalls {
        fn from(value: RescueFundsCall) -> Self {
            Self::RescueFunds(value)
        }
    }
    impl ::core::convert::From<UpdateApprovalsCall> for BackstopCalls {
        fn from(value: UpdateApprovalsCall) -> Self {
            Self::UpdateApprovals(value)
        }
    }
    impl ::core::convert::From<WethCall> for BackstopCalls {
        fn from(value: WethCall) -> Self {
            Self::Weth(value)
        }
    }
    ///Container type for all return fields from the `isApproved` function with signature `isApproved(address)` and selector `0x673448dd`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct IsApprovedReturn(pub bool);
    ///Container type for all return fields from the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct ManagerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `weth` function with signature `weth()` and selector `0x3fc8cef3`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct WethReturn(pub ::ethers::core::types::Address);
}
