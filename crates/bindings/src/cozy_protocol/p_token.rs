pub use p_token::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod p_token {
    pub use super::super::shared_types::*;
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"contract IManager\",\"name\":\"manager_\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Initialized\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InsufficientBalance\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidAddress\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"SafeCastFailed\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Unauthorized\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"UnpackableString\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Approval\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Transfer\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addInactivePeriod\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOfMatured\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance_\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint216\",\"name\":\"amount_\",\"type\":\"uint216\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"burn\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"cumulativeMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getMints\",\"outputs\":[{\"internalType\":\"struct MintData[]\",\"name\":\"\",\"type\":\"tuple[]\",\"components\":[{\"internalType\":\"uint216\",\"name\":\"amount\",\"type\":\"uint216\",\"components\":[]},{\"internalType\":\"uint40\",\"name\":\"time\",\"type\":\"uint40\",\"components\":[]}]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"inactivityData\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"inactiveTransitionTime\",\"type\":\"uint64\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"contract ISet\",\"name\":\"set_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"contract ITrigger\",\"name\":\"trigger_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"initialize\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"manager\",\"outputs\":[{\"internalType\":\"contract IManager\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint216\",\"name\":\"amount_\",\"type\":\"uint216\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"mints\",\"outputs\":[{\"internalType\":\"uint216\",\"name\":\"amount\",\"type\":\"uint216\",\"components\":[]},{\"internalType\":\"uint40\",\"name\":\"time\",\"type\":\"uint40\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"permit\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"set\",\"outputs\":[{\"internalType\":\"contract ISet\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"contract ITrigger\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"timestamp_\",\"type\":\"uint64\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateInactiveTransitionTime\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static PTOKEN_ABI: ::ethers_contract::Lazy<::ethers::core::abi::Abi> = ::ethers_contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        192,
        52,
        97,
        0,
        150,
        87,
        96,
        31,
        97,
        23,
        143,
        56,
        129,
        144,
        3,
        145,
        130,
        1,
        96,
        31,
        25,
        22,
        131,
        1,
        145,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        131,
        17,
        132,
        132,
        16,
        23,
        97,
        0,
        155,
        87,
        128,
        132,
        146,
        96,
        32,
        148,
        96,
        64,
        82,
        131,
        57,
        129,
        1,
        3,
        18,
        97,
        0,
        150,
        87,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        128,
        130,
        3,
        97,
        0,
        150,
        87,
        70,
        96,
        128,
        82,
        21,
        97,
        0,
        132,
        87,
        96,
        160,
        82,
        96,
        64,
        81,
        97,
        22,
        221,
        144,
        129,
        97,
        0,
        178,
        130,
        57,
        96,
        128,
        81,
        129,
        97,
        19,
        234,
        1,
        82,
        96,
        160,
        81,
        129,
        129,
        129,
        97,
        7,
        142,
        1,
        82,
        97,
        16,
        124,
        1,
        82,
        243,
        91,
        96,
        64,
        81,
        99,
        230,
        196,
        36,
        123,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        96,
        0,
        128,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        1,
        167,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        1,
        162,
        87,
        128,
        99,
        11,
        237,
        211,
        167,
        20,
        97,
        1,
        157,
        87,
        128,
        99,
        13,
        132,
        201,
        122,
        20,
        97,
        1,
        152,
        87,
        128,
        99,
        24,
        22,
        13,
        221,
        20,
        97,
        1,
        147,
        87,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        1,
        142,
        87,
        128,
        99,
        42,
        217,
        132,
        225,
        20,
        97,
        1,
        137,
        87,
        128,
        99,
        49,
        60,
        229,
        103,
        20,
        97,
        1,
        132,
        87,
        128,
        99,
        52,
        137,
        183,
        164,
        20,
        97,
        1,
        127,
        87,
        128,
        99,
        54,
        68,
        229,
        21,
        20,
        97,
        1,
        122,
        87,
        128,
        99,
        67,
        99,
        176,
        111,
        20,
        97,
        1,
        117,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        1,
        112,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        1,
        107,
        87,
        128,
        99,
        116,
        206,
        86,
        113,
        20,
        97,
        1,
        102,
        87,
        128,
        99,
        126,
        206,
        190,
        0,
        20,
        97,
        1,
        97,
        87,
        128,
        99,
        127,
        236,
        141,
        56,
        20,
        97,
        1,
        92,
        87,
        128,
        99,
        137,
        35,
        42,
        0,
        20,
        97,
        1,
        87,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        1,
        82,
        87,
        128,
        99,
        169,
        5,
        156,
        187,
        20,
        97,
        1,
        77,
        87,
        128,
        99,
        184,
        224,
        16,
        222,
        20,
        97,
        1,
        72,
        87,
        128,
        99,
        213,
        5,
        172,
        207,
        20,
        97,
        1,
        67,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        20,
        97,
        1,
        62,
        87,
        128,
        99,
        235,
        66,
        92,
        185,
        20,
        97,
        1,
        57,
        87,
        128,
        99,
        243,
        86,
        164,
        183,
        20,
        97,
        1,
        52,
        87,
        99,
        246,
        234,
        179,
        39,
        20,
        97,
        1,
        47,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        14,
        90,
        86,
        91,
        97,
        14,
        49,
        86,
        91,
        97,
        13,
        111,
        86,
        91,
        97,
        13,
        28,
        86,
        91,
        97,
        11,
        75,
        86,
        91,
        97,
        11,
        34,
        86,
        91,
        97,
        10,
        155,
        86,
        91,
        97,
        10,
        124,
        86,
        91,
        97,
        9,
        123,
        86,
        91,
        97,
        9,
        50,
        86,
        91,
        97,
        8,
        245,
        86,
        91,
        97,
        8,
        84,
        86,
        91,
        97,
        7,
        189,
        86,
        91,
        97,
        7,
        120,
        86,
        91,
        97,
        7,
        42,
        86,
        91,
        97,
        7,
        15,
        86,
        91,
        97,
        6,
        224,
        86,
        91,
        97,
        6,
        191,
        86,
        91,
        97,
        5,
        226,
        86,
        91,
        97,
        4,
        200,
        86,
        91,
        97,
        4,
        170,
        86,
        91,
        97,
        3,
        195,
        86,
        91,
        97,
        3,
        88,
        86,
        91,
        97,
        2,
        58,
        86,
        91,
        97,
        1,
        245,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        129,
        131,
        1,
        129,
        144,
        82,
        144,
        147,
        146,
        96,
        0,
        91,
        130,
        129,
        16,
        97,
        1,
        225,
        87,
        80,
        80,
        96,
        64,
        146,
        147,
        80,
        96,
        0,
        131,
        130,
        132,
        1,
        1,
        82,
        96,
        31,
        128,
        25,
        145,
        1,
        22,
        1,
        1,
        144,
        86,
        91,
        129,
        129,
        1,
        134,
        1,
        81,
        132,
        130,
        1,
        96,
        64,
        1,
        82,
        133,
        1,
        97,
        1,
        191,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        97,
        2,
        32,
        97,
        2,
        20,
        96,
        0,
        84,
        97,
        22,
        44,
        86,
        91,
        96,
        64,
        81,
        145,
        130,
        145,
        130,
        97,
        1,
        172,
        86,
        91,
        3,
        144,
        243,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        2,
        87,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        51,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        129,
        97,
        2,
        115,
        130,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        85,
        96,
        64,
        81,
        145,
        130,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        177,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        32,
        144,
        163,
        96,
        32,
        96,
        64,
        81,
        96,
        1,
        129,
        82,
        243,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        9,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        144,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        13,
        84,
        129,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        13,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        144,
        96,
        0,
        144,
        86,
        91,
        97,
        3,
        10,
        86,
        91,
        128,
        84,
        130,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        144,
        96,
        0,
        144,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        3,
        117,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        36,
        53,
        145,
        144,
        130,
        16,
        21,
        97,
        2,
        36,
        87,
        96,
        64,
        145,
        97,
        3,
        166,
        145,
        97,
        3,
        64,
        86,
        91,
        80,
        84,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        129,
        82,
        96,
        216,
        145,
        144,
        145,
        28,
        96,
        32,
        130,
        1,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        4,
        167,
        87,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        96,
        12,
        84,
        96,
        13,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        145,
        130,
        22,
        144,
        128,
        21,
        97,
        4,
        142,
        87,
        96,
        0,
        25,
        129,
        1,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        130,
        97,
        4,
        22,
        129,
        146,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        22,
        91,
        22,
        145,
        129,
        129,
        66,
        22,
        3,
        129,
        129,
        17,
        97,
        4,
        137,
        87,
        22,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        97,
        4,
        110,
        97,
        4,
        68,
        97,
        4,
        115,
        147,
        97,
        22,
        74,
        86,
        91,
        97,
        4,
        94,
        97,
        4,
        79,
        97,
        15,
        15,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        148,
        22,
        132,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        96,
        32,
        131,
        1,
        82,
        86,
        91,
        97,
        17,
        239,
        86,
        91,
        96,
        12,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        25,
        22,
        144,
        85,
        128,
        243,
        91,
        128,
        243,
        91,
        97,
        17,
        189,
        86,
        91,
        80,
        129,
        131,
        97,
        4,
        29,
        86,
        91,
        96,
        64,
        81,
        98,
        130,
        180,
        41,
        96,
        232,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        128,
        253,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        96,
        3,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        4,
        229,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        4,
        241,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        68,
        53,
        145,
        97,
        4,
        255,
        131,
        130,
        97,
        21,
        226,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        146,
        131,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        97,
        5,
        34,
        96,
        64,
        96,
        0,
        32,
        51,
        144,
        97,
        2,
        243,
        86,
        91,
        84,
        96,
        1,
        129,
        1,
        97,
        5,
        126,
        87,
        91,
        80,
        97,
        5,
        69,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        147,
        97,
        2,
        191,
        86,
        91,
        97,
        5,
        80,
        134,
        130,
        84,
        97,
        17,
        226,
        86,
        91,
        144,
        85,
        97,
        5,
        91,
        129,
        97,
        2,
        191,
        86,
        91,
        128,
        84,
        134,
        1,
        144,
        85,
        96,
        64,
        81,
        148,
        133,
        82,
        22,
        146,
        128,
        96,
        32,
        129,
        1,
        91,
        3,
        144,
        163,
        96,
        64,
        81,
        96,
        1,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        133,
        129,
        3,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        147,
        97,
        5,
        69,
        145,
        97,
        5,
        174,
        51,
        97,
        5,
        169,
        132,
        97,
        2,
        165,
        86,
        91,
        97,
        2,
        243,
        86,
        91,
        85,
        147,
        80,
        97,
        5,
        44,
        86,
        91,
        96,
        36,
        53,
        144,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        96,
        68,
        53,
        144,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        5,
        255,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        6,
        7,
        97,
        5,
        182,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        145,
        144,
        131,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        97,
        4,
        134,
        145,
        96,
        0,
        147,
        129,
        22,
        132,
        82,
        96,
        8,
        96,
        32,
        82,
        97,
        6,
        97,
        96,
        64,
        133,
        32,
        146,
        96,
        64,
        81,
        144,
        97,
        6,
        66,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        22,
        128,
        130,
        82,
        66,
        100,
        255,
        255,
        255,
        255,
        255,
        22,
        96,
        32,
        131,
        1,
        82,
        147,
        97,
        21,
        4,
        86,
        91,
        97,
        6,
        106,
        129,
        97,
        2,
        217,
        86,
        91,
        128,
        84,
        144,
        129,
        21,
        97,
        6,
        180,
        87,
        97,
        6,
        140,
        97,
        6,
        150,
        145,
        97,
        6,
        134,
        97,
        6,
        175,
        148,
        97,
        17,
        211,
        86,
        91,
        144,
        97,
        3,
        64,
        86,
        91,
        144,
        84,
        144,
        96,
        3,
        27,
        28,
        144,
        86,
        91,
        97,
        6,
        169,
        132,
        97,
        6,
        163,
        133,
        97,
        2,
        217,
        86,
        91,
        146,
        97,
        18,
        97,
        86,
        91,
        144,
        97,
        21,
        100,
        86,
        91,
        97,
        21,
        153,
        86,
        91,
        80,
        80,
        97,
        6,
        175,
        132,
        97,
        6,
        150,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        96,
        255,
        96,
        2,
        84,
        22,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        7,
        7,
        96,
        4,
        53,
        97,
        7,
        2,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        16,
        34,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        7,
        7,
        97,
        19,
        231,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        22,
        144,
        129,
        144,
        3,
        97,
        2,
        36,
        87,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        96,
        12,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        25,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        0,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        7,
        218,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        32,
        96,
        64,
        96,
        0,
        32,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        96,
        32,
        128,
        130,
        1,
        144,
        128,
        131,
        82,
        131,
        81,
        128,
        146,
        82,
        128,
        96,
        64,
        128,
        148,
        1,
        148,
        1,
        146,
        96,
        0,
        144,
        91,
        131,
        130,
        16,
        97,
        8,
        36,
        87,
        80,
        80,
        80,
        80,
        80,
        144,
        86,
        91,
        132,
        81,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        22,
        135,
        82,
        131,
        1,
        81,
        100,
        255,
        255,
        255,
        255,
        255,
        22,
        134,
        132,
        1,
        82,
        148,
        133,
        1,
        148,
        147,
        130,
        1,
        147,
        96,
        1,
        144,
        145,
        1,
        144,
        97,
        8,
        21,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        8,
        114,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        8,
        129,
        82,
        96,
        64,
        144,
        129,
        96,
        0,
        32,
        128,
        84,
        144,
        97,
        8,
        148,
        130,
        97,
        15,
        68,
        86,
        91,
        146,
        97,
        8,
        161,
        133,
        81,
        148,
        133,
        97,
        14,
        236,
        86,
        91,
        130,
        132,
        82,
        96,
        0,
        145,
        130,
        82,
        128,
        130,
        32,
        129,
        133,
        1,
        91,
        132,
        132,
        16,
        97,
        8,
        196,
        87,
        134,
        81,
        128,
        97,
        2,
        32,
        136,
        130,
        97,
        7,
        250,
        86,
        91,
        96,
        1,
        131,
        129,
        146,
        137,
        81,
        97,
        8,
        212,
        129,
        97,
        14,
        204,
        86,
        91,
        133,
        84,
        132,
        128,
        96,
        216,
        27,
        3,
        129,
        22,
        130,
        82,
        96,
        216,
        28,
        131,
        130,
        1,
        82,
        129,
        82,
        1,
        146,
        1,
        147,
        1,
        146,
        144,
        97,
        8,
        176,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        9,
        18,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        7,
        96,
        32,
        82,
        96,
        32,
        96,
        64,
        96,
        0,
        32,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        11,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        96,
        68,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        96,
        132,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        9,
        152,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        9,
        164,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        9,
        172,
        97,
        9,
        91,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        10,
        106,
        87,
        97,
        10,
        104,
        146,
        96,
        255,
        97,
        10,
        70,
        146,
        97,
        10,
        10,
        97,
        9,
        209,
        97,
        15,
        30,
        86,
        91,
        106,
        33,
        183,
        189,
        60,
        144,
        40,
        42,
        55,
        181,
        178,
        183,
        96,
        169,
        27,
        96,
        32,
        130,
        1,
        82,
        97,
        10,
        2,
        97,
        9,
        240,
        97,
        15,
        49,
        86,
        91,
        145,
        98,
        16,
        212,
        21,
        96,
        234,
        27,
        96,
        32,
        132,
        1,
        82,
        97,
        22,
        4,
        86,
        91,
        96,
        0,
        85,
        97,
        22,
        4,
        86,
        91,
        96,
        1,
        85,
        22,
        96,
        255,
        25,
        96,
        2,
        84,
        22,
        23,
        96,
        2,
        85,
        97,
        10,
        33,
        97,
        20,
        24,
        86,
        91,
        96,
        6,
        85,
        96,
        10,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        96,
        11,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        0,
        91,
        96,
        64,
        81,
        99,
        2,
        237,
        84,
        61,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        97,
        2,
        32,
        97,
        2,
        20,
        96,
        1,
        84,
        97,
        22,
        44,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        10,
        184,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        10,
        198,
        130,
        51,
        97,
        21,
        226,
        86,
        91,
        51,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        128,
        84,
        144,
        131,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        85,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        144,
        129,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        129,
        129,
        84,
        1,
        144,
        85,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        128,
        97,
        5,
        111,
        51,
        148,
        130,
        145,
        144,
        96,
        32,
        131,
        1,
        146,
        82,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        10,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        224,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        11,
        104,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        11,
        117,
        130,
        97,
        2,
        41,
        86,
        91,
        96,
        68,
        53,
        96,
        100,
        53,
        146,
        96,
        32,
        97,
        12,
        162,
        97,
        11,
        137,
        97,
        9,
        107,
        86,
        91,
        149,
        97,
        11,
        150,
        66,
        130,
        16,
        21,
        97,
        19,
        100,
        86,
        91,
        97,
        12,
        105,
        97,
        12,
        117,
        97,
        11,
        164,
        97,
        19,
        231,
        86,
        91,
        146,
        136,
        97,
        11,
        194,
        129,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        7,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        144,
        86,
        91,
        128,
        84,
        96,
        1,
        129,
        1,
        144,
        145,
        85,
        96,
        64,
        128,
        81,
        127,
        110,
        113,
        237,
        174,
        18,
        177,
        185,
        127,
        77,
        31,
        96,
        55,
        15,
        239,
        16,
        16,
        95,
        162,
        250,
        174,
        1,
        38,
        17,
        74,
        22,
        156,
        100,
        132,
        93,
        97,
        38,
        201,
        138,
        130,
        1,
        144,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        148,
        133,
        22,
        96,
        32,
        130,
        1,
        82,
        147,
        139,
        22,
        145,
        132,
        1,
        145,
        144,
        145,
        82,
        96,
        96,
        131,
        1,
        139,
        144,
        82,
        96,
        128,
        131,
        1,
        145,
        144,
        145,
        82,
        96,
        160,
        130,
        1,
        146,
        144,
        146,
        82,
        129,
        96,
        192,
        130,
        1,
        3,
        145,
        97,
        12,
        64,
        96,
        31,
        25,
        147,
        132,
        129,
        1,
        131,
        82,
        130,
        97,
        14,
        236,
        86,
        91,
        81,
        144,
        32,
        96,
        64,
        81,
        147,
        132,
        145,
        136,
        131,
        1,
        150,
        135,
        144,
        145,
        96,
        66,
        146,
        97,
        25,
        1,
        96,
        240,
        27,
        131,
        82,
        96,
        2,
        131,
        1,
        82,
        96,
        34,
        130,
        1,
        82,
        1,
        144,
        86,
        91,
        3,
        144,
        129,
        1,
        131,
        82,
        130,
        97,
        14,
        236,
        86,
        91,
        81,
        144,
        32,
        96,
        64,
        128,
        81,
        145,
        130,
        82,
        96,
        255,
        144,
        151,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        164,
        53,
        150,
        129,
        1,
        150,
        144,
        150,
        82,
        96,
        196,
        53,
        96,
        96,
        135,
        1,
        82,
        96,
        128,
        134,
        1,
        144,
        86,
        91,
        133,
        96,
        0,
        150,
        135,
        146,
        131,
        128,
        82,
        3,
        144,
        96,
        1,
        90,
        250,
        21,
        97,
        13,
        23,
        87,
        131,
        81,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        177,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        132,
        144,
        97,
        12,
        248,
        144,
        131,
        144,
        97,
        5,
        169,
        144,
        97,
        12,
        243,
        135,
        130,
        22,
        128,
        21,
        21,
        144,
        129,
        97,
        13,
        11,
        87,
        91,
        80,
        97,
        19,
        170,
        86,
        91,
        97,
        2,
        165,
        86,
        91,
        85,
        96,
        64,
        81,
        147,
        132,
        82,
        129,
        22,
        147,
        22,
        145,
        96,
        32,
        144,
        163,
        128,
        243,
        91,
        144,
        80,
        136,
        140,
        22,
        20,
        56,
        97,
        12,
        237,
        86,
        91,
        97,
        16,
        22,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        13,
        102,
        96,
        4,
        53,
        97,
        13,
        62,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        13,
        75,
        130,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        132,
        82,
        96,
        64,
        144,
        32,
        97,
        2,
        243,
        86,
        91,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        13,
        140,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        13,
        152,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        13,
        160,
        97,
        5,
        204,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        128,
        131,
        22,
        128,
        145,
        133,
        22,
        3,
        97,
        13,
        212,
        87,
        91,
        97,
        10,
        104,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        131,
        22,
        132,
        97,
        20,
        174,
        86,
        91,
        128,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        97,
        13,
        235,
        132,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        84,
        144,
        96,
        1,
        130,
        1,
        97,
        13,
        252,
        87,
        91,
        80,
        97,
        13,
        193,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        131,
        22,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        97,
        10,
        104,
        148,
        97,
        14,
        41,
        145,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        85,
        56,
        128,
        97,
        13,
        246,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        12,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        14,
        119,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        9,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        36,
        53,
        145,
        144,
        130,
        16,
        21,
        97,
        2,
        36,
        87,
        96,
        32,
        145,
        97,
        14,
        168,
        145,
        97,
        3,
        64,
        86,
        91,
        144,
        84,
        96,
        64,
        81,
        145,
        96,
        3,
        27,
        28,
        129,
        82,
        243,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        129,
        1,
        144,
        129,
        16,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        86,
        91,
        97,
        14,
        182,
        86,
        91,
        96,
        31,
        144,
        145,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        144,
        130,
        16,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        28,
        130,
        97,
        14,
        204,
        86,
        91,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        43,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        11,
        130,
        82,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        62,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        3,
        130,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        14,
        231,
        87,
        96,
        5,
        27,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        144,
        129,
        81,
        145,
        97,
        15,
        106,
        131,
        97,
        14,
        204,
        86,
        91,
        96,
        12,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        22,
        132,
        82,
        96,
        13,
        84,
        132,
        144,
        97,
        15,
        136,
        129,
        97,
        15,
        68,
        86,
        91,
        147,
        97,
        15,
        149,
        129,
        81,
        149,
        134,
        97,
        14,
        236,
        86,
        91,
        129,
        133,
        82,
        96,
        13,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        148,
        144,
        145,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        113,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        134,
        128,
        137,
        1,
        91,
        134,
        134,
        16,
        97,
        15,
        203,
        87,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        1,
        82,
        86,
        91,
        96,
        1,
        145,
        130,
        145,
        133,
        81,
        97,
        15,
        219,
        129,
        97,
        14,
        204,
        86,
        91,
        133,
        136,
        84,
        129,
        129,
        22,
        131,
        82,
        136,
        28,
        22,
        131,
        130,
        1,
        82,
        129,
        82,
        1,
        148,
        1,
        148,
        1,
        147,
        146,
        135,
        144,
        97,
        15,
        185,
        86,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        36,
        87,
        81,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        3,
        97,
        2,
        36,
        87,
        144,
        86,
        91,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        61,
        144,
        253,
        91,
        97,
        16,
        43,
        129,
        97,
        2,
        191,
        86,
        91,
        84,
        144,
        129,
        21,
        97,
        17,
        182,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        129,
        84,
        144,
        129,
        21,
        97,
        17,
        176,
        87,
        97,
        16,
        94,
        144,
        97,
        2,
        217,
        86,
        91,
        145,
        97,
        16,
        103,
        97,
        15,
        91,
        86,
        91,
        96,
        64,
        81,
        99,
        89,
        117,
        127,
        125,
        96,
        225,
        27,
        129,
        82,
        96,
        32,
        129,
        96,
        4,
        129,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        90,
        250,
        144,
        129,
        21,
        97,
        13,
        23,
        87,
        96,
        0,
        145,
        97,
        17,
        130,
        87,
        91,
        80,
        96,
        0,
        146,
        145,
        146,
        144,
        91,
        132,
        130,
        16,
        97,
        17,
        11,
        87,
        80,
        80,
        80,
        80,
        128,
        21,
        96,
        0,
        20,
        97,
        16,
        238,
        87,
        80,
        97,
        16,
        232,
        97,
        6,
        140,
        96,
        0,
        146,
        91,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        97,
        3,
        64,
        86,
        91,
        3,
        144,
        3,
        144,
        86,
        91,
        97,
        6,
        140,
        97,
        17,
        5,
        97,
        6,
        140,
        97,
        16,
        232,
        147,
        96,
        0,
        25,
        1,
        133,
        97,
        3,
        64,
        86,
        91,
        146,
        97,
        16,
        220,
        86,
        91,
        144,
        145,
        146,
        147,
        96,
        1,
        144,
        128,
        132,
        1,
        130,
        28,
        145,
        97,
        17,
        86,
        97,
        17,
        48,
        97,
        17,
        40,
        133,
        137,
        97,
        3,
        64,
        86,
        91,
        80,
        84,
        96,
        216,
        28,
        144,
        86,
        91,
        136,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        96,
        0,
        129,
        21,
        97,
        17,
        122,
        87,
        80,
        66,
        3,
        144,
        91,
        100,
        255,
        255,
        255,
        255,
        255,
        66,
        145,
        22,
        97,
        18,
        110,
        86,
        91,
        99,
        255,
        255,
        255,
        255,
        133,
        22,
        17,
        21,
        97,
        17,
        111,
        87,
        80,
        80,
        147,
        91,
        146,
        145,
        144,
        97,
        16,
        189,
        86,
        91,
        144,
        149,
        145,
        1,
        146,
        80,
        97,
        17,
        103,
        86,
        91,
        144,
        80,
        144,
        97,
        17,
        72,
        86,
        91,
        97,
        17,
        163,
        145,
        80,
        96,
        32,
        61,
        129,
        17,
        97,
        17,
        169,
        87,
        91,
        97,
        17,
        155,
        129,
        131,
        97,
        14,
        236,
        86,
        91,
        129,
        1,
        144,
        97,
        15,
        250,
        86,
        91,
        56,
        97,
        16,
        181,
        86,
        91,
        80,
        61,
        97,
        17,
        145,
        86,
        91,
        80,
        80,
        80,
        144,
        86,
        91,
        80,
        80,
        96,
        0,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        25,
        129,
        1,
        145,
        144,
        130,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        145,
        144,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        96,
        13,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        96,
        1,
        129,
        1,
        128,
        96,
        13,
        85,
        129,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        13,
        96,
        0,
        82,
        129,
        81,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        113,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        144,
        145,
        1,
        128,
        84,
        96,
        32,
        144,
        147,
        1,
        81,
        96,
        1,
        96,
        64,
        27,
        96,
        1,
        96,
        128,
        27,
        3,
        96,
        64,
        145,
        144,
        145,
        27,
        22,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        146,
        22,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        144,
        147,
        22,
        146,
        144,
        146,
        23,
        23,
        144,
        85,
        86,
        91,
        145,
        144,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        145,
        144,
        145,
        129,
        96,
        13,
        84,
        128,
        97,
        18,
        146,
        87,
        91,
        80,
        80,
        97,
        18,
        138,
        144,
        97,
        18,
        143,
        147,
        97,
        17,
        226,
        86,
        91,
        97,
        17,
        226,
        86,
        91,
        144,
        86,
        91,
        145,
        146,
        80,
        144,
        96,
        0,
        25,
        128,
        130,
        1,
        130,
        129,
        17,
        97,
        4,
        137,
        87,
        97,
        18,
        172,
        144,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        22,
        146,
        144,
        145,
        144,
        96,
        0,
        91,
        129,
        129,
        16,
        97,
        19,
        39,
        87,
        80,
        97,
        18,
        143,
        150,
        149,
        147,
        97,
        18,
        249,
        147,
        97,
        18,
        138,
        150,
        147,
        97,
        18,
        243,
        147,
        128,
        21,
        96,
        0,
        20,
        97,
        19,
        3,
        87,
        80,
        80,
        96,
        0,
        91,
        22,
        144,
        97,
        17,
        226,
        86,
        91,
        144,
        97,
        18,
        97,
        86,
        91,
        146,
        147,
        129,
        146,
        80,
        97,
        18,
        123,
        86,
        91,
        97,
        19,
        34,
        145,
        97,
        19,
        17,
        145,
        1,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        144,
        86,
        91,
        97,
        18,
        236,
        86,
        91,
        144,
        96,
        1,
        144,
        128,
        131,
        1,
        130,
        28,
        145,
        136,
        134,
        97,
        19,
        77,
        97,
        19,
        63,
        134,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        144,
        86,
        91,
        22,
        16,
        97,
        19,
        91,
        87,
        80,
        80,
        144,
        97,
        18,
        195,
        86,
        91,
        144,
        146,
        80,
        1,
        97,
        18,
        195,
        86,
        91,
        21,
        97,
        19,
        107,
        87,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        23,
        96,
        36,
        130,
        1,
        82,
        118,
        20,
        17,
        84,
        147,
        82,
        85,
        23,
        209,
        17,
        80,
        81,
        19,
        18,
        83,
        145,
        87,
        209,
        86,
        20,
        18,
        84,
        145,
        81,
        96,
        74,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        91,
        21,
        97,
        19,
        177,
        87,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        14,
        96,
        36,
        130,
        1,
        82,
        109,
        36,
        167,
        43,
        32,
        166,
        36,
        162,
        47,
        169,
        164,
        163,
        167,
        34,
        169,
        96,
        145,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        91,
        70,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        3,
        97,
        20,
        20,
        87,
        96,
        6,
        84,
        144,
        86,
        91,
        97,
        18,
        143,
        91,
        97,
        20,
        35,
        96,
        0,
        84,
        97,
        22,
        44,
        86,
        91,
        96,
        32,
        129,
        81,
        145,
        1,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        145,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        131,
        82,
        96,
        64,
        130,
        1,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        130,
        1,
        82,
        70,
        96,
        128,
        130,
        1,
        82,
        48,
        96,
        160,
        130,
        1,
        82,
        96,
        160,
        129,
        82,
        96,
        192,
        129,
        1,
        129,
        129,
        16,
        96,
        1,
        128,
        96,
        64,
        27,
        3,
        130,
        17,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        81,
        144,
        32,
        144,
        86,
        91,
        97,
        20,
        184,
        130,
        130,
        97,
        21,
        226,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        131,
        129,
        3,
        145,
        144,
        130,
        17,
        97,
        4,
        137,
        87,
        96,
        0,
        147,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        146,
        96,
        32,
        146,
        85,
        128,
        96,
        3,
        84,
        3,
        96,
        3,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        163,
        86,
        91,
        128,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        97,
        21,
        33,
        145,
        96,
        1,
        130,
        1,
        129,
        85,
        97,
        3,
        64,
        86,
        91,
        145,
        144,
        145,
        97,
        21,
        78,
        87,
        128,
        81,
        96,
        32,
        144,
        145,
        1,
        81,
        96,
        216,
        27,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        145,
        144,
        145,
        22,
        23,
        144,
        85,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        0,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        97,
        21,
        129,
        145,
        96,
        1,
        130,
        1,
        129,
        85,
        97,
        3,
        64,
        86,
        91,
        129,
        146,
        145,
        84,
        144,
        96,
        3,
        27,
        145,
        130,
        27,
        145,
        96,
        0,
        25,
        144,
        27,
        25,
        22,
        23,
        144,
        85,
        86,
        91,
        96,
        3,
        84,
        144,
        130,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        96,
        32,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        96,
        0,
        147,
        96,
        3,
        85,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        147,
        132,
        132,
        82,
        96,
        4,
        130,
        82,
        96,
        64,
        132,
        32,
        129,
        129,
        84,
        1,
        144,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        163,
        86,
        91,
        97,
        21,
        235,
        144,
        97,
        16,
        34,
        86,
        91,
        16,
        97,
        21,
        242,
        87,
        86,
        91,
        96,
        64,
        81,
        99,
        30,
        154,
        207,
        23,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        128,
        81,
        96,
        31,
        129,
        17,
        97,
        22,
        26,
        87,
        96,
        31,
        144,
        21,
        21,
        145,
        1,
        81,
        2,
        144,
        86,
        91,
        96,
        64,
        81,
        99,
        64,
        164,
        46,
        241,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        144,
        96,
        64,
        81,
        145,
        96,
        0,
        131,
        82,
        96,
        0,
        96,
        32,
        132,
        1,
        82,
        96,
        64,
        131,
        1,
        96,
        64,
        82,
        96,
        31,
        131,
        1,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        129,
        17,
        97,
        22,
        94,
        87,
        22,
        144,
        86,
        91,
        96,
        64,
        81,
        99,
        69,
        238,
        241,
        39,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        254,
        215,
        182,
        153,
        1,
        5,
        113,
        145,
        1,
        218,
        190,
        183,
        113,
        68,
        242,
        163,
        56,
        92,
        128,
        51,
        172,
        211,
        175,
        151,
        233,
        66,
        58,
        105,
        94,
        129,
        173,
        30,
        181,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        10,
    ];
    ///The bytecode of the contract.
    pub static PTOKEN_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        21,
        97,
        0,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        1,
        167,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        1,
        162,
        87,
        128,
        99,
        11,
        237,
        211,
        167,
        20,
        97,
        1,
        157,
        87,
        128,
        99,
        13,
        132,
        201,
        122,
        20,
        97,
        1,
        152,
        87,
        128,
        99,
        24,
        22,
        13,
        221,
        20,
        97,
        1,
        147,
        87,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        1,
        142,
        87,
        128,
        99,
        42,
        217,
        132,
        225,
        20,
        97,
        1,
        137,
        87,
        128,
        99,
        49,
        60,
        229,
        103,
        20,
        97,
        1,
        132,
        87,
        128,
        99,
        52,
        137,
        183,
        164,
        20,
        97,
        1,
        127,
        87,
        128,
        99,
        54,
        68,
        229,
        21,
        20,
        97,
        1,
        122,
        87,
        128,
        99,
        67,
        99,
        176,
        111,
        20,
        97,
        1,
        117,
        87,
        128,
        99,
        72,
        28,
        106,
        117,
        20,
        97,
        1,
        112,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        1,
        107,
        87,
        128,
        99,
        116,
        206,
        86,
        113,
        20,
        97,
        1,
        102,
        87,
        128,
        99,
        126,
        206,
        190,
        0,
        20,
        97,
        1,
        97,
        87,
        128,
        99,
        127,
        236,
        141,
        56,
        20,
        97,
        1,
        92,
        87,
        128,
        99,
        137,
        35,
        42,
        0,
        20,
        97,
        1,
        87,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        1,
        82,
        87,
        128,
        99,
        169,
        5,
        156,
        187,
        20,
        97,
        1,
        77,
        87,
        128,
        99,
        184,
        224,
        16,
        222,
        20,
        97,
        1,
        72,
        87,
        128,
        99,
        213,
        5,
        172,
        207,
        20,
        97,
        1,
        67,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        20,
        97,
        1,
        62,
        87,
        128,
        99,
        235,
        66,
        92,
        185,
        20,
        97,
        1,
        57,
        87,
        128,
        99,
        243,
        86,
        164,
        183,
        20,
        97,
        1,
        52,
        87,
        99,
        246,
        234,
        179,
        39,
        20,
        97,
        1,
        47,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        14,
        90,
        86,
        91,
        97,
        14,
        49,
        86,
        91,
        97,
        13,
        111,
        86,
        91,
        97,
        13,
        28,
        86,
        91,
        97,
        11,
        75,
        86,
        91,
        97,
        11,
        34,
        86,
        91,
        97,
        10,
        155,
        86,
        91,
        97,
        10,
        124,
        86,
        91,
        97,
        9,
        123,
        86,
        91,
        97,
        9,
        50,
        86,
        91,
        97,
        8,
        245,
        86,
        91,
        97,
        8,
        84,
        86,
        91,
        97,
        7,
        189,
        86,
        91,
        97,
        7,
        120,
        86,
        91,
        97,
        7,
        42,
        86,
        91,
        97,
        7,
        15,
        86,
        91,
        97,
        6,
        224,
        86,
        91,
        97,
        6,
        191,
        86,
        91,
        97,
        5,
        226,
        86,
        91,
        97,
        4,
        200,
        86,
        91,
        97,
        4,
        170,
        86,
        91,
        97,
        3,
        195,
        86,
        91,
        97,
        3,
        88,
        86,
        91,
        97,
        2,
        58,
        86,
        91,
        97,
        1,
        245,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        129,
        131,
        1,
        129,
        144,
        82,
        144,
        147,
        146,
        96,
        0,
        91,
        130,
        129,
        16,
        97,
        1,
        225,
        87,
        80,
        80,
        96,
        64,
        146,
        147,
        80,
        96,
        0,
        131,
        130,
        132,
        1,
        1,
        82,
        96,
        31,
        128,
        25,
        145,
        1,
        22,
        1,
        1,
        144,
        86,
        91,
        129,
        129,
        1,
        134,
        1,
        81,
        132,
        130,
        1,
        96,
        64,
        1,
        82,
        133,
        1,
        97,
        1,
        191,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        97,
        2,
        32,
        97,
        2,
        20,
        96,
        0,
        84,
        97,
        22,
        44,
        86,
        91,
        96,
        64,
        81,
        145,
        130,
        145,
        130,
        97,
        1,
        172,
        86,
        91,
        3,
        144,
        243,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        2,
        87,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        51,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        129,
        97,
        2,
        115,
        130,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        85,
        96,
        64,
        81,
        145,
        130,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        177,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        32,
        144,
        163,
        96,
        32,
        96,
        64,
        81,
        96,
        1,
        129,
        82,
        243,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        9,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        86,
        91,
        144,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        13,
        84,
        129,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        13,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        144,
        96,
        0,
        144,
        86,
        91,
        97,
        3,
        10,
        86,
        91,
        128,
        84,
        130,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        144,
        96,
        0,
        144,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        3,
        117,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        36,
        53,
        145,
        144,
        130,
        16,
        21,
        97,
        2,
        36,
        87,
        96,
        64,
        145,
        97,
        3,
        166,
        145,
        97,
        3,
        64,
        86,
        91,
        80,
        84,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        129,
        82,
        96,
        216,
        145,
        144,
        145,
        28,
        96,
        32,
        130,
        1,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        4,
        167,
        87,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        96,
        12,
        84,
        96,
        13,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        145,
        130,
        22,
        144,
        128,
        21,
        97,
        4,
        142,
        87,
        96,
        0,
        25,
        129,
        1,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        130,
        97,
        4,
        22,
        129,
        146,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        22,
        91,
        22,
        145,
        129,
        129,
        66,
        22,
        3,
        129,
        129,
        17,
        97,
        4,
        137,
        87,
        22,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        97,
        4,
        110,
        97,
        4,
        68,
        97,
        4,
        115,
        147,
        97,
        22,
        74,
        86,
        91,
        97,
        4,
        94,
        97,
        4,
        79,
        97,
        15,
        15,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        148,
        22,
        132,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        96,
        32,
        131,
        1,
        82,
        86,
        91,
        97,
        17,
        239,
        86,
        91,
        96,
        12,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        25,
        22,
        144,
        85,
        128,
        243,
        91,
        128,
        243,
        91,
        97,
        17,
        189,
        86,
        91,
        80,
        129,
        131,
        97,
        4,
        29,
        86,
        91,
        96,
        64,
        81,
        98,
        130,
        180,
        41,
        96,
        232,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        128,
        253,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        96,
        3,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        4,
        229,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        4,
        241,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        68,
        53,
        145,
        97,
        4,
        255,
        131,
        130,
        97,
        21,
        226,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        146,
        131,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        97,
        5,
        34,
        96,
        64,
        96,
        0,
        32,
        51,
        144,
        97,
        2,
        243,
        86,
        91,
        84,
        96,
        1,
        129,
        1,
        97,
        5,
        126,
        87,
        91,
        80,
        97,
        5,
        69,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        147,
        97,
        2,
        191,
        86,
        91,
        97,
        5,
        80,
        134,
        130,
        84,
        97,
        17,
        226,
        86,
        91,
        144,
        85,
        97,
        5,
        91,
        129,
        97,
        2,
        191,
        86,
        91,
        128,
        84,
        134,
        1,
        144,
        85,
        96,
        64,
        81,
        148,
        133,
        82,
        22,
        146,
        128,
        96,
        32,
        129,
        1,
        91,
        3,
        144,
        163,
        96,
        64,
        81,
        96,
        1,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        133,
        129,
        3,
        144,
        129,
        17,
        97,
        4,
        137,
        87,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        147,
        97,
        5,
        69,
        145,
        97,
        5,
        174,
        51,
        97,
        5,
        169,
        132,
        97,
        2,
        165,
        86,
        91,
        97,
        2,
        243,
        86,
        91,
        85,
        147,
        80,
        97,
        5,
        44,
        86,
        91,
        96,
        36,
        53,
        144,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        96,
        68,
        53,
        144,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        5,
        255,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        6,
        7,
        97,
        5,
        182,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        145,
        144,
        131,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        97,
        4,
        134,
        145,
        96,
        0,
        147,
        129,
        22,
        132,
        82,
        96,
        8,
        96,
        32,
        82,
        97,
        6,
        97,
        96,
        64,
        133,
        32,
        146,
        96,
        64,
        81,
        144,
        97,
        6,
        66,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        22,
        128,
        130,
        82,
        66,
        100,
        255,
        255,
        255,
        255,
        255,
        22,
        96,
        32,
        131,
        1,
        82,
        147,
        97,
        21,
        4,
        86,
        91,
        97,
        6,
        106,
        129,
        97,
        2,
        217,
        86,
        91,
        128,
        84,
        144,
        129,
        21,
        97,
        6,
        180,
        87,
        97,
        6,
        140,
        97,
        6,
        150,
        145,
        97,
        6,
        134,
        97,
        6,
        175,
        148,
        97,
        17,
        211,
        86,
        91,
        144,
        97,
        3,
        64,
        86,
        91,
        144,
        84,
        144,
        96,
        3,
        27,
        28,
        144,
        86,
        91,
        97,
        6,
        169,
        132,
        97,
        6,
        163,
        133,
        97,
        2,
        217,
        86,
        91,
        146,
        97,
        18,
        97,
        86,
        91,
        144,
        97,
        21,
        100,
        86,
        91,
        97,
        21,
        153,
        86,
        91,
        80,
        80,
        97,
        6,
        175,
        132,
        97,
        6,
        150,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        96,
        255,
        96,
        2,
        84,
        22,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        7,
        7,
        96,
        4,
        53,
        97,
        7,
        2,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        16,
        34,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        7,
        7,
        97,
        19,
        231,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        22,
        144,
        129,
        144,
        3,
        97,
        2,
        36,
        87,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        96,
        12,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        25,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        0,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        64,
        81,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        7,
        218,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        32,
        96,
        64,
        96,
        0,
        32,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        96,
        32,
        128,
        130,
        1,
        144,
        128,
        131,
        82,
        131,
        81,
        128,
        146,
        82,
        128,
        96,
        64,
        128,
        148,
        1,
        148,
        1,
        146,
        96,
        0,
        144,
        91,
        131,
        130,
        16,
        97,
        8,
        36,
        87,
        80,
        80,
        80,
        80,
        80,
        144,
        86,
        91,
        132,
        81,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        22,
        135,
        82,
        131,
        1,
        81,
        100,
        255,
        255,
        255,
        255,
        255,
        22,
        134,
        132,
        1,
        82,
        148,
        133,
        1,
        148,
        147,
        130,
        1,
        147,
        96,
        1,
        144,
        145,
        1,
        144,
        97,
        8,
        21,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        128,
        96,
        3,
        25,
        54,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        8,
        114,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        8,
        129,
        82,
        96,
        64,
        144,
        129,
        96,
        0,
        32,
        128,
        84,
        144,
        97,
        8,
        148,
        130,
        97,
        15,
        68,
        86,
        91,
        146,
        97,
        8,
        161,
        133,
        81,
        148,
        133,
        97,
        14,
        236,
        86,
        91,
        130,
        132,
        82,
        96,
        0,
        145,
        130,
        82,
        128,
        130,
        32,
        129,
        133,
        1,
        91,
        132,
        132,
        16,
        97,
        8,
        196,
        87,
        134,
        81,
        128,
        97,
        2,
        32,
        136,
        130,
        97,
        7,
        250,
        86,
        91,
        96,
        1,
        131,
        129,
        146,
        137,
        81,
        97,
        8,
        212,
        129,
        97,
        14,
        204,
        86,
        91,
        133,
        84,
        132,
        128,
        96,
        216,
        27,
        3,
        129,
        22,
        130,
        82,
        96,
        216,
        28,
        131,
        130,
        1,
        82,
        129,
        82,
        1,
        146,
        1,
        147,
        1,
        146,
        144,
        97,
        8,
        176,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        32,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        9,
        18,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        7,
        96,
        32,
        82,
        96,
        32,
        96,
        64,
        96,
        0,
        32,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        11,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        96,
        68,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        96,
        132,
        53,
        144,
        96,
        255,
        130,
        22,
        130,
        3,
        97,
        2,
        36,
        87,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        9,
        152,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        9,
        164,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        9,
        172,
        97,
        9,
        91,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        10,
        106,
        87,
        97,
        10,
        104,
        146,
        96,
        255,
        97,
        10,
        70,
        146,
        97,
        10,
        10,
        97,
        9,
        209,
        97,
        15,
        30,
        86,
        91,
        106,
        33,
        183,
        189,
        60,
        144,
        40,
        42,
        55,
        181,
        178,
        183,
        96,
        169,
        27,
        96,
        32,
        130,
        1,
        82,
        97,
        10,
        2,
        97,
        9,
        240,
        97,
        15,
        49,
        86,
        91,
        145,
        98,
        16,
        212,
        21,
        96,
        234,
        27,
        96,
        32,
        132,
        1,
        82,
        97,
        22,
        4,
        86,
        91,
        96,
        0,
        85,
        97,
        22,
        4,
        86,
        91,
        96,
        1,
        85,
        22,
        96,
        255,
        25,
        96,
        2,
        84,
        22,
        23,
        96,
        2,
        85,
        97,
        10,
        33,
        97,
        20,
        24,
        86,
        91,
        96,
        6,
        85,
        96,
        10,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        96,
        11,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        0,
        91,
        96,
        64,
        81,
        99,
        2,
        237,
        84,
        61,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        97,
        2,
        32,
        97,
        2,
        20,
        96,
        1,
        84,
        97,
        22,
        44,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        10,
        184,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        10,
        198,
        130,
        51,
        97,
        21,
        226,
        86,
        91,
        51,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        128,
        84,
        144,
        131,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        85,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        144,
        129,
        96,
        0,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        129,
        129,
        84,
        1,
        144,
        85,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        128,
        97,
        5,
        111,
        51,
        148,
        130,
        145,
        144,
        96,
        32,
        131,
        1,
        146,
        82,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        10,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        224,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        11,
        104,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        11,
        117,
        130,
        97,
        2,
        41,
        86,
        91,
        96,
        68,
        53,
        96,
        100,
        53,
        146,
        96,
        32,
        97,
        12,
        162,
        97,
        11,
        137,
        97,
        9,
        107,
        86,
        91,
        149,
        97,
        11,
        150,
        66,
        130,
        16,
        21,
        97,
        19,
        100,
        86,
        91,
        97,
        12,
        105,
        97,
        12,
        117,
        97,
        11,
        164,
        97,
        19,
        231,
        86,
        91,
        146,
        136,
        97,
        11,
        194,
        129,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        82,
        96,
        7,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        144,
        86,
        91,
        128,
        84,
        96,
        1,
        129,
        1,
        144,
        145,
        85,
        96,
        64,
        128,
        81,
        127,
        110,
        113,
        237,
        174,
        18,
        177,
        185,
        127,
        77,
        31,
        96,
        55,
        15,
        239,
        16,
        16,
        95,
        162,
        250,
        174,
        1,
        38,
        17,
        74,
        22,
        156,
        100,
        132,
        93,
        97,
        38,
        201,
        138,
        130,
        1,
        144,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        148,
        133,
        22,
        96,
        32,
        130,
        1,
        82,
        147,
        139,
        22,
        145,
        132,
        1,
        145,
        144,
        145,
        82,
        96,
        96,
        131,
        1,
        139,
        144,
        82,
        96,
        128,
        131,
        1,
        145,
        144,
        145,
        82,
        96,
        160,
        130,
        1,
        146,
        144,
        146,
        82,
        129,
        96,
        192,
        130,
        1,
        3,
        145,
        97,
        12,
        64,
        96,
        31,
        25,
        147,
        132,
        129,
        1,
        131,
        82,
        130,
        97,
        14,
        236,
        86,
        91,
        81,
        144,
        32,
        96,
        64,
        81,
        147,
        132,
        145,
        136,
        131,
        1,
        150,
        135,
        144,
        145,
        96,
        66,
        146,
        97,
        25,
        1,
        96,
        240,
        27,
        131,
        82,
        96,
        2,
        131,
        1,
        82,
        96,
        34,
        130,
        1,
        82,
        1,
        144,
        86,
        91,
        3,
        144,
        129,
        1,
        131,
        82,
        130,
        97,
        14,
        236,
        86,
        91,
        81,
        144,
        32,
        96,
        64,
        128,
        81,
        145,
        130,
        82,
        96,
        255,
        144,
        151,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        164,
        53,
        150,
        129,
        1,
        150,
        144,
        150,
        82,
        96,
        196,
        53,
        96,
        96,
        135,
        1,
        82,
        96,
        128,
        134,
        1,
        144,
        86,
        91,
        133,
        96,
        0,
        150,
        135,
        146,
        131,
        128,
        82,
        3,
        144,
        96,
        1,
        90,
        250,
        21,
        97,
        13,
        23,
        87,
        131,
        81,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        177,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        132,
        144,
        97,
        12,
        248,
        144,
        131,
        144,
        97,
        5,
        169,
        144,
        97,
        12,
        243,
        135,
        130,
        22,
        128,
        21,
        21,
        144,
        129,
        97,
        13,
        11,
        87,
        91,
        80,
        97,
        19,
        170,
        86,
        91,
        97,
        2,
        165,
        86,
        91,
        85,
        96,
        64,
        81,
        147,
        132,
        82,
        129,
        22,
        147,
        22,
        145,
        96,
        32,
        144,
        163,
        128,
        243,
        91,
        144,
        80,
        136,
        140,
        22,
        20,
        56,
        97,
        12,
        237,
        86,
        91,
        97,
        16,
        22,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        32,
        97,
        13,
        102,
        96,
        4,
        53,
        97,
        13,
        62,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        144,
        97,
        13,
        75,
        130,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        132,
        82,
        96,
        64,
        144,
        32,
        97,
        2,
        243,
        86,
        91,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        96,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        13,
        140,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        36,
        53,
        97,
        13,
        152,
        129,
        97,
        2,
        41,
        86,
        91,
        97,
        13,
        160,
        97,
        5,
        204,
        86,
        91,
        96,
        10,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        51,
        3,
        97,
        4,
        150,
        87,
        128,
        131,
        22,
        128,
        145,
        133,
        22,
        3,
        97,
        13,
        212,
        87,
        91,
        97,
        10,
        104,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        131,
        22,
        132,
        97,
        20,
        174,
        86,
        91,
        128,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        97,
        13,
        235,
        132,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        84,
        144,
        96,
        1,
        130,
        1,
        97,
        13,
        252,
        87,
        91,
        80,
        97,
        13,
        193,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        131,
        22,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        97,
        10,
        104,
        148,
        97,
        14,
        41,
        145,
        96,
        0,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        96,
        0,
        32,
        97,
        2,
        243,
        86,
        91,
        85,
        56,
        128,
        97,
        13,
        246,
        86,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        0,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        12,
        84,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        144,
        243,
        91,
        52,
        97,
        2,
        36,
        87,
        96,
        64,
        54,
        96,
        3,
        25,
        1,
        18,
        97,
        2,
        36,
        87,
        96,
        4,
        53,
        97,
        14,
        119,
        129,
        97,
        2,
        41,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        9,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        36,
        53,
        145,
        144,
        130,
        16,
        21,
        97,
        2,
        36,
        87,
        96,
        32,
        145,
        97,
        14,
        168,
        145,
        97,
        3,
        64,
        86,
        91,
        144,
        84,
        96,
        64,
        81,
        145,
        96,
        3,
        27,
        28,
        129,
        82,
        243,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        129,
        1,
        144,
        129,
        16,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        86,
        91,
        97,
        14,
        182,
        86,
        91,
        96,
        31,
        144,
        145,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        130,
        17,
        144,
        130,
        16,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        28,
        130,
        97,
        14,
        204,
        86,
        91,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        43,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        11,
        130,
        82,
        86,
        91,
        96,
        64,
        81,
        144,
        97,
        15,
        62,
        130,
        97,
        14,
        204,
        86,
        91,
        96,
        3,
        130,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        97,
        14,
        231,
        87,
        96,
        5,
        27,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        144,
        129,
        81,
        145,
        97,
        15,
        106,
        131,
        97,
        14,
        204,
        86,
        91,
        96,
        12,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        22,
        132,
        82,
        96,
        13,
        84,
        132,
        144,
        97,
        15,
        136,
        129,
        97,
        15,
        68,
        86,
        91,
        147,
        97,
        15,
        149,
        129,
        81,
        149,
        134,
        97,
        14,
        236,
        86,
        91,
        129,
        133,
        82,
        96,
        13,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        148,
        144,
        145,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        113,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        134,
        128,
        137,
        1,
        91,
        134,
        134,
        16,
        97,
        15,
        203,
        87,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        1,
        82,
        86,
        91,
        96,
        1,
        145,
        130,
        145,
        133,
        81,
        97,
        15,
        219,
        129,
        97,
        14,
        204,
        86,
        91,
        133,
        136,
        84,
        129,
        129,
        22,
        131,
        82,
        136,
        28,
        22,
        131,
        130,
        1,
        82,
        129,
        82,
        1,
        148,
        1,
        148,
        1,
        147,
        146,
        135,
        144,
        97,
        15,
        185,
        86,
        91,
        144,
        129,
        96,
        32,
        145,
        3,
        18,
        97,
        2,
        36,
        87,
        81,
        99,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        3,
        97,
        2,
        36,
        87,
        144,
        86,
        91,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        61,
        144,
        253,
        91,
        97,
        16,
        43,
        129,
        97,
        2,
        191,
        86,
        91,
        84,
        144,
        129,
        21,
        97,
        17,
        182,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        8,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        144,
        129,
        84,
        144,
        129,
        21,
        97,
        17,
        176,
        87,
        97,
        16,
        94,
        144,
        97,
        2,
        217,
        86,
        91,
        145,
        97,
        16,
        103,
        97,
        15,
        91,
        86,
        91,
        96,
        64,
        81,
        99,
        89,
        117,
        127,
        125,
        96,
        225,
        27,
        129,
        82,
        96,
        32,
        129,
        96,
        4,
        129,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        90,
        250,
        144,
        129,
        21,
        97,
        13,
        23,
        87,
        96,
        0,
        145,
        97,
        17,
        130,
        87,
        91,
        80,
        96,
        0,
        146,
        145,
        146,
        144,
        91,
        132,
        130,
        16,
        97,
        17,
        11,
        87,
        80,
        80,
        80,
        80,
        128,
        21,
        96,
        0,
        20,
        97,
        16,
        238,
        87,
        80,
        97,
        16,
        232,
        97,
        6,
        140,
        96,
        0,
        146,
        91,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        97,
        3,
        64,
        86,
        91,
        3,
        144,
        3,
        144,
        86,
        91,
        97,
        6,
        140,
        97,
        17,
        5,
        97,
        6,
        140,
        97,
        16,
        232,
        147,
        96,
        0,
        25,
        1,
        133,
        97,
        3,
        64,
        86,
        91,
        146,
        97,
        16,
        220,
        86,
        91,
        144,
        145,
        146,
        147,
        96,
        1,
        144,
        128,
        132,
        1,
        130,
        28,
        145,
        97,
        17,
        86,
        97,
        17,
        48,
        97,
        17,
        40,
        133,
        137,
        97,
        3,
        64,
        86,
        91,
        80,
        84,
        96,
        216,
        28,
        144,
        86,
        91,
        136,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        96,
        0,
        129,
        21,
        97,
        17,
        122,
        87,
        80,
        66,
        3,
        144,
        91,
        100,
        255,
        255,
        255,
        255,
        255,
        66,
        145,
        22,
        97,
        18,
        110,
        86,
        91,
        99,
        255,
        255,
        255,
        255,
        133,
        22,
        17,
        21,
        97,
        17,
        111,
        87,
        80,
        80,
        147,
        91,
        146,
        145,
        144,
        97,
        16,
        189,
        86,
        91,
        144,
        149,
        145,
        1,
        146,
        80,
        97,
        17,
        103,
        86,
        91,
        144,
        80,
        144,
        97,
        17,
        72,
        86,
        91,
        97,
        17,
        163,
        145,
        80,
        96,
        32,
        61,
        129,
        17,
        97,
        17,
        169,
        87,
        91,
        97,
        17,
        155,
        129,
        131,
        97,
        14,
        236,
        86,
        91,
        129,
        1,
        144,
        97,
        15,
        250,
        86,
        91,
        56,
        97,
        16,
        181,
        86,
        91,
        80,
        61,
        97,
        17,
        145,
        86,
        91,
        80,
        80,
        80,
        144,
        86,
        91,
        80,
        80,
        96,
        0,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        25,
        129,
        1,
        145,
        144,
        130,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        145,
        144,
        130,
        3,
        145,
        130,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        96,
        13,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        96,
        1,
        129,
        1,
        128,
        96,
        13,
        85,
        129,
        16,
        21,
        97,
        3,
        59,
        87,
        96,
        13,
        96,
        0,
        82,
        129,
        81,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        113,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        144,
        145,
        1,
        128,
        84,
        96,
        32,
        144,
        147,
        1,
        81,
        96,
        1,
        96,
        64,
        27,
        96,
        1,
        96,
        128,
        27,
        3,
        96,
        64,
        145,
        144,
        145,
        27,
        22,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        146,
        22,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        144,
        147,
        22,
        146,
        144,
        146,
        23,
        23,
        144,
        85,
        86,
        91,
        145,
        144,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        86,
        91,
        145,
        144,
        145,
        129,
        96,
        13,
        84,
        128,
        97,
        18,
        146,
        87,
        91,
        80,
        80,
        97,
        18,
        138,
        144,
        97,
        18,
        143,
        147,
        97,
        17,
        226,
        86,
        91,
        97,
        17,
        226,
        86,
        91,
        144,
        86,
        91,
        145,
        146,
        80,
        144,
        96,
        0,
        25,
        128,
        130,
        1,
        130,
        129,
        17,
        97,
        4,
        137,
        87,
        97,
        18,
        172,
        144,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        22,
        146,
        144,
        145,
        144,
        96,
        0,
        91,
        129,
        129,
        16,
        97,
        19,
        39,
        87,
        80,
        97,
        18,
        143,
        150,
        149,
        147,
        97,
        18,
        249,
        147,
        97,
        18,
        138,
        150,
        147,
        97,
        18,
        243,
        147,
        128,
        21,
        96,
        0,
        20,
        97,
        19,
        3,
        87,
        80,
        80,
        96,
        0,
        91,
        22,
        144,
        97,
        17,
        226,
        86,
        91,
        144,
        97,
        18,
        97,
        86,
        91,
        146,
        147,
        129,
        146,
        80,
        97,
        18,
        123,
        86,
        91,
        97,
        19,
        34,
        145,
        97,
        19,
        17,
        145,
        1,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        64,
        28,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        144,
        86,
        91,
        97,
        18,
        236,
        86,
        91,
        144,
        96,
        1,
        144,
        128,
        131,
        1,
        130,
        28,
        145,
        136,
        134,
        97,
        19,
        77,
        97,
        19,
        63,
        134,
        97,
        3,
        32,
        86,
        91,
        80,
        84,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        144,
        86,
        91,
        22,
        16,
        97,
        19,
        91,
        87,
        80,
        80,
        144,
        97,
        18,
        195,
        86,
        91,
        144,
        146,
        80,
        1,
        97,
        18,
        195,
        86,
        91,
        21,
        97,
        19,
        107,
        87,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        23,
        96,
        36,
        130,
        1,
        82,
        118,
        20,
        17,
        84,
        147,
        82,
        85,
        23,
        209,
        17,
        80,
        81,
        19,
        18,
        83,
        145,
        87,
        209,
        86,
        20,
        18,
        84,
        145,
        81,
        96,
        74,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        91,
        21,
        97,
        19,
        177,
        87,
        86,
        91,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        14,
        96,
        36,
        130,
        1,
        82,
        109,
        36,
        167,
        43,
        32,
        166,
        36,
        162,
        47,
        169,
        164,
        163,
        167,
        34,
        169,
        96,
        145,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        144,
        253,
        91,
        70,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        3,
        97,
        20,
        20,
        87,
        96,
        6,
        84,
        144,
        86,
        91,
        97,
        18,
        143,
        91,
        97,
        20,
        35,
        96,
        0,
        84,
        97,
        22,
        44,
        86,
        91,
        96,
        32,
        129,
        81,
        145,
        1,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        145,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        131,
        82,
        96,
        64,
        130,
        1,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        130,
        1,
        82,
        70,
        96,
        128,
        130,
        1,
        82,
        48,
        96,
        160,
        130,
        1,
        82,
        96,
        160,
        129,
        82,
        96,
        192,
        129,
        1,
        129,
        129,
        16,
        96,
        1,
        128,
        96,
        64,
        27,
        3,
        130,
        17,
        23,
        97,
        14,
        231,
        87,
        96,
        64,
        82,
        81,
        144,
        32,
        144,
        86,
        91,
        97,
        20,
        184,
        130,
        130,
        97,
        21,
        226,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        131,
        129,
        3,
        145,
        144,
        130,
        17,
        97,
        4,
        137,
        87,
        96,
        0,
        147,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        146,
        96,
        32,
        146,
        85,
        128,
        96,
        3,
        84,
        3,
        96,
        3,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        163,
        86,
        91,
        128,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        97,
        21,
        33,
        145,
        96,
        1,
        130,
        1,
        129,
        85,
        97,
        3,
        64,
        86,
        91,
        145,
        144,
        145,
        97,
        21,
        78,
        87,
        128,
        81,
        96,
        32,
        144,
        145,
        1,
        81,
        96,
        216,
        27,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        216,
        27,
        3,
        145,
        144,
        145,
        22,
        23,
        144,
        85,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        0,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        84,
        96,
        1,
        96,
        64,
        27,
        129,
        16,
        21,
        97,
        14,
        231,
        87,
        97,
        21,
        129,
        145,
        96,
        1,
        130,
        1,
        129,
        85,
        97,
        3,
        64,
        86,
        91,
        129,
        146,
        145,
        84,
        144,
        96,
        3,
        27,
        145,
        130,
        27,
        145,
        96,
        0,
        25,
        144,
        27,
        25,
        22,
        23,
        144,
        85,
        86,
        91,
        96,
        3,
        84,
        144,
        130,
        130,
        1,
        128,
        146,
        17,
        97,
        4,
        137,
        87,
        96,
        32,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        22,
        145,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        96,
        0,
        147,
        96,
        3,
        85,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        22,
        147,
        132,
        132,
        82,
        96,
        4,
        130,
        82,
        96,
        64,
        132,
        32,
        129,
        129,
        84,
        1,
        144,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        163,
        86,
        91,
        97,
        21,
        235,
        144,
        97,
        16,
        34,
        86,
        91,
        16,
        97,
        21,
        242,
        87,
        86,
        91,
        96,
        64,
        81,
        99,
        30,
        154,
        207,
        23,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        128,
        81,
        96,
        31,
        129,
        17,
        97,
        22,
        26,
        87,
        96,
        31,
        144,
        21,
        21,
        145,
        1,
        81,
        2,
        144,
        86,
        91,
        96,
        64,
        81,
        99,
        64,
        164,
        46,
        241,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        91,
        144,
        96,
        64,
        81,
        145,
        96,
        0,
        131,
        82,
        96,
        0,
        96,
        32,
        132,
        1,
        82,
        96,
        64,
        131,
        1,
        96,
        64,
        82,
        96,
        31,
        131,
        1,
        82,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        144,
        129,
        129,
        17,
        97,
        22,
        94,
        87,
        22,
        144,
        86,
        91,
        96,
        64,
        81,
        99,
        69,
        238,
        241,
        39,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        144,
        253,
        254,
        215,
        182,
        153,
        1,
        5,
        113,
        145,
        1,
        218,
        190,
        183,
        113,
        68,
        242,
        163,
        56,
        92,
        128,
        51,
        172,
        211,
        175,
        151,
        233,
        66,
        58,
        105,
        94,
        129,
        173,
        30,
        181,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        161,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        10,
    ];
    ///The deployed bytecode of the contract.
    pub static PTOKEN_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct PToken<M>(::ethers_contract::Contract<M>);
    impl<M> ::core::clone::Clone for PToken<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for PToken<M> {
        type Target = ::ethers_contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for PToken<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for PToken<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(PToken)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> PToken<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers_contract::Contract::new(
                    address.into(),
                    PTOKEN_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers_contract::builders::ContractDeployer<M, Self>,
            ::ethers_contract::ContractError<M>,
        > {
            let factory = ::ethers_contract::ContractFactory::new(
                PTOKEN_ABI.clone(),
                PTOKEN_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers_contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `DOMAIN_SEPARATOR` (0x3644e515) function
        pub fn domain_separator(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([54, 68, 229, 21], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `addInactivePeriod` (0x0d84c97a) function
        pub fn add_inactive_period(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([13, 132, 201, 122], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `allowance` (0xdd62ed3e) function
        pub fn allowance(
            &self,
            p0: ::ethers::core::types::Address,
            p1: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([221, 98, 237, 62], (p0, p1))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `approve` (0x095ea7b3) function
        pub fn approve(
            &self,
            spender: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([9, 94, 167, 179], (spender, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balanceOf` (0x70a08231) function
        pub fn balance_of(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([112, 160, 130, 49], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balanceOfMatured` (0x3489b7a4) function
        pub fn balance_of_matured(
            &self,
            user: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([52, 137, 183, 164], user)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `burn` (0xeb425cb9) function
        pub fn burn(
            &self,
            caller: ::ethers::core::types::Address,
            owner: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([235, 66, 92, 185], (caller, owner, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `cumulativeMinted` (0xf6eab327) function
        pub fn cumulative_minted(
            &self,
            p0: ::ethers::core::types::Address,
            p1: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([246, 234, 179, 39], (p0, p1))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `decimals` (0x313ce567) function
        pub fn decimals(&self) -> ::ethers_contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([49, 60, 229, 103], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getMints` (0x74ce5671) function
        pub fn get_mints(
            &self,
            user: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::vec::Vec<MintData>> {
            self.0
                .method_hash([116, 206, 86, 113], user)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `inactivityData` (0xf356a4b7) function
        pub fn inactivity_data(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, u64> {
            self.0
                .method_hash([243, 86, 164, 183], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `initialize` (0x89232a00) function
        pub fn initialize(
            &self,
            set: ::ethers::core::types::Address,
            trigger: ::ethers::core::types::Address,
            decimals: u8,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([137, 35, 42, 0], (set, trigger, decimals))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `manager` (0x481c6a75) function
        pub fn manager(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([72, 28, 106, 117], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `mint` (0x2ad984e1) function
        pub fn mint(
            &self,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([42, 217, 132, 225], (to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `mints` (0x0bedd3a7) function
        pub fn mints(
            &self,
            p0: ::ethers::core::types::Address,
            p1: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<
            M,
            (::ethers::core::types::U256, u64),
        > {
            self.0
                .method_hash([11, 237, 211, 167], (p0, p1))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `name` (0x06fdde03) function
        pub fn name(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([6, 253, 222, 3], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nonces` (0x7ecebe00) function
        pub fn nonces(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([126, 206, 190, 0], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `permit` (0xd505accf) function
        pub fn permit(
            &self,
            owner: ::ethers::core::types::Address,
            spender: ::ethers::core::types::Address,
            value: ::ethers::core::types::U256,
            deadline: ::ethers::core::types::U256,
            v: u8,
            r: [u8; 32],
            s: [u8; 32],
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [213, 5, 172, 207],
                    (owner, spender, value, deadline, v, r, s),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `set` (0xb8e010de) function
        pub fn set(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([184, 224, 16, 222], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `symbol` (0x95d89b41) function
        pub fn symbol(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([149, 216, 155, 65], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `totalSupply` (0x18160ddd) function
        pub fn total_supply(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([24, 22, 13, 221], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transfer` (0xa9059cbb) function
        pub fn transfer(
            &self,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([169, 5, 156, 187], (to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferFrom` (0x23b872dd) function
        pub fn transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([35, 184, 114, 221], (from, to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `trigger` (0x7fec8d38) function
        pub fn trigger(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([127, 236, 141, 56], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateInactiveTransitionTime` (0x4363b06f) function
        pub fn update_inactive_transition_time(
            &self,
            timestamp: u64,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([67, 99, 176, 111], timestamp)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Approval` event
        pub fn approval_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, ApprovalFilter> {
            self.0.event()
        }
        ///Gets the contract's `Transfer` event
        pub fn transfer_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, TransferFilter> {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, PTokenEvents> {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers_contract::Contract<M>>
    for PToken<M> {
        fn from(contract: ::ethers_contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `Initialized` with signature `Initialized()` and selector `0x5daa87a0`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Initialized", abi = "Initialized()")]
    pub struct Initialized;
    ///Custom Error type `InsufficientBalance` with signature `InsufficientBalance()` and selector `0xf4d678b8`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InsufficientBalance", abi = "InsufficientBalance()")]
    pub struct InsufficientBalance;
    ///Custom Error type `InvalidAddress` with signature `InvalidAddress()` and selector `0xe6c4247b`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidAddress", abi = "InvalidAddress()")]
    pub struct InvalidAddress;
    ///Custom Error type `SafeCastFailed` with signature `SafeCastFailed()` and selector `0x45eef127`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "SafeCastFailed", abi = "SafeCastFailed()")]
    pub struct SafeCastFailed;
    ///Custom Error type `Unauthorized` with signature `Unauthorized()` and selector `0x82b42900`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Unauthorized", abi = "Unauthorized()")]
    pub struct Unauthorized;
    ///Custom Error type `UnpackableString` with signature `UnpackableString()` and selector `0x40a42ef1`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "UnpackableString", abi = "UnpackableString()")]
    pub struct UnpackableString;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum PTokenErrors {
        Initialized(Initialized),
        InsufficientBalance(InsufficientBalance),
        InvalidAddress(InvalidAddress),
        SafeCastFailed(SafeCastFailed),
        Unauthorized(Unauthorized),
        UnpackableString(UnpackableString),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for PTokenErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <Initialized as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Initialized(decoded));
            }
            if let Ok(decoded)
                = <InsufficientBalance as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InsufficientBalance(decoded));
            }
            if let Ok(decoded)
                = <InvalidAddress as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidAddress(decoded));
            }
            if let Ok(decoded)
                = <SafeCastFailed as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SafeCastFailed(decoded));
            }
            if let Ok(decoded)
                = <Unauthorized as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Unauthorized(decoded));
            }
            if let Ok(decoded)
                = <UnpackableString as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UnpackableString(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for PTokenErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::Initialized(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InsufficientBalance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidAddress(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SafeCastFailed(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Unauthorized(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UnpackableString(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers_contract::ContractRevert for PTokenErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <Initialized as ::ethers_contract::EthError>::selector() => true,
                _ if selector
                    == <InsufficientBalance as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidAddress as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <SafeCastFailed as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <Unauthorized as ::ethers_contract::EthError>::selector() => true,
                _ if selector
                    == <UnpackableString as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for PTokenErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::Initialized(element) => ::core::fmt::Display::fmt(element, f),
                Self::InsufficientBalance(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::InvalidAddress(element) => ::core::fmt::Display::fmt(element, f),
                Self::SafeCastFailed(element) => ::core::fmt::Display::fmt(element, f),
                Self::Unauthorized(element) => ::core::fmt::Display::fmt(element, f),
                Self::UnpackableString(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for PTokenErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<Initialized> for PTokenErrors {
        fn from(value: Initialized) -> Self {
            Self::Initialized(value)
        }
    }
    impl ::core::convert::From<InsufficientBalance> for PTokenErrors {
        fn from(value: InsufficientBalance) -> Self {
            Self::InsufficientBalance(value)
        }
    }
    impl ::core::convert::From<InvalidAddress> for PTokenErrors {
        fn from(value: InvalidAddress) -> Self {
            Self::InvalidAddress(value)
        }
    }
    impl ::core::convert::From<SafeCastFailed> for PTokenErrors {
        fn from(value: SafeCastFailed) -> Self {
            Self::SafeCastFailed(value)
        }
    }
    impl ::core::convert::From<Unauthorized> for PTokenErrors {
        fn from(value: Unauthorized) -> Self {
            Self::Unauthorized(value)
        }
    }
    impl ::core::convert::From<UnpackableString> for PTokenErrors {
        fn from(value: UnpackableString) -> Self {
            Self::UnpackableString(value)
        }
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Approval", abi = "Approval(address,address,uint256)")]
    pub struct ApprovalFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub spender: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Transfer", abi = "Transfer(address,address,uint256)")]
    pub struct TransferFilter {
        #[ethevent(indexed)]
        pub from: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum PTokenEvents {
        ApprovalFilter(ApprovalFilter),
        TransferFilter(TransferFilter),
    }
    impl ::ethers_contract::EthLogDecode for PTokenEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = ApprovalFilter::decode_log(log) {
                return Ok(PTokenEvents::ApprovalFilter(decoded));
            }
            if let Ok(decoded) = TransferFilter::decode_log(log) {
                return Ok(PTokenEvents::TransferFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for PTokenEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ApprovalFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<ApprovalFilter> for PTokenEvents {
        fn from(value: ApprovalFilter) -> Self {
            Self::ApprovalFilter(value)
        }
    }
    impl ::core::convert::From<TransferFilter> for PTokenEvents {
        fn from(value: TransferFilter) -> Self {
            Self::TransferFilter(value)
        }
    }
    ///Container type for all input parameters for the `DOMAIN_SEPARATOR` function with signature `DOMAIN_SEPARATOR()` and selector `0x3644e515`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "DOMAIN_SEPARATOR", abi = "DOMAIN_SEPARATOR()")]
    pub struct DomainSeparatorCall;
    ///Container type for all input parameters for the `addInactivePeriod` function with signature `addInactivePeriod()` and selector `0x0d84c97a`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "addInactivePeriod", abi = "addInactivePeriod()")]
    pub struct AddInactivePeriodCall;
    ///Container type for all input parameters for the `allowance` function with signature `allowance(address,address)` and selector `0xdd62ed3e`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "allowance", abi = "allowance(address,address)")]
    pub struct AllowanceCall(
        pub ::ethers::core::types::Address,
        pub ::ethers::core::types::Address,
    );
    ///Container type for all input parameters for the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "approve", abi = "approve(address,uint256)")]
    pub struct ApproveCall {
        pub spender: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "balanceOf", abi = "balanceOf(address)")]
    pub struct BalanceOfCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `balanceOfMatured` function with signature `balanceOfMatured(address)` and selector `0x3489b7a4`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "balanceOfMatured", abi = "balanceOfMatured(address)")]
    pub struct BalanceOfMaturedCall {
        pub user: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `burn` function with signature `burn(address,address,uint216)` and selector `0xeb425cb9`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "burn", abi = "burn(address,address,uint216)")]
    pub struct BurnCall {
        pub caller: ::ethers::core::types::Address,
        pub owner: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `cumulativeMinted` function with signature `cumulativeMinted(address,uint256)` and selector `0xf6eab327`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "cumulativeMinted", abi = "cumulativeMinted(address,uint256)")]
    pub struct CumulativeMintedCall(
        pub ::ethers::core::types::Address,
        pub ::ethers::core::types::U256,
    );
    ///Container type for all input parameters for the `decimals` function with signature `decimals()` and selector `0x313ce567`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "decimals", abi = "decimals()")]
    pub struct DecimalsCall;
    ///Container type for all input parameters for the `getMints` function with signature `getMints(address)` and selector `0x74ce5671`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getMints", abi = "getMints(address)")]
    pub struct GetMintsCall {
        pub user: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `inactivityData` function with signature `inactivityData()` and selector `0xf356a4b7`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "inactivityData", abi = "inactivityData()")]
    pub struct InactivityDataCall;
    ///Container type for all input parameters for the `initialize` function with signature `initialize(address,address,uint8)` and selector `0x89232a00`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "initialize", abi = "initialize(address,address,uint8)")]
    pub struct InitializeCall {
        pub set: ::ethers::core::types::Address,
        pub trigger: ::ethers::core::types::Address,
        pub decimals: u8,
    }
    ///Container type for all input parameters for the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "manager", abi = "manager()")]
    pub struct ManagerCall;
    ///Container type for all input parameters for the `mint` function with signature `mint(address,uint216)` and selector `0x2ad984e1`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "mint", abi = "mint(address,uint216)")]
    pub struct MintCall {
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `mints` function with signature `mints(address,uint256)` and selector `0x0bedd3a7`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "mints", abi = "mints(address,uint256)")]
    pub struct MintsCall(
        pub ::ethers::core::types::Address,
        pub ::ethers::core::types::U256,
    );
    ///Container type for all input parameters for the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "name", abi = "name()")]
    pub struct NameCall;
    ///Container type for all input parameters for the `nonces` function with signature `nonces(address)` and selector `0x7ecebe00`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "nonces", abi = "nonces(address)")]
    pub struct NoncesCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `permit` function with signature `permit(address,address,uint256,uint256,uint8,bytes32,bytes32)` and selector `0xd505accf`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "permit",
        abi = "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
    )]
    pub struct PermitCall {
        pub owner: ::ethers::core::types::Address,
        pub spender: ::ethers::core::types::Address,
        pub value: ::ethers::core::types::U256,
        pub deadline: ::ethers::core::types::U256,
        pub v: u8,
        pub r: [u8; 32],
        pub s: [u8; 32],
    }
    ///Container type for all input parameters for the `set` function with signature `set()` and selector `0xb8e010de`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "set", abi = "set()")]
    pub struct SetCall;
    ///Container type for all input parameters for the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "symbol", abi = "symbol()")]
    pub struct SymbolCall;
    ///Container type for all input parameters for the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "totalSupply", abi = "totalSupply()")]
    pub struct TotalSupplyCall;
    ///Container type for all input parameters for the `transfer` function with signature `transfer(address,uint256)` and selector `0xa9059cbb`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transfer", abi = "transfer(address,uint256)")]
    pub struct TransferCall {
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferFrom", abi = "transferFrom(address,address,uint256)")]
    pub struct TransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `trigger` function with signature `trigger()` and selector `0x7fec8d38`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "trigger", abi = "trigger()")]
    pub struct TriggerCall;
    ///Container type for all input parameters for the `updateInactiveTransitionTime` function with signature `updateInactiveTransitionTime(uint64)` and selector `0x4363b06f`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "updateInactiveTransitionTime",
        abi = "updateInactiveTransitionTime(uint64)"
    )]
    pub struct UpdateInactiveTransitionTimeCall {
        pub timestamp: u64,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers_contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum PTokenCalls {
        DomainSeparator(DomainSeparatorCall),
        AddInactivePeriod(AddInactivePeriodCall),
        Allowance(AllowanceCall),
        Approve(ApproveCall),
        BalanceOf(BalanceOfCall),
        BalanceOfMatured(BalanceOfMaturedCall),
        Burn(BurnCall),
        CumulativeMinted(CumulativeMintedCall),
        Decimals(DecimalsCall),
        GetMints(GetMintsCall),
        InactivityData(InactivityDataCall),
        Initialize(InitializeCall),
        Manager(ManagerCall),
        Mint(MintCall),
        Mints(MintsCall),
        Name(NameCall),
        Nonces(NoncesCall),
        Permit(PermitCall),
        Set(SetCall),
        Symbol(SymbolCall),
        TotalSupply(TotalSupplyCall),
        Transfer(TransferCall),
        TransferFrom(TransferFromCall),
        Trigger(TriggerCall),
        UpdateInactiveTransitionTime(UpdateInactiveTransitionTimeCall),
    }
    impl ::ethers::core::abi::AbiDecode for PTokenCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <DomainSeparatorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DomainSeparator(decoded));
            }
            if let Ok(decoded)
                = <AddInactivePeriodCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::AddInactivePeriod(decoded));
            }
            if let Ok(decoded)
                = <AllowanceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Allowance(decoded));
            }
            if let Ok(decoded)
                = <ApproveCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Approve(decoded));
            }
            if let Ok(decoded)
                = <BalanceOfCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::BalanceOf(decoded));
            }
            if let Ok(decoded)
                = <BalanceOfMaturedCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::BalanceOfMatured(decoded));
            }
            if let Ok(decoded)
                = <BurnCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Burn(decoded));
            }
            if let Ok(decoded)
                = <CumulativeMintedCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CumulativeMinted(decoded));
            }
            if let Ok(decoded)
                = <DecimalsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Decimals(decoded));
            }
            if let Ok(decoded)
                = <GetMintsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetMints(decoded));
            }
            if let Ok(decoded)
                = <InactivityDataCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InactivityData(decoded));
            }
            if let Ok(decoded)
                = <InitializeCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Initialize(decoded));
            }
            if let Ok(decoded)
                = <ManagerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Manager(decoded));
            }
            if let Ok(decoded)
                = <MintCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Mint(decoded));
            }
            if let Ok(decoded)
                = <MintsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Mints(decoded));
            }
            if let Ok(decoded)
                = <NameCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Name(decoded));
            }
            if let Ok(decoded)
                = <NoncesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Nonces(decoded));
            }
            if let Ok(decoded)
                = <PermitCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Permit(decoded));
            }
            if let Ok(decoded)
                = <SetCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Set(decoded));
            }
            if let Ok(decoded)
                = <SymbolCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Symbol(decoded));
            }
            if let Ok(decoded)
                = <TotalSupplyCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TotalSupply(decoded));
            }
            if let Ok(decoded)
                = <TransferCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Transfer(decoded));
            }
            if let Ok(decoded)
                = <TransferFromCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TransferFrom(decoded));
            }
            if let Ok(decoded)
                = <TriggerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Trigger(decoded));
            }
            if let Ok(decoded)
                = <UpdateInactiveTransitionTimeCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::UpdateInactiveTransitionTime(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for PTokenCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DomainSeparator(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::AddInactivePeriod(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Allowance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Approve(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::BalanceOf(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::BalanceOfMatured(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Burn(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::CumulativeMinted(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Decimals(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetMints(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InactivityData(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Initialize(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Manager(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Mint(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Mints(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Name(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Nonces(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Permit(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Set(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Symbol(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TotalSupply(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Transfer(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferFrom(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Trigger(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::UpdateInactiveTransitionTime(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for PTokenCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DomainSeparator(element) => ::core::fmt::Display::fmt(element, f),
                Self::AddInactivePeriod(element) => ::core::fmt::Display::fmt(element, f),
                Self::Allowance(element) => ::core::fmt::Display::fmt(element, f),
                Self::Approve(element) => ::core::fmt::Display::fmt(element, f),
                Self::BalanceOf(element) => ::core::fmt::Display::fmt(element, f),
                Self::BalanceOfMatured(element) => ::core::fmt::Display::fmt(element, f),
                Self::Burn(element) => ::core::fmt::Display::fmt(element, f),
                Self::CumulativeMinted(element) => ::core::fmt::Display::fmt(element, f),
                Self::Decimals(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetMints(element) => ::core::fmt::Display::fmt(element, f),
                Self::InactivityData(element) => ::core::fmt::Display::fmt(element, f),
                Self::Initialize(element) => ::core::fmt::Display::fmt(element, f),
                Self::Manager(element) => ::core::fmt::Display::fmt(element, f),
                Self::Mint(element) => ::core::fmt::Display::fmt(element, f),
                Self::Mints(element) => ::core::fmt::Display::fmt(element, f),
                Self::Name(element) => ::core::fmt::Display::fmt(element, f),
                Self::Nonces(element) => ::core::fmt::Display::fmt(element, f),
                Self::Permit(element) => ::core::fmt::Display::fmt(element, f),
                Self::Set(element) => ::core::fmt::Display::fmt(element, f),
                Self::Symbol(element) => ::core::fmt::Display::fmt(element, f),
                Self::TotalSupply(element) => ::core::fmt::Display::fmt(element, f),
                Self::Transfer(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferFrom(element) => ::core::fmt::Display::fmt(element, f),
                Self::Trigger(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateInactiveTransitionTime(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<DomainSeparatorCall> for PTokenCalls {
        fn from(value: DomainSeparatorCall) -> Self {
            Self::DomainSeparator(value)
        }
    }
    impl ::core::convert::From<AddInactivePeriodCall> for PTokenCalls {
        fn from(value: AddInactivePeriodCall) -> Self {
            Self::AddInactivePeriod(value)
        }
    }
    impl ::core::convert::From<AllowanceCall> for PTokenCalls {
        fn from(value: AllowanceCall) -> Self {
            Self::Allowance(value)
        }
    }
    impl ::core::convert::From<ApproveCall> for PTokenCalls {
        fn from(value: ApproveCall) -> Self {
            Self::Approve(value)
        }
    }
    impl ::core::convert::From<BalanceOfCall> for PTokenCalls {
        fn from(value: BalanceOfCall) -> Self {
            Self::BalanceOf(value)
        }
    }
    impl ::core::convert::From<BalanceOfMaturedCall> for PTokenCalls {
        fn from(value: BalanceOfMaturedCall) -> Self {
            Self::BalanceOfMatured(value)
        }
    }
    impl ::core::convert::From<BurnCall> for PTokenCalls {
        fn from(value: BurnCall) -> Self {
            Self::Burn(value)
        }
    }
    impl ::core::convert::From<CumulativeMintedCall> for PTokenCalls {
        fn from(value: CumulativeMintedCall) -> Self {
            Self::CumulativeMinted(value)
        }
    }
    impl ::core::convert::From<DecimalsCall> for PTokenCalls {
        fn from(value: DecimalsCall) -> Self {
            Self::Decimals(value)
        }
    }
    impl ::core::convert::From<GetMintsCall> for PTokenCalls {
        fn from(value: GetMintsCall) -> Self {
            Self::GetMints(value)
        }
    }
    impl ::core::convert::From<InactivityDataCall> for PTokenCalls {
        fn from(value: InactivityDataCall) -> Self {
            Self::InactivityData(value)
        }
    }
    impl ::core::convert::From<InitializeCall> for PTokenCalls {
        fn from(value: InitializeCall) -> Self {
            Self::Initialize(value)
        }
    }
    impl ::core::convert::From<ManagerCall> for PTokenCalls {
        fn from(value: ManagerCall) -> Self {
            Self::Manager(value)
        }
    }
    impl ::core::convert::From<MintCall> for PTokenCalls {
        fn from(value: MintCall) -> Self {
            Self::Mint(value)
        }
    }
    impl ::core::convert::From<MintsCall> for PTokenCalls {
        fn from(value: MintsCall) -> Self {
            Self::Mints(value)
        }
    }
    impl ::core::convert::From<NameCall> for PTokenCalls {
        fn from(value: NameCall) -> Self {
            Self::Name(value)
        }
    }
    impl ::core::convert::From<NoncesCall> for PTokenCalls {
        fn from(value: NoncesCall) -> Self {
            Self::Nonces(value)
        }
    }
    impl ::core::convert::From<PermitCall> for PTokenCalls {
        fn from(value: PermitCall) -> Self {
            Self::Permit(value)
        }
    }
    impl ::core::convert::From<SetCall> for PTokenCalls {
        fn from(value: SetCall) -> Self {
            Self::Set(value)
        }
    }
    impl ::core::convert::From<SymbolCall> for PTokenCalls {
        fn from(value: SymbolCall) -> Self {
            Self::Symbol(value)
        }
    }
    impl ::core::convert::From<TotalSupplyCall> for PTokenCalls {
        fn from(value: TotalSupplyCall) -> Self {
            Self::TotalSupply(value)
        }
    }
    impl ::core::convert::From<TransferCall> for PTokenCalls {
        fn from(value: TransferCall) -> Self {
            Self::Transfer(value)
        }
    }
    impl ::core::convert::From<TransferFromCall> for PTokenCalls {
        fn from(value: TransferFromCall) -> Self {
            Self::TransferFrom(value)
        }
    }
    impl ::core::convert::From<TriggerCall> for PTokenCalls {
        fn from(value: TriggerCall) -> Self {
            Self::Trigger(value)
        }
    }
    impl ::core::convert::From<UpdateInactiveTransitionTimeCall> for PTokenCalls {
        fn from(value: UpdateInactiveTransitionTimeCall) -> Self {
            Self::UpdateInactiveTransitionTime(value)
        }
    }
    ///Container type for all return fields from the `DOMAIN_SEPARATOR` function with signature `DOMAIN_SEPARATOR()` and selector `0x3644e515`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DomainSeparatorReturn(pub [u8; 32]);
    ///Container type for all return fields from the `allowance` function with signature `allowance(address,address)` and selector `0xdd62ed3e`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AllowanceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ApproveReturn(pub bool);
    ///Container type for all return fields from the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BalanceOfReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `balanceOfMatured` function with signature `balanceOfMatured(address)` and selector `0x3489b7a4`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BalanceOfMaturedReturn {
        pub balance: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `cumulativeMinted` function with signature `cumulativeMinted(address,uint256)` and selector `0xf6eab327`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CumulativeMintedReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `decimals` function with signature `decimals()` and selector `0x313ce567`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DecimalsReturn(pub u8);
    ///Container type for all return fields from the `getMints` function with signature `getMints(address)` and selector `0x74ce5671`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetMintsReturn(pub ::std::vec::Vec<MintData>);
    ///Container type for all return fields from the `inactivityData` function with signature `inactivityData()` and selector `0xf356a4b7`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct InactivityDataReturn {
        pub inactive_transition_time: u64,
    }
    ///Container type for all return fields from the `manager` function with signature `manager()` and selector `0x481c6a75`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ManagerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `mints` function with signature `mints(address,uint256)` and selector `0x0bedd3a7`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MintsReturn {
        pub amount: ::ethers::core::types::U256,
        pub time: u64,
    }
    ///Container type for all return fields from the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NameReturn(pub ::std::string::String);
    ///Container type for all return fields from the `nonces` function with signature `nonces(address)` and selector `0x7ecebe00`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NoncesReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `set` function with signature `set()` and selector `0xb8e010de`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SetReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SymbolReturn(pub ::std::string::String);
    ///Container type for all return fields from the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TotalSupplyReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `transfer` function with signature `transfer(address,uint256)` and selector `0xa9059cbb`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TransferReturn(pub bool);
    ///Container type for all return fields from the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TransferFromReturn(pub bool);
    ///Container type for all return fields from the `trigger` function with signature `trigger()` and selector `0x7fec8d38`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TriggerReturn(pub ::ethers::core::types::Address);
}
