pub use drip_decay_model_constant_factory::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod drip_decay_model_constant_factory {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"costModel\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"ratePerSecond\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"DeployedDripDecayModelConstant\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePerSecond\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"deployModel\",\"outputs\":[{\"internalType\":\"contract DripDecayModelConstant\",\"name\":\"_model\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratePerSecond\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getModel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isDeployed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static DRIPDECAYMODELCONSTANTFACTORY_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        5,
        141,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        65,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        68,
        36,
        150,
        111,
        20,
        97,
        0,
        70,
        87,
        128,
        99,
        109,
        54,
        22,
        148,
        20,
        97,
        0,
        131,
        87,
        128,
        99,
        144,
        24,
        75,
        2,
        20,
        97,
        0,
        150,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        89,
        97,
        0,
        84,
        54,
        96,
        4,
        97,
        3,
        97,
        86,
        91,
        97,
        0,
        201,
        86,
        91,
        96,
        64,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        89,
        97,
        0,
        145,
        54,
        96,
        4,
        97,
        3,
        97,
        86,
        91,
        97,
        1,
        177,
        86,
        91,
        97,
        0,
        185,
        97,
        0,
        164,
        54,
        96,
        4,
        97,
        3,
        122,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        144,
        82,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        122,
        86,
        91,
        96,
        0,
        127,
        4,
        72,
        82,
        178,
        166,
        112,
        173,
        229,
        64,
        126,
        120,
        251,
        40,
        99,
        197,
        29,
        233,
        252,
        185,
        101,
        66,
        160,
        113,
        134,
        254,
        58,
        237,
        166,
        187,
        138,
        17,
        109,
        130,
        96,
        64,
        81,
        97,
        0,
        249,
        144,
        97,
        3,
        84,
        86,
        91,
        144,
        129,
        82,
        96,
        32,
        1,
        129,
        144,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        96,
        0,
        245,
        144,
        80,
        128,
        21,
        128,
        21,
        97,
        1,
        31,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        23,
        144,
        85,
        81,
        145,
        146,
        80,
        144,
        127,
        14,
        134,
        58,
        86,
        184,
        87,
        224,
        179,
        50,
        129,
        2,
        233,
        187,
        4,
        39,
        237,
        101,
        146,
        195,
        87,
        56,
        134,
        184,
        159,
        194,
        112,
        214,
        54,
        174,
        209,
        234,
        143,
        144,
        97,
        1,
        164,
        144,
        133,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        199,
        145,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        144,
        80,
        96,
        0,
        97,
        2,
        70,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        97,
        1,
        237,
        144,
        97,
        3,
        84,
        86,
        91,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        130,
        130,
        3,
        129,
        1,
        131,
        82,
        96,
        31,
        144,
        145,
        1,
        22,
        96,
        64,
        82,
        131,
        48,
        127,
        4,
        72,
        82,
        178,
        166,
        112,
        173,
        229,
        64,
        126,
        120,
        251,
        40,
        99,
        197,
        29,
        233,
        252,
        185,
        101,
        66,
        160,
        113,
        134,
        254,
        58,
        237,
        166,
        187,
        138,
        17,
        109,
        97,
        2,
        135,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        145,
        80,
        96,
        255,
        22,
        97,
        2,
        125,
        87,
        96,
        0,
        97,
        2,
        127,
        86,
        91,
        128,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        133,
        133,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        2,
        157,
        146,
        145,
        144,
        97,
        3,
        231,
        86,
        91,
        96,
        64,
        128,
        81,
        128,
        131,
        3,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        1,
        129,
        82,
        130,
        130,
        82,
        128,
        81,
        96,
        32,
        145,
        130,
        1,
        32,
        127,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        133,
        1,
        82,
        96,
        96,
        151,
        144,
        151,
        27,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        96,
        33,
        132,
        1,
        82,
        96,
        53,
        131,
        1,
        149,
        144,
        149,
        82,
        96,
        85,
        128,
        131,
        1,
        150,
        144,
        150,
        82,
        128,
        81,
        128,
        131,
        3,
        144,
        150,
        1,
        134,
        82,
        96,
        117,
        144,
        145,
        1,
        144,
        82,
        80,
        80,
        129,
        81,
        145,
        1,
        32,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        1,
        91,
        128,
        97,
        3,
        253,
        131,
        57,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        3,
        115,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        3,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        81,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        3,
        216,
        87,
        96,
        32,
        129,
        133,
        1,
        129,
        1,
        81,
        134,
        131,
        1,
        82,
        1,
        97,
        3,
        190,
        86,
        91,
        80,
        96,
        0,
        147,
        1,
        146,
        131,
        82,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        97,
        2,
        127,
        97,
        3,
        246,
        131,
        134,
        97,
        3,
        183,
        86,
        91,
        132,
        97,
        3,
        183,
        86,
        254,
        96,
        160,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        97,
        1,
        91,
        56,
        3,
        128,
        97,
        1,
        91,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        47,
        145,
        97,
        0,
        55,
        86,
        91,
        96,
        128,
        82,
        97,
        0,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        0,
        73,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        128,
        81,
        96,
        237,
        97,
        0,
        110,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        96,
        69,
        1,
        82,
        96,
        125,
        1,
        82,
        96,
        237,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        96,
        15,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        96,
        50,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        64,
        107,
        102,
        39,
        20,
        96,
        55,
        87,
        128,
        99,
        142,
        255,
        26,
        152,
        20,
        96,
        121,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        103,
        96,
        66,
        54,
        96,
        4,
        96,
        159,
        86,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        103,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        96,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        129,
        133,
        33,
        91,
        115,
        191,
        96,
        138,
        48,
        172,
        107,
        189,
        233,
        55,
        75,
        103,
        237,
        133,
        103,
        229,
        72,
        104,
        193,
        243,
        109,
        149,
        220,
        107,
        138,
        240,
        115,
        55,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        247,
        17,
        233,
        161,
        12,
        211,
        136,
        77,
        229,
        130,
        160,
        238,
        115,
        155,
        125,
        238,
        38,
        165,
        174,
        117,
        166,
        60,
        50,
        62,
        104,
        57,
        173,
        181,
        103,
        9,
        4,
        228,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static DRIPDECAYMODELCONSTANTFACTORY_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        65,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        68,
        36,
        150,
        111,
        20,
        97,
        0,
        70,
        87,
        128,
        99,
        109,
        54,
        22,
        148,
        20,
        97,
        0,
        131,
        87,
        128,
        99,
        144,
        24,
        75,
        2,
        20,
        97,
        0,
        150,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        89,
        97,
        0,
        84,
        54,
        96,
        4,
        97,
        3,
        97,
        86,
        91,
        97,
        0,
        201,
        86,
        91,
        96,
        64,
        81,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        89,
        97,
        0,
        145,
        54,
        96,
        4,
        97,
        3,
        97,
        86,
        91,
        97,
        1,
        177,
        86,
        91,
        97,
        0,
        185,
        97,
        0,
        164,
        54,
        96,
        4,
        97,
        3,
        122,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        144,
        82,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        122,
        86,
        91,
        96,
        0,
        127,
        4,
        72,
        82,
        178,
        166,
        112,
        173,
        229,
        64,
        126,
        120,
        251,
        40,
        99,
        197,
        29,
        233,
        252,
        185,
        101,
        66,
        160,
        113,
        134,
        254,
        58,
        237,
        166,
        187,
        138,
        17,
        109,
        130,
        96,
        64,
        81,
        97,
        0,
        249,
        144,
        97,
        3,
        84,
        86,
        91,
        144,
        129,
        82,
        96,
        32,
        1,
        129,
        144,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        96,
        0,
        245,
        144,
        80,
        128,
        21,
        128,
        21,
        97,
        1,
        31,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        22,
        96,
        1,
        23,
        144,
        85,
        81,
        145,
        146,
        80,
        144,
        127,
        14,
        134,
        58,
        86,
        184,
        87,
        224,
        179,
        50,
        129,
        2,
        233,
        187,
        4,
        39,
        237,
        101,
        146,
        195,
        87,
        56,
        134,
        184,
        159,
        194,
        112,
        214,
        54,
        174,
        209,
        234,
        143,
        144,
        97,
        1,
        164,
        144,
        133,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        162,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        199,
        145,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        144,
        80,
        96,
        0,
        97,
        2,
        70,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        97,
        1,
        237,
        144,
        97,
        3,
        84,
        86,
        91,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        130,
        130,
        3,
        129,
        1,
        131,
        82,
        96,
        31,
        144,
        145,
        1,
        22,
        96,
        64,
        82,
        131,
        48,
        127,
        4,
        72,
        82,
        178,
        166,
        112,
        173,
        229,
        64,
        126,
        120,
        251,
        40,
        99,
        197,
        29,
        233,
        252,
        185,
        101,
        66,
        160,
        113,
        134,
        254,
        58,
        237,
        166,
        187,
        138,
        17,
        109,
        97,
        2,
        135,
        86,
        91,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        145,
        80,
        96,
        255,
        22,
        97,
        2,
        125,
        87,
        96,
        0,
        97,
        2,
        127,
        86,
        91,
        128,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        133,
        133,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        2,
        157,
        146,
        145,
        144,
        97,
        3,
        231,
        86,
        91,
        96,
        64,
        128,
        81,
        128,
        131,
        3,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        224,
        1,
        129,
        82,
        130,
        130,
        82,
        128,
        81,
        96,
        32,
        145,
        130,
        1,
        32,
        127,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        130,
        133,
        1,
        82,
        96,
        96,
        151,
        144,
        151,
        27,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        96,
        33,
        132,
        1,
        82,
        96,
        53,
        131,
        1,
        149,
        144,
        149,
        82,
        96,
        85,
        128,
        131,
        1,
        150,
        144,
        150,
        82,
        128,
        81,
        128,
        131,
        3,
        144,
        150,
        1,
        134,
        82,
        96,
        117,
        144,
        145,
        1,
        144,
        82,
        80,
        80,
        129,
        81,
        145,
        1,
        32,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        1,
        91,
        128,
        97,
        3,
        253,
        131,
        57,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        3,
        115,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        3,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        3,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        81,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        3,
        216,
        87,
        96,
        32,
        129,
        133,
        1,
        129,
        1,
        81,
        134,
        131,
        1,
        82,
        1,
        97,
        3,
        190,
        86,
        91,
        80,
        96,
        0,
        147,
        1,
        146,
        131,
        82,
        80,
        144,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        97,
        2,
        127,
        97,
        3,
        246,
        131,
        134,
        97,
        3,
        183,
        86,
        91,
        132,
        97,
        3,
        183,
        86,
        254,
        96,
        160,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        97,
        1,
        91,
        56,
        3,
        128,
        97,
        1,
        91,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        47,
        145,
        97,
        0,
        55,
        86,
        91,
        96,
        128,
        82,
        97,
        0,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        0,
        73,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        128,
        81,
        96,
        237,
        97,
        0,
        110,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        96,
        69,
        1,
        82,
        96,
        125,
        1,
        82,
        96,
        237,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        96,
        15,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        96,
        50,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        64,
        107,
        102,
        39,
        20,
        96,
        55,
        87,
        128,
        99,
        142,
        255,
        26,
        152,
        20,
        96,
        121,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        96,
        103,
        96,
        66,
        54,
        96,
        4,
        96,
        159,
        86,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        103,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        96,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        129,
        133,
        33,
        91,
        115,
        191,
        96,
        138,
        48,
        172,
        107,
        189,
        233,
        55,
        75,
        103,
        237,
        133,
        103,
        229,
        72,
        104,
        193,
        243,
        109,
        149,
        220,
        107,
        138,
        240,
        115,
        55,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        247,
        17,
        233,
        161,
        12,
        211,
        136,
        77,
        229,
        130,
        160,
        238,
        115,
        155,
        125,
        238,
        38,
        165,
        174,
        117,
        166,
        60,
        50,
        62,
        104,
        57,
        173,
        181,
        103,
        9,
        4,
        228,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static DRIPDECAYMODELCONSTANTFACTORY_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct DripDecayModelConstantFactory<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for DripDecayModelConstantFactory<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for DripDecayModelConstantFactory<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for DripDecayModelConstantFactory<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for DripDecayModelConstantFactory<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(DripDecayModelConstantFactory))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> DripDecayModelConstantFactory<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    DRIPDECAYMODELCONSTANTFACTORY_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                DRIPDECAYMODELCONSTANTFACTORY_ABI.clone(),
                DRIPDECAYMODELCONSTANTFACTORY_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `deployModel` (0x4424966f) function
        pub fn deploy_model(
            &self,
            rate_per_second: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([68, 36, 150, 111], rate_per_second)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getModel` (0x6d361694) function
        pub fn get_model(
            &self,
            rate_per_second: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([109, 54, 22, 148], rate_per_second)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isDeployed` (0x90184b02) function
        pub fn is_deployed(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([144, 24, 75, 2], p0)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `DeployedDripDecayModelConstant` event
        pub fn deployed_drip_decay_model_constant_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            DeployedDripDecayModelConstantFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            DeployedDripDecayModelConstantFilter,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for DripDecayModelConstantFactory<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "DeployedDripDecayModelConstant",
        abi = "DeployedDripDecayModelConstant(address,uint256)"
    )]
    pub struct DeployedDripDecayModelConstantFilter {
        #[ethevent(indexed)]
        pub cost_model: ::ethers::core::types::Address,
        pub rate_per_second: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `deployModel` function with signature `deployModel(uint256)` and selector `0x4424966f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "deployModel", abi = "deployModel(uint256)")]
    pub struct DeployModelCall {
        pub rate_per_second: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getModel` function with signature `getModel(uint256)` and selector `0x6d361694`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getModel", abi = "getModel(uint256)")]
    pub struct GetModelCall {
        pub rate_per_second: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `isDeployed` function with signature `isDeployed(address)` and selector `0x90184b02`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "isDeployed", abi = "isDeployed(address)")]
    pub struct IsDeployedCall(pub ::ethers::core::types::Address);
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum DripDecayModelConstantFactoryCalls {
        DeployModel(DeployModelCall),
        GetModel(GetModelCall),
        IsDeployed(IsDeployedCall),
    }
    impl ::ethers::core::abi::AbiDecode for DripDecayModelConstantFactoryCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <DeployModelCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DeployModel(decoded));
            }
            if let Ok(decoded)
                = <GetModelCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetModel(decoded));
            }
            if let Ok(decoded)
                = <IsDeployedCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsDeployed(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for DripDecayModelConstantFactoryCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DeployModel(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetModel(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::IsDeployed(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for DripDecayModelConstantFactoryCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DeployModel(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetModel(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsDeployed(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DeployModelCall> for DripDecayModelConstantFactoryCalls {
        fn from(value: DeployModelCall) -> Self {
            Self::DeployModel(value)
        }
    }
    impl ::core::convert::From<GetModelCall> for DripDecayModelConstantFactoryCalls {
        fn from(value: GetModelCall) -> Self {
            Self::GetModel(value)
        }
    }
    impl ::core::convert::From<IsDeployedCall> for DripDecayModelConstantFactoryCalls {
        fn from(value: IsDeployedCall) -> Self {
            Self::IsDeployed(value)
        }
    }
    ///Container type for all return fields from the `deployModel` function with signature `deployModel(uint256)` and selector `0x4424966f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DeployModelReturn {
        pub model: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `getModel` function with signature `getModel(uint256)` and selector `0x6d361694`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetModelReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `isDeployed` function with signature `isDeployed(address)` and selector `0x90184b02`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct IsDeployedReturn(pub bool);
}
